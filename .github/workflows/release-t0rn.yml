name: t0rn Rococo Release

on:
  push:
    tags:
      # This is a GLOB not a regex. Don't add escape sequences to me
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"

env:
  APPROVERS: AwesomeIbex,MaciejBaj
  PARACHAIN_NAME: t0rn
  RUST_BACKTRACE: full
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build-release:
    runs-on: ["self-hosted", "rust"]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}

      - name: ⚙️ Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-06-16
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: 🏭 Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --manifest-path ./node/${{ env.PARACHAIN_NAME }}-parachain/Cargo.toml --locked --release

      - name: 📤 Upload collator binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}-collator-release-artifacts
          path: ./target/release/${{ env.PARACHAIN_NAME }}-collator
          if-no-files-found: error
          retention-days: 1

      - name: 🫧 Build runtime WASM
        run: |
          ./scripts/build_wasm.sh ${{env.PARACHAIN_NAME}}

      - name: 📤 Upload runtime WASM binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm
          path: ./target/release/wbuild/${{ env.PARACHAIN_NAME }}-parachain-runtime/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm
          if-no-files-found: error
          retention-days: 1

      - name: 📤 Upload runtime WASM hash blake2_256
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.blake2_256
          path: ./target/release/wbuild/${{ env.PARACHAIN_NAME }}-parachain-runtime/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.blake2_256
          if-no-files-found: error
          retention-days: 1

  publish-docker-image:
    runs-on: self-hosted
    needs: build-release
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}

      - name: 🏷️ Get the version tag
        run: echo "PUSHED_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: 📥 Download circuit collator
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}-collator-release-artifacts
          path: ./target/release/

      - name: 🐋 Login to the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🐳 Build and publish the Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/t3rn/${{ env.PARACHAIN_NAME }}-collator:${{ env.PUSHED_TAG }}
          platforms: linux/amd64
          file: collator.${{ env.PARACHAIN_NAME }}.Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  release-on-github:
    runs-on: self-hosted
    needs: build-release
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@v3

      - name: 🏷️ Get the version tag
        run: echo "PUSHED_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: 📥 Download circuit collator
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}-collator-release-artifacts
          path: ./target/release/

      - name: 🎱 Gzip circuit collator
        run: |
          gzip -c ./target/release/${{ env.PARACHAIN_NAME }}-collator \
          > ./target/release/${{ env.PARACHAIN_NAME }}-collator.gz

      - name: 🖐🏾 Fingerprint the gball
        run: |
          sha256sum -b ./target/release/${{ env.PARACHAIN_NAME }}-collator.gz \
          | grep -oE '^[a-f0-9]+' \
          | tr -d '\n' \
          > ./target/release/${{ env.PARACHAIN_NAME }}-collator.gz.sha256sum

      - name: 📥 Download runtime WASM
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm
          path: ./target/release/

      - name: 🖐🏾 Fingerprint the runtime WASM
        run: |
          sha256sum -b ./target/release/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm \
          | grep -oE '^[a-f0-9]+' \
          | tr -d '\n' \
          > ./target/release/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.sha256sum

      - name: 📥 Download runtime WASM hash blake2_256
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.blake2_256
          path: ./target/release/

      - name: 🐙 Create a GitHub release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: ${{ env.PUSHED_TAG }}
          release_name: ${{ env.PUSHED_TAG }}
          draft: false
          prerelease: true

      - name: 🍔 Provide the circuit collator sha256sum as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ env.PARACHAIN_NAME }}-collator.gz.sha256sum
          asset_name: ${{ env.PARACHAIN_NAME }}-collator-${{ env.PUSHED_TAG }}-x86_64-unknown-linux-gnu.gz.sha256sum
          asset_content_type: text/plain

      - name: 📦 Upload the circuit collator gball as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ env.PARACHAIN_NAME }}-collator.gz
          asset_name: ${{ env.PARACHAIN_NAME }}-collator-${{ env.PUSHED_TAG }}-x86_64-unknown-linux-gnu.gz
          asset_content_type: application/gzip

      - name: 🍔 Provide the runtime WASM sha256sum as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.sha256sum
          asset_name: ${{ env.PARACHAIN_NAME }}-parachain-runtime-${{ env.PUSHED_TAG }}.compact.compressed.wasm.sha256sum
          asset_content_type: text/plain

      - name: 🍔 Provide the runtime WASM blake2_256 as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.blake2_256
          asset_name: ${{ env.PARACHAIN_NAME }}-parachain-runtime-${{ env.PUSHED_TAG }}.compact.compressed.wasm.blake2_256
          asset_content_type: text/plain

      - name: 📦 Upload the runtime WASM as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm
          asset_name: ${{ env.PARACHAIN_NAME }}-parachain-runtime-${{ env.PUSHED_TAG }}.compact.compressed.wasm
          asset_content_type: text/plain

  run-smoke-tests:
    runs-on: ["self-hosted", "rust"]
    needs: release-on-github
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: ⚙️ Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-06-16
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true
      - name: 📼 Run zombienet runtime upgrade test
        continue-on-error: false
        working-directory: tests/zombienet
        run: ./zombienet.sh upgrade t0rn

  deploy-to-rococo:
    runs-on: self-hosted
    needs: run-smoke-tests
    steps:
      - name: 🏷️ Get the version tag
        run: echo "PUSHED_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: 📥 Download runtime WASM
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm
          path: ./target/release/

      - name: 📥 Download runtime WASM hash blake2_256
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-${{ env.PARACHAIN_NAME }}_parachain_runtime.compact.compressed.wasm.blake2_256
          path: ./target/release/

      - name: 🚀 t0rn Runtime Upgrade Dry Run
        run: |
          ./scripts/upgrade-runtime-set-code.sh ${{ secrets.RUNTIME_UPGRADE_SEED }} ${{ env.PUSHED_TAG }} ${{ env.PARACHAIN_NAME }} --dry-run

      - name: Approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 300
        with:
          secret: ${{ secrets.GH_PAT }}
          approvers: ${{ env.APPROVERS }}
          minimum-approvals: 1
          issue-title: "Release ${{ env.PARACHAIN_NAME }} ${{ env.PUSHED_TAG }}"
          issue-body: "Please approve the release of ${{ env.PARACHAIN_NAME }} ${{ env.PUSHED_TAG }}"

      - name: 🚀 t0rn Runtime Upgrade
        run: |
          ./scripts/upgrade-runtime-set-code.sh ${{ secrets.RUNTIME_UPGRADE_SEED }} ${{ env.PUSHED_TAG }} ${{ env.PARACHAIN_NAME }}
