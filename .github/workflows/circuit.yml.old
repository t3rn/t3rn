name: Circuit CI

on:
  pull_request:
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - .github/workflows/circuit.yml

env:
  RUST_BACKTRACE: 1

jobs:
  format:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          profile: minimal
          components: rustfmt
          override: true

      - name: 📜 Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: |
            --go.toml -- --check

  lint:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: 🕒 Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: llvm-circuit

      - name: 🔨 Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12.0.0"
          ubuntu-version: "20.04"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          components: clippy
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            circuit/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit/Cargo.lock') }}

      - name: 📑 Lint code
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: |
            -p circuit
            -p circuit-runtime
            -p pallet-circuit-execution-delivery
            -p pallet-contracts-registry
            -p pallet-xdns
            -p t3rn-primitives
            -p pallet-beefy-mmr
            -p beefy-merkle-tree
            --manifest-path circuit/Cargo.toml

  build-test:
    runs-on: self-hosted
    needs: [format, lint]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: 🕒 Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: llvm-circuit

      - name: 🔨 Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12.0.0"
          ubuntu-version: "20.04"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            circuit/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit/Cargo.lock') }}

      - name: 🏭 Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --locked --manifest-path circuit/Cargo.toml

      - name: 📼 Run unit tests
        continue-on-error: false
        run: |
          chmod +x circuit/target/debug/circuit
          circuit/target/debug/circuit circuit --alice --tmp --ws-port 9900 > /dev/null 2>&1 &
          cargo test --workspace --locked --features runtime-benchmarks --manifest-path circuit/Cargo.toml

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: 🧶 Install yarn
        run: npm install -g yarn

      - name: 🏗 Install deps
        working-directory: client
        run: yarn --locked

      - name: 🔹 Compile types
        working-directory: client/types
        run: yarn build

      # Updates the node_modules first to make sure we grab the compiled types
      - name: 🦾 Run integration tests
        working-directory: client/circuit-integration-tests
        env:
          CIRCUIT_WS_URL: ws://127.0.0.1:9900
        run: |
          rm -rf node_modules
          yarn
          yarn test
