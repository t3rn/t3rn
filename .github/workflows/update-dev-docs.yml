# This is a basic workflow to help you get started with Actions

name: Deploy Documentation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  rust:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: ⚙️ Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-01-24
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true
      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Generate Rust Docs
        uses: actions-rs/cargo@v1
        continue-on-error: false
        env:
          RUSTDOCFLAGS: --enable-index-page -Zunstable-options
        with:
          command: doc
          args:
            --no-deps
            --workspace
            --exclude pallet-xbi-portal
            --exclude t3rn-protocol
            --exclude pallet-xbi-portal-enter
            --exclude circuit-runtime-pallets
            --exclude circuit-mock-runtime
            --exclude circuit-standalone-runtime
            --exclude t0rn-parachain-runtime
            --exclude t3rn-parachain-runtime
            --exclude t0rn-parachain-collator
            --exclude t3rn-parachain-collator
            --exclude snowbridge-core
            --exclude snowbridge-runtime-primitives
            --exclude snowbridge-testutils
            --exclude snowbridge-xcm-support
      - name: 👾 Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--force'
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID}}
          vercel-project-id: ${{ secrets.VERCEL_CHAIN_DOCS_PROJECT_ID}}
          working-directory: target/doc
          scope: "t3rn"
          alias-domains: |
            docs.chain.t3rn.io
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs/main
    timeout-minutes: 15
    if: "!contains(github.event.head_commit.message, 'skip cd')"
    steps:
      - name: 🎞️ Checkout repo
        uses: actions/checkout@v3
        with:
          repository: t3rn/t3rn
          fetch-depth: 1
      - name: 📦 Install packages
        run: yarn
      - name: 🏗 Build
        run: yarn build
      - name: 👾 Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--force'
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID}}
          vercel-project-id: ${{ secrets.VERCEL_DOCS_PROJECT_ID}}
          scope: "t3rn"
          alias-domains: |
            docs.t3rn.io
  executor:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/packages
    timeout-minutes: 15
    if: "!contains(github.event.head_commit.message, 'skip cd')"
    steps:
      - name: 🎞️ Checkout repo
        uses: actions/checkout@v3
        with:
          repository: t3rn/t3rn
          fetch-depth: 1
      - name: Build local dependencies
        run: make
      - name: 📦 Install packages
        run: yarn
        working-directory: client/packages/executor
      - name: 🏗 Build Docs
        run: yarn build-docs
        working-directory: client/packages/executor
      - name: 👾 Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--force'
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID}}
          vercel-project-id: ${{ secrets.VERCEL_EXECUTOR_DOCS_PROJECT_ID}}
          scope: "t3rn"
          alias-domains: |
            docs.executor.t3rn.io
  ts-sdk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/packages
    timeout-minutes: 15
    if: "!contains(github.event.head_commit.message, 'skip cd')"
    steps:
      - name: 🎞️ Checkout repo
        uses: actions/checkout@v3
        with:
          repository: t3rn/t3rn
          fetch-depth: 1
      - name: Build local dependencies
        run: make
      - name: 📦 Install packages
        run: yarn
        working-directory: client/packages/sdk
      - name: 🏗 Build Docs
        run: yarn build:docs
        working-directory: client/packages/sdk
      - name: 👾 Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--force'
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID}}
          vercel-project-id: ${{ secrets.VERCEL_TS_SDK_DOCS_PROJECT_ID}}
          scope: "t3rn"
          alias-domains: |
            docs.ts-sdk.t3rn.io