name: Circuit Parachain Release

on:
  push:
    branches:
      - development
    paths:
      - ./**/*.rs
      - ./**/Cargo.toml
      - ./**/Cargo.lock
      - pallets/**/*.rs
      - pallets/**/Cargo.toml
      - pallets/**/Cargo.lock
      - .github/workflows/circuit-parachain-release.yml
  release:
    types:
      - prereleased
      - released

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    runs-on: ubuntu-20.04
    steps:
      - name: ‚òÅ Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: ‚öôÔ∏èGet nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: üïí Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('./Cargo.lock') }}

      - name: üè≠ Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --locked --manifest-path ./Cargo.toml --release

      - name: üì§ Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-parachain-release-artifacts
          path: ./target/release/circuit-collator
          if-no-files-found: error
          retention-days: 1

  push-to-docker:
    runs-on: ubuntu-20.04
    needs: [build-release]
    steps:
      - name: ‚òÅÔ∏èCheckout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: üïí Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: üì• Download circuit
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-parachain-release-artifacts
          path: ./target/release/
      - name: üêã Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: üê≥ Build & Publish Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: t3rn/circuit-parachain:latest
          platforms: linux/amd64
          file: docker/circuit-parachain.Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  release-on-github:
    runs-on: ubuntu-20.04
    needs: build-release
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: üì• Download circuit parachain
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-parachain-release-artifacts
          path: ./target/release/

      - name: üé± Gzip circuit parachain
        run: |
          gzip -c ./target/release/parachain-collator \
          > ./target/release/parachain-collator.gz

      - name: üñêüèæ Fingerprint the gball
        run: |
          sha256sum -b ./target/release/parachain-collator.gz \
          | grep -oE '^[a-f0-9]+' \
          | tr -d '\n' \
          > ./target/release/parachain-collator.gz.sha256sum

      - name: üè∑Ô∏è Get the version tag
        run: echo "PUSHED_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: üçî Provide the sha256sum as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/parachain-collator.gz.sha256sum
          asset_name: t3rn-circuit-parachain-collator-${{ env.PUSHED_TAG }}-x86_64-unknown-linux-gnu.gz.sha256sum
          asset_content_type: text/plain

      - name: üì¶ Upload the circuit parachain collator gball as a release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/parachain-collator.gz
          asset_name: t3rn-circuit-parachain-collator-${{ env.PUSHED_TAG }}-x86_64-unknown-linux-gnu.gz
          asset_content_type: application/gzip
