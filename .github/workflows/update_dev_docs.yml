# This is a basic workflow to help you get started with Actions

name: update docs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  rust:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
#        run: git submodule deinit --all && git submodule init && git submodule update
      - name: ⚙️ Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true
      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Generate Docs
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: doc
          args: --no-deps --workspace --exclude t3rn-protocol
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.RUSTDOCS_SSH_SECRET }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.ATLAS_IP }} >> ~/.ssh/known_hosts
      - name: Deploy with rsync
        run: rsync -avz ./target/doc ${{ secrets.RUSTDOCS_SSH_USER }}@${{ secrets.ATLAS_IP }}:/home/${{ secrets.RUSTDOCS_SSH_USER }}/
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs/main
    timeout-minutes: 15
    if: "!contains(github.event.head_commit.message, 'skip cd')"
    steps:
      - name: 🎞️ Checkout repo
        uses: actions/checkout@v3
        with:
          repository: t3rn/t3rn
          fetch-depth: 1
      - name: 📦 Install packages
        run: yarn
      - name: 🏗 Build
        run: yarn build
      - name: 👾 Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--force'
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID}}
          vercel-project-id: ${{ secrets.VERCEL_DOCS_PROJECT_ID}}
          scope: "t3rn"
          alias-domains: |
            docs.t3rn.io
