[package]
authors     = { workspace = true }
description = "Circuit parachain runtime pallets"
edition     = { workspace = true }
homepage    = { workspace = true }
license     = { workspace = true }
name        = "circuit-runtime-pallets"
repository  = { workspace = true }
version     = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
codec       = { workspace = true, package = "parity-scale-codec" }
hex-literal = { workspace = true, optional = true }
log         = { workspace = true }
scale-info  = { workspace = true }
serde       = { workspace = true, optional = true }
smallvec    = { workspace = true, default-features = false }

# Substrate
frame-executive              = { workspace = true }
frame-support                = { workspace = true }
frame-system                 = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }

# Enabled by flags
frame-benchmarking        = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-try-runtime         = { workspace = true, optional = true }

sp-api              = { workspace = true }
sp-block-builder    = { workspace = true }
sp-consensus-aura   = { workspace = true }
sp-core             = { workspace = true }
sp-inherents        = { workspace = true }
sp-io               = { workspace = true }
sp-offchain         = { workspace = true }
sp-runtime          = { workspace = true }
sp-session          = { workspace = true }
sp-std              = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version          = { workspace = true }

pallet-asset-tx-payment                    = { workspace = true }
pallet-assets                              = { workspace = true }
pallet-aura                                = { workspace = true }
pallet-authorship                          = { workspace = true }
pallet-balances                            = { workspace = true }
pallet-identity                            = { workspace = true }
pallet-membership                          = { workspace = true }
pallet-preimage                            = { workspace = true }
pallet-randomness-collective-flip          = { workspace = true }
pallet-scheduler                           = { workspace = true }
pallet-session                             = { workspace = true }
pallet-sudo                                = { workspace = true }
pallet-timestamp                           = { workspace = true }
pallet-transaction-payment                 = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility                             = { workspace = true }

# Standalone
pallet-babe    = { workspace = true }
pallet-grandpa = { workspace = true }

# Polkadot
pallet-xcm                 = { workspace = true }
polkadot-parachain         = { workspace = true }
polkadot-runtime-common    = { workspace = true }
polkadot-runtime-constants = { workspace = true }
xcm                        = { workspace = true }
xcm-builder                = { workspace = true }
xcm-executor               = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext             = { workspace = true }
cumulus-pallet-dmp-queue            = { workspace = true }
cumulus-pallet-parachain-system     = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-xcm                  = { workspace = true }
cumulus-pallet-xcmp-queue           = { workspace = true }
cumulus-primitives-core             = { workspace = true }
cumulus-primitives-timestamp        = { workspace = true }
cumulus-primitives-utility          = { workspace = true }
pallet-collator-selection           = { workspace = true }
parachain-info                      = { workspace = true }
parachains-common                   = { workspace = true }

# t3rn Deps
t3rn-primitives = { default-features = false, path = "../../primitives" }
t3rn-types      = { default-features = false, path = "../../types", features = [ "runtime" ] }

# t3rn pallets
pallet-attesters                 = { path = "../../pallets/attesters", default-features = false }
pallet-account-manager           = { path = "../../pallets/account-manager", default-features = false }
pallet-asset-registry            = { workspace = true }
pallet-circuit                   = { path = "../../pallets/circuit", package = "pallet-circuit", default-features = false }
pallet-clock                     = { path = "../../pallets/clock", default-features = false }
pallet-contracts-registry        = { path = "../../pallets/contracts-registry", default-features = false }
pallet-grandpa-finality-verifier = { path = "../../finality-verifiers/grandpa", default-features = false }
pallet-portal                    = { path = "../../pallets/portal", default-features = false }
pallet-portal-rpc-runtime-api    = { path = "../../pallets/portal/rpc/runtime-api", default-features = false }
pallet-xbi-portal                = { workspace = true }
pallet-xdns                      = { path = "../../pallets/xdns", default-features = false }
pallet-xdns-rpc-runtime-api      = { path = "../../pallets/xdns/rpc/runtime-api", default-features = false }
pallet-vacuum                    = { path = "../../pallets/circuit/vacuum", package = "pallet-circuit-vacuum", default-features = false }
pallet-eth2-finality-verifier    = { git = "https://github.com/t3rn/eth2-light-client", branch = "main-polkadot-v1.0.0", default-features = false }
pallet-sepolia-finality-verifier = { git = "https://github.com/t3rn/eth2-light-client", branch = "sepolia-polkadot-v1.0.0", default-features = false }
pallet-rewards                   = { path = "../../pallets/rewards", default-features = false }

# Smart contracts VMs
evm-precompile-util             = { default-features = false, path = "../../pallets/evm/precompile/util", package = "precompile-util" }
pallet-3vm                      = { default-features = false, path = "../../pallets/3vm" }
pallet-3vm-contracts            = { default-features = false, path = "../../pallets/contracts", package = "pallet-contracts" }
pallet-3vm-contracts-primitives = { default-features = false, path = "../../pallets/contracts/primitives", package = "pallet-contracts-primitives" }
pallet-3vm-evm                  = { default-features = false, path = "../../pallets/evm", package = "pallet-evm" }
pallet-3vm-evm-primitives       = { default-features = false, path = "../../pallets/evm/primitives", package = "fp-evm" }

[features]
default = [ "std" ]
std = [
  "codec/std",
  "log/std",
  "scale-info/std",
  "serde/std",
  "cumulus-pallet-aura-ext/std",
  "cumulus-pallet-dmp-queue/std",
  "cumulus-pallet-parachain-system/std",
  "cumulus-pallet-xcm/std",
  "cumulus-pallet-session-benchmarking/std",
  "cumulus-pallet-xcmp-queue/std",
  "cumulus-primitives-core/std",
  "cumulus-primitives-timestamp/std",
  "cumulus-primitives-utility/std",
  "frame-executive/std",
  "frame-support/std",
  "frame-system-rpc-runtime-api/std",
  "frame-system/std",
  "pallet-aura/std",
  "pallet-assets/std",
  "pallet-asset-registry/std",
  "pallet-asset-tx-payment/std",
  "pallet-authorship/std",
  "pallet-balances/std",
  "pallet-grandpa-finality-verifier/std",
  "pallet-identity/std",
  "pallet-portal/std",
  "pallet-portal-rpc-runtime-api/std",
  "pallet-utility/std",
  "polkadot-runtime-constants/std",
  "pallet-collator-selection/std",
  "pallet-3vm/std",
  "pallet-3vm-contracts/std",
  "pallet-3vm-contracts-primitives/std",
  "pallet-3vm-evm/std",
  "pallet-3vm-evm-primitives/std",
  "evm-precompile-util/std",
  "pallet-account-manager/std",
  "pallet-preimage/std",
  'pallet-scheduler/std',
  "pallet-session/std",
  "pallet-sudo/std",
  "pallet-membership/std",
  "pallet-clock/std",
  "pallet-xbi-portal/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment-rpc-runtime-api/std",
  "pallet-transaction-payment/std",
  "parachains-common/std",
  "pallet-xcm/std",
  "parachain-info/std",
  "polkadot-parachain/std",
  "polkadot-runtime-common/std",
  "smallvec/write",
  "sp-api/std",
  "sp-block-builder/std",
  "sp-consensus-aura/std",
  "sp-core/std",
  "sp-inherents/std",
  "sp-io/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "sp-std/std",
  "sp-transaction-pool/std",
  "sp-version/std",
  "xcm-builder/std",
  "xcm-executor/std",
  "xcm/std",
  "pallet-randomness-collective-flip/std",
  "t3rn-primitives/std",
  "t3rn-types/std",
  "pallet-xdns/std",
  "pallet-xdns-rpc-runtime-api/std",
  "pallet-contracts-registry/std",
  "pallet-circuit/std",
  "pallet-grandpa/std",
  "pallet-babe/std",
  "pallet-attesters/std",
  "pallet-rewards/std",
  "pallet-vacuum/std",
  "pallet-eth2-finality-verifier/std",
  "pallet-sepolia-finality-verifier/std",
]

runtime-benchmarks = [
  "hex-literal",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system-benchmarking",
  "frame-system/runtime-benchmarks",
  "pallet-account-manager/runtime-benchmarks",
  "pallet-assets/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-contracts-registry/runtime-benchmarks",
  "pallet-collator-selection/runtime-benchmarks",
  "pallet-timestamp/runtime-benchmarks",
  "pallet-xcm/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
  "xcm-builder/runtime-benchmarks",
  "cumulus-pallet-session-benchmarking/runtime-benchmarks",
  "cumulus-pallet-parachain-system/runtime-benchmarks",
  "cumulus-pallet-xcmp-queue/runtime-benchmarks",
  "pallet-3vm/runtime-benchmarks",
  "pallet-asset-registry/runtime-benchmarks",
  "pallet-babe/runtime-benchmarks",
  "pallet-circuit/runtime-benchmarks",
  "pallet-clock/runtime-benchmarks",
  "pallet-3vm-contracts/runtime-benchmarks",
  "pallet-3vm-evm/runtime-benchmarks",
  "pallet-vacuum/runtime-benchmarks",
  "pallet-grandpa/runtime-benchmarks",
  "pallet-grandpa-finality-verifier/runtime-benchmarks",
  "pallet-identity/runtime-benchmarks",
  "pallet-membership/runtime-benchmarks",
  "pallet-preimage/runtime-benchmarks",
  "pallet-scheduler/runtime-benchmarks",
  "pallet-utility/runtime-benchmarks",
  "pallet-sudo/runtime-benchmarks",
  "pallet-xbi-portal/runtime-benchmarks",
  "pallet-xdns/runtime-benchmarks",
  "pallet-attesters/runtime-benchmarks",
  "pallet-rewards/runtime-benchmarks",
  "pallet-vacuum/runtime-benchmarks",
  "polkadot-parachain/runtime-benchmarks",
  "polkadot-runtime-common/runtime-benchmarks",
  "xcm-executor/runtime-benchmarks",
  "pallet-eth2-finality-verifier/runtime-benchmarks",
  "pallet-sepolia-finality-verifier/runtime-benchmarks",
  "pallet-asset-tx-payment/runtime-benchmarks",
]
try-runtime = [
  "frame-support/try-runtime",
  "frame-system/try-runtime",
  "frame-executive/try-runtime",
  "frame-try-runtime",
  "pallet-assets/try-runtime",
  "pallet-transaction-payment/try-runtime",
  "pallet-asset-tx-payment/try-runtime",
  "pallet-asset-registry/try-runtime",
  "pallet-randomness-collective-flip/try-runtime",
  "pallet-timestamp/try-runtime",
  "pallet-aura/try-runtime",
  "pallet-authorship/try-runtime",
  "pallet-babe/try-runtime",
  "pallet-balances/try-runtime",
  "polkadot-runtime-common/try-runtime",
  "pallet-3vm/try-runtime",
  "pallet-3vm-contracts/try-runtime",
  "pallet-vacuum/try-runtime",
  "pallet-collator-selection/try-runtime",
  "pallet-identity/try-runtime",
  "pallet-utility/try-runtime",
  "pallet-circuit/try-runtime",
  "pallet-clock/try-runtime",
  "pallet-xdns/try-runtime",
  "pallet-attesters/try-runtime",
  "pallet-rewards/try-runtime",
  "pallet-contracts-registry/try-runtime",
  "pallet-circuit/try-runtime",
  "pallet-grandpa/try-runtime",
  "pallet-babe/try-runtime",
  "pallet-account-manager/try-runtime",
  "pallet-membership/try-runtime",
  "pallet-preimage/try-runtime",
  "pallet-scheduler/try-runtime",
  "pallet-session/try-runtime",
  "pallet-sudo/try-runtime",
  "pallet-eth2-finality-verifier/try-runtime",
  "pallet-sepolia-finality-verifier/try-runtime",
  "cumulus-pallet-aura-ext/try-runtime",
  "cumulus-pallet-dmp-queue/try-runtime",
  "cumulus-pallet-parachain-system/try-runtime",
  "cumulus-pallet-xcm/try-runtime",
  "cumulus-pallet-xcmp-queue/try-runtime",
  "pallet-3vm-evm/try-runtime",
  "pallet-xcm/try-runtime",
  "parachain-info/try-runtime",
  "sp-runtime/try-runtime",
]
