var searchIndex = JSON.parse('{\
"circuit_runtime_types":{"doc":"","t":[17,6,6,6,6,6,3,3,6,3,17,17,17,17,6,6,6,17,17,17,17,17,17,17,3,6,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AVERAGE_ON_INITIALIZE_RATIO","AccountId","Address","Amount","AssetId","Balance","BlockHashCount","BlockLength","BlockNumber","BlockWeights","CONTRACTS_DEBUG_OUTPUT","DAYS","EXISTENTIAL_DEPOSIT","HOURS","Hash","Header","Index","MAXIMUM_BLOCK_WEIGHT","MICROUNIT","MILLISECS_PER_BLOCK","MILLIUNIT","MINUTES","NORMAL_DISPATCH_RATIO","SLOT_DURATION","SS58Prefix","Signature","UNIT","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":["circuit_runtime_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["We assume that ~10% of the block weight is consumed by …","Some way of identifying an account on the chain. We …","The address format for describing accounts.","Balance of an account.","Asset Id.","Balance of an account.","","","An index to a block.","We allow for 2 seconds of compute with a 6 second average …","","","The existential deposit. Set to 1/10 of the Connected …","","A hash of some data used by the chain.","Block header type as expected by this runtime.","Index of a transaction in the chain.","We allow for 0.5 of a second of compute with a 12 second …","","This determines the average expected block time that we …","","","","","","Alias to 512-bit hash when used in the context of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,14,15,15,16,16,17,17,14,14,15,15,16,16,17,17,14,14,14,15,15,15,16,16,16,17,17,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],[[4,[3]]]],[[],[[4,[5]]]],[[],5],[[],5],[[],6],[[],6],[[],[[4,[6]]]],[[],7],[[],7],[[],[[4,[7]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[[[9,[8]]],[[9,[1,8]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[6,"BlockNumber"],[8,"From"],[3,"BlockWeights"],[3,"BlockLength"],[15,"u8"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[3,"BlockHashCount"],[3,"BlockWeights"],[3,"BlockLength"],[3,"SS58Prefix"]]},\
"circuit_standalone":{"doc":"Substrate Node Template CLI library.","t":[0,0,0,5,0,0,6,6,17,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,4,3,13,6,6,13,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["chain_spec","cli","command","main","rpc","service","AccountPublic","ChainSpec","REVERT_BYTECODE","authority_keys_from_seed","development_config","fetch_gtwy_init_data","fetch_xdns_record_from_rpc","get_account_id_from_seed","get_from_seed","initial_gateways","is_relaychain","local_testnet_config","seed_xdns_registry","standard_side_effects","testnet_genesis","Benchmark","BuildSpec","CheckBlock","Cli","ExportBlocks","ExportState","ImportBlocks","Key","PurgeChain","Revert","Subcommand","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","borrow","borrow","borrow_mut","borrow_mut","copyright_start_year","deref","deref","deref_mut","deref_mut","description","drop","drop","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","has_subcommand","impl_name","impl_version","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_app","into_app_for_update","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","load_spec","native_runtime_version","run","subcommand","support_url","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","0","0","0","0","0","0","0","0","0","run","DenyUnsafe","FullDeps","No","RpcExtension","SubscriptionTaskExecutor","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","pool","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ExecutorDispatch","FullBackend","FullClient","FullSelectChain","NativeElseWasmExecutor","__clone_box","_dummy","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deref","deref","deref_mut","deref_mut","dispatch","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","native_version","native_version","native_version","new","new_full","new_partial","read_runtime_version","remote_keystore","runtime_version","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","wasm"],"q":["circuit_standalone","","","","","","circuit_standalone::chain_spec","","","","","","","","","","","","","","","circuit_standalone::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","circuit_standalone::cli::Subcommand","","","","","","","","","circuit_standalone::command","circuit_standalone::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","circuit_standalone::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","","Specialized <code>ChainSpec</code>. This is a specialization of the …","","Generate an Aura authority key.","","Fetches gateway initialization data by chain id.","Helper function that fetches metadata from live networks …","Generate an account ID from seed.","Generate a crypto pair from seed.","Lists initialization data for indicated gateways.","","","Helper function to generate XdnsRecords from RPC.","","Configure initial storage state for FRAME modules.","The custom benchmark subcommand benchmarking runtime …","Build a chain specification.","Validate blocks.","","Export blocks.","Export the state of a given block into a chain spec.","Import blocks.","Key management CLI utilities","Remove the whole chain.","Revert the chain to a previous state.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse and run command line arguments","Signifies whether a potentially unsafe RPC should be …","Full client dependencies","Allows calling every RPCs.","A type representing all RPC extensions.","Task executor that is being used by RPC subscriptions.","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","","","","","","","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","Dummy field to avoid the compiler complaining about us not …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Native runtime version info.","Create new instance.","Builds a new service for a full client.","","","","","","","","","","","","","","","","","","","","","","Fallback wasm executor."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,0,23,23,23,23,23,23,0,20,23,20,23,20,20,23,23,20,20,23,20,23,20,20,23,20,23,20,20,23,20,23,20,23,20,23,20,23,20,20,23,23,20,20,23,23,20,23,23,20,20,20,23,20,23,20,23,20,23,20,23,20,20,20,23,20,23,20,23,20,20,20,20,20,20,23,20,23,20,23,20,23,20,23,20,23,20,23,20,23,20,23,20,23,62,63,64,65,66,67,68,69,70,0,0,0,35,0,0,35,35,35,37,35,37,35,37,35,37,35,37,35,35,0,37,35,37,35,37,35,37,35,35,37,35,35,37,37,35,35,37,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,37,35,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,0,0,0,0,0,41,41,41,53,41,53,41,53,41,53,41,41,41,41,53,41,53,53,41,53,41,53,41,41,53,53,41,41,53,53,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41,41,0,0,41,0,41,41,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41,53,41],"f":[0,0,0,[[],1],0,0,0,0,0,[2],[[],[[6,[[4,[3]],5]]]],[7,[[6,[[9,[8]],10]]]],[[2,7],[[6,[[12,[11]],10]]]],[2,11],[2],[[[13,[7]]],[[6,[[13,[[9,[8]]]],10]]]],[7,14],[[],[[6,[[4,[3]],5]]]],[[],[[6,[[13,[[12,[11]]]],10]]]],[[],[[13,[15]]]],[[13,11,[13,[11]],[13,[[12,[11]]]],[13,[15]],[13,[[9,[8]]]],14],3],0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[17,17],[17,17],[17,17],[17,17],[[],5],[[]],[[]],[[]],[[]],[[],18],[19],[19],[19],[19],[[],5],[19],[19],[[20,21],22],[[23,21],22],[[]],[[]],[24,[[6,[20,25]]]],[24,[[6,[23,25]]]],[24,[[6,[20,25]]]],[24,[[6,[23,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,14],[[],5],[[],5],[[],19],[[],19],[[]],[[]],[[[27,[26]]],[[27,[16,26]]]],[[[27,[26]]],[[27,[16,26]]]],[28,[[28,[16]]]],[28,[[28,[16]]]],[29,[[29,[16]]]],[29,[[29,[16]]]],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],14],[[],14],[[20,2],[[6,[[27,[30]],5]]]],[27,31],0,0,[[],5],[[],32],[[],32],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[]],[[]],[[]],[[]],[[20,24],[[6,[25]]]],[[23,24],[[6,[25]]]],[[20,24],[[6,[25]]]],[[23,24],[[6,[25]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,[34],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[35,[[6,[36]]]],0,[35,35],[[]],[37,[[6,[38,[27,[39]]]]]],0,[19],[19],[19],[19],[19],[19],[[35,21],[[6,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[]],[[]],[[[27,[26]]],[[27,[16,26]]]],[[[27,[26]]],[[27,[16,26]]]],[28,[[28,[16]]]],[28,[[28,[16]]]],[29,[[29,[16]]]],[29,[[29,[16]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],0,[[]],[[],32],[[],32],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[34],0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[41,42,43,2,14,32]],[41,41],[[]],[19],[19],[19],[19],[2,[[32,[[13,[44]]]]]],[19],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[]],[[]],[[[27,[26]]],[[27,[16,26]]]],[[[27,[26]]],[[27,[16,26]]]],[28,[[28,[16]]]],[28,[[28,[16]]]],[29,[[29,[16]]]],[29,[[29,[16]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[41,45],[[],45],0,[[46,[32,[47]],19,44],41],[48,[[6,[49,50]]]],[48,[[6,[[59,[[54,[51,52,[41,[53]]]],[55,[51]],[56,[[55,[51]],51]],[57,[51,[54,[51,52,[41,[53]]]]]],[58,[51,[54,[51,52,[41,[53]]]]]]]],50]]]],[[41,42],[[6,[[13,[44,26]],5]]]],[2,[[6,[[28,[60]],2]]]],[[41,42,43],[[6,[31,61]]]],[[]],[[],32],[[],32],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],0],"p":[[6,"Result"],[15,"str"],[3,"GenesisConfig"],[3,"ChainSpec"],[3,"String"],[4,"Result"],[6,"ChainId"],[6,"Header"],[3,"InitializationData"],[3,"Error"],[6,"AccountId"],[3,"XdnsRecord"],[3,"Vec"],[15,"bool"],[3,"SideEffectInterface"],[8,"Any"],[6,"Command"],[15,"i32"],[15,"usize"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Subcommand"],[3,"ArgMatches"],[3,"Error"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"ChainSpec"],[3,"RuntimeVersion"],[4,"Option"],[3,"TypeId"],[3,"Private"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[3,"FullDeps"],[3,"RpcModule"],[8,"Error"],[3,"Error"],[3,"NativeElseWasmExecutor"],[8,"Externalities"],[3,"RuntimeCode"],[15,"u8"],[3,"NativeVersion"],[4,"WasmExecutionMethod"],[15,"u64"],[3,"Configuration"],[3,"TaskManager"],[4,"Error"],[6,"Block"],[3,"RuntimeApi"],[3,"ExecutorDispatch"],[6,"TFullClient"],[6,"TFullBackend"],[3,"LongestChain"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[3,"LocalKeystore"],[4,"Error"],[13,"BuildSpec"],[13,"CheckBlock"],[13,"ExportBlocks"],[13,"ExportState"],[13,"ImportBlocks"],[13,"PurgeChain"],[13,"Revert"],[13,"Key"],[13,"Benchmark"]]},\
"circuit_standalone_node":{"doc":"","t":[0,0,0,6,5,5,5,5,5,4,3,13,6,6,13,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["chain_spec","rpc","service","ChainSpec","authority_keys_from_seed","development_config","get_account_id_from_seed","get_from_seed","local_testnet_config","DenyUnsafe","FullDeps","No","RpcExtension","SubscriptionTaskExecutor","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","pool","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ExecutorDispatch","NativeElseWasmExecutor","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deref","deref","deref_mut","deref_mut","dispatch","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","native_version","native_version","new","new_full","new_partial","read_runtime_version","runtime_version","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":["circuit_standalone_node","","","circuit_standalone_node::chain_spec","","","","","","circuit_standalone_node::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","circuit_standalone_node::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","Specialized <code>ChainSpec</code>. This is a specialization of the …","Generate an Aura authority key.","","Generate an account ID from seed.","Generate a crypto pair from seed.","","Signifies whether a potentially unsafe RPC should be …","Full client dependencies","Allows calling every RPCs.","A type representing all RPC extensions.","Task executor that is being used by RPC subscriptions.","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Create new instance.","Builds a new service for a full client.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,8,0,0,8,8,10,8,10,8,10,8,10,8,8,10,8,8,0,10,10,8,10,8,10,8,8,10,8,10,10,8,8,10,10,8,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,0,0,21,21,36,21,36,21,36,21,36,21,21,21,21,36,21,36,36,21,36,21,36,21,21,36,36,21,21,36,36,21,36,21,36,21,36,21,36,21,36,21,36,21,36,21,36,21,0,0,21,21,21,21,36,21,36,21,36,21,36,21,36,21,36],"f":[0,0,0,0,[1],[[],[[4,[2,3]]]],[1,5],[1],[[],[[4,[2,3]]]],0,0,0,0,0,0,[6],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[8,[[4,[9]]]],0,[8,8],[[]],[10,[[4,[11,[13,[12]]]]]],0,[14],[14],[14],[14],[14],[14],[[8,15],[[4,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[[13,[17]]],[[13,[7,17]]]],[[[13,[17]]],[[13,[7,17]]]],[18,[[18,[7]]]],[18,[[18,[7]]]],[19,[[19,[7]]]],[19,[[19,[7]]]],[[]],[[]],[[]],[[]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[21,22,23,1,24,25]],[21,21],[[]],[14],[14],[14],[14],[1,[[25,[[27,[26]]]]]],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[[13,[17]]],[[13,[7,17]]]],[[[13,[17]]],[[13,[7,17]]]],[18,[[18,[7]]]],[18,[[18,[7]]]],[19,[[19,[7]]]],[19,[[19,[7]]]],[[]],[[]],[[]],[[]],[21,28],[[],28],[[29,[25,[30]],14,26],21],[31,[[4,[32,33]]]],[31,[[4,[[42,[[37,[34,35,[21,[36]]]],[38,[34]],[39,[[38,[34]],34]],[40,[34,[37,[34,35,[21,[36]]]]]],[41,[34,[37,[34,35,[21,[36]]]]]]]],33]]]],[[21,22],[[4,[[27,[26,17]],3]]]],[[21,22,23],[[4,[43,44]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[15,"str"],[6,"ChainSpec"],[3,"String"],[4,"Result"],[6,"AccountId"],[3,"Private"],[8,"Any"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[3,"FullDeps"],[6,"RpcExtension"],[8,"Error"],[3,"Box"],[15,"usize"],[3,"Formatter"],[3,"Error"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"NativeElseWasmExecutor"],[8,"Externalities"],[3,"RuntimeCode"],[15,"bool"],[4,"Option"],[15,"u8"],[3,"Vec"],[3,"NativeVersion"],[4,"WasmExecutionMethod"],[15,"u64"],[3,"Configuration"],[3,"TaskManager"],[4,"Error"],[6,"Block"],[3,"RuntimeApi"],[3,"ExecutorDispatch"],[6,"TFullClient"],[6,"TFullBackend"],[3,"LongestChain"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[3,"RuntimeVersion"],[4,"Error"]]},\
"ethabi_decode":{"doc":"","t":[12,12,6,13,13,13,13,13,13,13,13,4,3,13,13,13,13,3,13,13,13,13,18,3,4,13,13,4,13,13,3,13,13,6,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","0","Address","Address","Address","Array","Array","Bool","Bool","Bytes","Bytes","Error","Event","FixedArray","FixedArray","FixedBytes","FixedBytes","H256","Int","Int","InvalidData","InvalidName","MAX","Param","ParamKind","String","String","Token","Tuple","Tuple","U256","Uint","Uint","Word","abs_diff","add","add","add_assign","anonymous","as_bits","as_bits","as_byte_slice","as_byte_slice","as_bytes","as_bytes_mut","as_fixed_bytes","as_fixed_bytes_mut","as_mut","as_mut_bits","as_mut_byte_slice","as_mut_ptr","as_mut_slice_of","as_ptr","as_ref","as_ref","as_slice_of","as_u128","as_u32","as_u64","as_usize","assign_from_slice","bit","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_sub","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","covers","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deserialize","deserialize","div","div","div_assign","div_mod","encode","encode_function","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","exp10","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_big_endian","from_dec_str","from_little_endian","from_low_u64_be","from_low_u64_le","from_low_u64_ne","from_slice","from_str","from_str","from_str_radix","from_uint","full_mul","hash","hash","index","index_mut","indexed","inputs","integer_sqrt","into","into","into","into","into","into","into","into_uint","is_dynamic","is_dynamic","is_empty_bytes_valid_encoding","is_zero","is_zero","kind","leading_zeros","len_bytes","low_u128","low_u32","low_u64","max_encoded_len","max_encoded_len","max_value","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","not","one","overflowing_add","overflowing_mul","overflowing_neg","overflowing_pow","overflowing_sub","partial_cmp","partial_cmp","pow","random","random_using","randomize","randomize_using","rem","rem","rem_assign","repeat_byte","rlp_append","rlp_append","saturating_add","saturating_mul","saturating_sub","serialize","serialize","shl","shl","shl_assign","shr","shr","shr_assign","signature","sub","sub","sub_assign","to_address","to_array","to_big_endian","to_bool","to_bytes","to_fixed_array","to_fixed_bytes","to_fixed_bytes","to_int","to_keyed_vec","to_keyed_vec","to_little_endian","to_low_u64_be","to_low_u64_le","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_uint","trailing_zeros","try_as_bits","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_check","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","types_check","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0"],"q":["ethabi_decodeethabi_decode::ParamKind","","","","","","","ethabi_decode::Token","","","","","","","","",""],"d":["","","ABI Address","Address.","Address.","Array of unknown size.","Array of params with unknown size.","Boolean.","Boolean value.","Bytes.","Vector of bytes of unknown size.","","Contract event.","Array with fixed size.","Array with known size.","Vector of bytes with fixed size.","Vector of bytes with known size.","Hash Fixed-size uninterpreted hash type with 32 bytes (256 …","Signed integer.","Signed integer.","Invalid data.","Invalid entity such as a bad function name.","Maximum value.","Event param specification.","Function and event param types.","String.","String.","Ethereum ABI params.","Tuple containing different types","Tuple of params of variable types.","ABI Int and UInt Little-endian large integer type 256-bit …","Unsigned integer.","Unisnged integer.","ABI word.","Computes the absolute difference between self and other.","","","","If anonymous, event cannot be found using <code>from</code> filter.","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","","Returns a mutable raw pointer to the value.","","Returns a constant raw pointer to the value.","","","","Conversion to u128 with overflow checking","Conversion to u32 with overflow checking","Conversion to u64 with overflow checking","Conversion to usize with overflow checking","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Return if specific bit is set.","","","","","","","","","","","Return the least number of bits needed to represent the …","","","","","","","","","","","","","","","","","","","","Return specific byte.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked division. Returns <code>None</code> if <code>other == 0</code>.","Checked multiplication. Returns <code>None</code> if overflow occurred.","Checked negation. Returns <code>None</code> unless <code>self == 0</code>.","Checked exponentiation. Returns <code>None</code> if overflow occurred.","Checked modulus. Returns <code>None</code> if <code>other == 0</code>.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Decodes ABI compliant vector of bytes into vector of …","","","","","","","","","","","","","","","","","","","Returns a pair <code>(self / other, self % other)</code>.","Encodes vector of tokens into ABI compliant vector of …","","","","","","","","","","Create <code>10**n</code> as this type.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","","Converts from big endian representation bytes in memory.","Convert from a decimal string.","Converts from little endian representation bytes in memory.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Create a new fixed-hash from the given slice <code>src</code>.","","Creates a hash type instance from the given string.","Converts a string slice in a given base to an integer. …","","Multiplies two 256-bit integers to produce full 512-bit …","","","","","Indexed flag. If true, param is used to build block bloom.","Event input.","Compute the highest <code>n</code> such that <code>n * n &lt;= self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","returns whether a ParamKind is dynamic used to decide how …","Check if the token is a dynamic type resulting in prefixed …","returns whether a zero length byte slice (<code>0x</code>) is a valid …","Whether this is zero.","Returns <code>true</code> if no bits are set.","Param type.","Returns the number of leading zeros in the binary …","Returns the size of this hash in bytes.","Low 2 words (u128)","Conversion to u32","Low word (u64)","","","The maximum value which can be inhabited by this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One (multiplicative identity) of this type.","Addition which overflows and returns a flag if it does.","Multiply with overflow, returning a flag if it does.","Negation with overflow.","Fast exponentiation by squaring. Returns result and …","Subtraction which underflows and returns a flag if it does.","","","Fast exponentiation by squaring …","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","","","","Returns a new fixed hash where all bits are set to the …","","","Addition which saturates at the maximum value (Self::MAX).","Multiplication which saturates at the maximum value..","Subtraction which saturates at zero.","","","","","","","","","Event signature. Like “Foo(int32,bytes)”.","","","","Converts token to…","Converts token to…","Write to the slice in big-endian format.","Converts token to…","Converts token to…","Converts token to…","Converts token to…","Returns the inner bytes array.","Converts token to…","","","Write to the slice in little-endian format.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","Converts token to…","","","Converts token to…","Returns the number of trailing zeros in the binary …","","","","","","","","","","","","","","","","","","","","Check whether the type of the token matches the given …","","","","","","","","","","Check if all the types of the tokens match the given …","","","","","","","","","","Zero (additive identity) of this type.","Returns a new zero-initialized fixed hash.","","","","","","","","","","","","","","","","",""],"i":[1,3,0,15,16,15,16,15,16,15,16,0,0,15,16,15,16,0,15,16,19,19,1,0,0,15,16,0,15,16,0,15,16,0,1,1,1,1,13,1,3,1,3,3,3,3,3,3,3,3,3,3,3,1,3,3,1,1,1,1,3,1,1,3,3,3,3,1,3,3,3,3,1,1,3,3,3,3,13,14,15,16,19,1,3,13,14,15,16,19,1,3,1,1,1,1,1,1,1,1,13,14,15,16,1,3,13,14,15,16,1,3,1,3,3,0,13,1,1,3,3,1,3,1,3,1,3,1,3,1,3,1,1,1,1,0,0,3,3,13,14,15,16,1,3,1,13,14,15,16,19,1,1,1,1,3,3,3,3,13,14,15,16,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,1,1,1,3,3,3,3,1,3,1,3,1,1,3,3,3,14,13,1,13,14,15,16,19,1,3,3,15,16,15,1,3,14,1,3,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,3,3,1,1,1,3,1,3,1,1,1,1,3,1,1,1,1,1,1,13,1,1,1,16,16,1,16,16,16,16,3,16,1,3,1,3,3,3,13,14,15,16,1,3,16,1,3,16,1,1,3,3,13,14,15,16,19,1,1,1,3,13,14,15,16,19,1,3,16,13,14,15,16,19,1,3,1,3,16,1,3,13,14,15,16,19,1,3,1,3,49,50,51,52,53,54,53,55,56,57,58,59,60,61,62,63,64],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[1,1],[1,1],[[1,1]],0,[[],2],[[],2],[[]],[[]],[3],[3],[3],[3],[3],[[],2],[[]],[3,4],[[],[[6,[5]]]],[3,4],[1],[3],[[],[[6,[5]]]],[1,7],[1,8],[1,9],[1,10],[3],[[1,10],11],[[1,1],1],[[3,3]],[[3,3]],[[3,3]],[[3,3]],[[1,1],1],[[3,3]],[[3,3]],[[3,3]],[[3,3]],[1,10],[[1,1],1],[[3,3]],[[3,3]],[[3,3]],[[3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,10],4],[[1,1],[[12,[1]]]],[[1,1],[[12,[1]]]],[[1,1],[[12,[1]]]],[1,[[12,[1]]]],[[1,1],[[12,[1]]]],[[1,1],[[12,[1]]]],[[1,1],[[12,[1]]]],[13,13],[14,14],[15,15],[16,16],[1,1],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],17],[[3,3],17],[[3,3],11],[[],[[6,[[18,[16]],19]]]],[[13,[18,[3]],[18,[4]]],[[6,[[18,[16]],19]]]],[20,[[6,[1,21]]]],[[],[[6,[1,22]]]],[20,[[6,[3,21]]]],[[],[[6,[3,22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[8,[[6,[22]]]],[8,[[6,[22]]]],[8,[[6,[22]]]],[8,[[6,[22]]]],[[],1],[[],3],[[],[[6,[1]]]],[[],[[6,[3]]]],[1,1],[1,1],[1],[[1,1]],[[],[[18,[4]]]],[23,[[18,[4]]]],[[]],[[]],[[13,13],11],[[14,14],11],[[15,15],11],[[16,16],11],[[1,1],11],[[3,3],11],[10,1],[[13,24],25],[[14,24],25],[[15,24],25],[[16,24],25],[[19,24],25],[[1,24],[[6,[26]]]],[[1,24],[[6,[26]]]],[[1,24],[[6,[26]]]],[[1,24],[[6,[26]]]],[[3,24],[[6,[26]]]],[[3,24],[[6,[26]]]],[[3,24],[[6,[26]]]],[[3,24],[[6,[26]]]],[[]],[[]],[[]],[[]],[[]],[10,1],[27,1],[1,1],[4,1],[[]],[9,1],[28,1],[8,1],[[],1],[29,1],[30,1],[31,1],[32,1],[[],1],[7,1],[33,1],[34,1],[[],1],[23,1],[[]],[[],3],[[],3],[[],3],[35,3],[[],1],[23,[[6,[1,36]]]],[[],1],[9,3],[9,3],[9,3],[[],3],[23,[[6,[1]]]],[23,[[6,[3,37]]]],[[23,8],[[6,[1,38]]]],[1,3],[[1,1],39],[1],[3],[3],[3],0,0,[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[15,11],[16,11],[15,11],[1,11],[3,11],0,[1,8],[[],10],[1,7],[1,8],[1,9],[[],10],[[],10],[[],1],[[1,33],1],[[1,33],1],[[1,27],1],[[1,1],1],[[1,1],1],[[1,32],1],[[1,31],1],[[1,27],1],[[1,9],1],[[1,4],1],[[1,8],1],[[1,33],1],[[1,10],1],[[1,34],1],[[1,29],1],[[1,9],1],[[1,9],1],[[1,29],1],[[1,32],1],[[1,10],1],[[1,4],1],[[1,32],1],[[1,31],1],[[1,29],1],[[1,34],1],[[1,1],1],[[1,10],1],[[1,9],1],[[1,33],1],[[1,27],1],[[1,10],1],[[1,4],1],[[1,29],1],[[1,31],1],[[1,27],1],[[1,34],1],[[1,34],1],[[1,4],1],[[1,8],1],[[1,1],1],[[1,31],1],[[1,8],1],[[1,32],1],[[1,8],1],[[1,8]],[[1,9]],[[1,29]],[[1,33]],[[1,31]],[[1,4]],[[1,27]],[[1,10]],[[1,1]],[[1,34]],[[1,32]],[1,1],[[],1],[[1,1]],[[1,1]],[1],[[1,1]],[[1,1]],[[1,1],[[12,[17]]]],[[3,3],[[12,[17]]]],[[1,1],1],[[],3],[[],3],[3],[3],[1,1],[1,1],[1],[4,3],[[1,40]],[[3,40]],[[1,1],1],[[1,1],1],[[1,1],1],[1,6],[3,6],[1,1],[1,1],[1],[1,1],[1,1],[1],0,[1,1],[1,1],[[1,1]],[16,[[12,[41]]]],[16,[[12,[[18,[16]]]]]],[1],[16,[[12,[11]]]],[16,[[12,[[18,[4]]]]]],[16,[[12,[[18,[16]]]]]],[16,[[12,[[18,[4]]]]]],[3],[16,[[12,[1]]]],[[],[[18,[4,42]]]],[[],[[18,[4,42]]]],[1],[3,9],[3,9],[3,9],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[12,[[18,[4]]]]]],[[],43],[[],43],[16,[[12,[1]]]],[1,8],[[],[[6,[2,44]]]],[[],[[6,[2,44]]]],[[],[[6,[2,44]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[39,[[6,[1,45]]]],[39,[[6,[1,45]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[16,15],11],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],[[48,[47]]]],[[],[[48,[47]]]],[[],11],[1],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"U256"],[3,"BitSlice"],[3,"H256"],[15,"u8"],[4,"Error"],[4,"Result"],[15,"u128"],[15,"u32"],[15,"u64"],[15,"usize"],[15,"bool"],[4,"Option"],[3,"Event"],[3,"Param"],[4,"ParamKind"],[4,"Token"],[4,"Ordering"],[3,"Vec"],[4,"Error"],[3,"Rlp"],[4,"DecoderError"],[3,"Error"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"i64"],[15,"i128"],[15,"u16"],[3,"U128"],[15,"i16"],[15,"i32"],[15,"i8"],[15,"isize"],[3,"H160"],[4,"FromDecStrErr"],[4,"FromHexError"],[3,"FromStrRadixErr"],[3,"U512"],[3,"RlpStream"],[6,"Address"],[3,"Global"],[3,"String"],[4,"BitSpanError"],[4,"Error"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[13,"Int"],[13,"Uint"],[13,"Array"],[13,"FixedBytes"],[13,"FixedArray"],[13,"Tuple"],[13,"Address"],[13,"FixedBytes"],[13,"Bytes"],[13,"Int"],[13,"Uint"],[13,"Bool"],[13,"String"],[13,"FixedArray"],[13,"Array"],[13,"Tuple"]]},\
"ethash":{"doc":"Apache-2 licensed Ethash implementation.","t":[17,17,17,17,17,17,17,17,3,17,17,3,17,8,17,11,11,11,11,5,5,10,11,11,11,5,5,5,5,11,5,5,5,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11],"n":["ACCESSES","CACHE_BYTES_GROWTH","CACHE_BYTES_INIT","CACHE_MULTIPLIER","CACHE_ROUNDS","DATASET_BYTES_GROWTH","DATASET_BYTES_INIT","DATASET_PARENTS","EthereumPatch","FNV_PRIME","HASH_BYTES","LightDAG","MIX_BYTES","Patch","WORD_BYTES","borrow","borrow","borrow_mut","borrow_mut","calc_dataset_item","cross_boundary","epoch_length","epoch_length","from","from","get_cache_size","get_full_size","get_seedhash","hashimoto","hashimoto","hashimoto_full","hashimoto_light","hashimoto_with_hasher","into","into","is_valid_for","make_cache","make_dataset","mine","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["ethash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Calculate the dataset item.","Convert across boundary. <code>f(x) = 2 ^ 256 / x</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the cache size required given the block number.","Get the full dataset size given the block number.","Get the seedhash for a given block number.","“Main” function of Ethash, calculating the mix digest …","","Ethash used by a full client. Stores the whole dataset in …","Ethash used by a light client. Only stores the 16MB cache …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Make an Ethash cache using the given seed.","Make an Ethash dataset using the given hash.","Mine a nonce given the header, dataset, and the target. …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,9,13,9,0,0,8,13,13,9,0,0,0,0,9,0,0,0,13,9,9,0,0,0,9,13,9,13,9,13,9,13,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,2],[3,3],[[],3],[[],3],[[]],[[]],[1,1],[1,4],[1,5],[[5,6,4,7]],[[[9,[8]],5,6]],[[5,6,4]],[[5,6,4]],[[5,6,4,7,7,7]],[[]],[[]],[[[9,[8]],3],10],[5],[[]],[[4,6,3]],[3,[[9,[8]]]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[]]],"p":[[15,"usize"],[3,"H512"],[3,"U256"],[15,"u64"],[3,"H256"],[3,"H64"],[8,"Fn"],[8,"Patch"],[3,"LightDAG"],[15,"bool"],[4,"Result"],[3,"TypeId"],[3,"EthereumPatch"]]},\
"finality_relay":{"doc":"This crate has single entrypoint to run synchronization …","t":[16,16,3,8,16,16,16,18,8,8,18,8,11,11,11,10,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,5,10,12,5,12,10,12,11,11,11,11,11,11,11],"n":["FinalityProof","FinalityProofsStream","FinalitySyncParams","FinalitySyncPipeline","Hash","Header","Number","SOURCE_NAME","SourceClient","SourceHeader","TARGET_NAME","TargetClient","__clone_box","as_any","as_any_mut","best_finalized_block_number","best_finalized_source_block_number","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","finality_proofs","fmt","from","from_mut","from_mut","from_ref","from_ref","header_and_finality_proof","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_mandatory","metrics_prefix","number","recent_finality_proofs_limit","run","stall_timeout","submit_finality_proof","tick","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["finality_relay","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Finality proof type.","Stream of new finality proofs. The stream is allowed to …","Finality proof synchronization loop parameters.","Finality proofs synchronization pipeline.","Headers we’re syncing are identified by this hash.","Type of header that we’re syncing.","Headers we’re syncing are identified by this number.","Name of the finality proofs source.","Source client used in finality synchronization loop.","Header that we’re receiving from source node.","Name of the finality proofs target.","Target client used in finality synchronization loop.","","","","Get best finalized block number.","Get best finalized source block number.","","","","","","","","Subscribe to new finality proofs.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get canonical header and its finality proof by number.","","Calls <code>U::from(self)</code>.","","","","","","Returns true if this header needs to be submitted to …","Return prefix that will be used by default to expose …","Returns number of header.","Number of finality proofs to keep in internal buffer …","Run finality proofs synchronization loop.","Timeout before we treat our transactions as lost and …","Submit header finality proof.","Interval at which we check updates on both clients. …","","","","","","",""],"i":[15,16,0,0,15,15,15,15,0,0,15,0,6,6,6,16,17,6,6,6,6,6,6,6,16,6,6,6,6,6,6,16,6,6,6,6,6,6,6,22,0,22,6,0,6,17,6,6,6,6,6,6,6,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[[]],[[]],[6,6],[[]],[7],[7],[7],[[],[[5,[[4,[3]]]]]],[[6,8],9],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[4,[3]]]]]],[[],7],[[]],[[[4,[10]]],[[4,[2,10]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[]],[[]],[[],13],[[],14],[[]],0,[[[16,[15]],[17,[15]],6,18,[0,[3,19]]],[[20,[14]]]],0,[[],[[5,[[4,[3]]]]]],0,[[]],[[],20],[[],20],[[],21],[[]],[[]],[[]]],"p":[[3,"Private"],[8,"Any"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"FinalitySyncParams"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Arc"],[3,"Rc"],[15,"bool"],[3,"String"],[8,"FinalitySyncPipeline"],[8,"SourceClient"],[8,"TargetClient"],[3,"MetricsParams"],[8,"Send"],[4,"Result"],[3,"TypeId"],[8,"SourceHeader"]]},\
"headers_relay":{"doc":"Relaying source chain headers to target chain. This module …","t":[0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,8,10,10,10,10,10,10,10,10,10,11,5,10,5,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,13,16,16,16,6,4,8,13,13,13,16,13,3,3,13,18,8,13,3,13,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,10,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["headers","sync","sync_loop","sync_loop_metrics","sync_types","QueuedHeaders","add_incomplete_headers","best_queued_number","best_synced_number","borrow","borrow_mut","clear","completion_response","default","deref","deref_mut","drop","extra_response","fmt","from","header","header_completed","header_response","header_to_complete","headers","headers_in_status","headers_submitted","incomplete_header","incomplete_headers_response","init","into","maybe_extra_response","maybe_orphan_response","prune","requires_completion_data","status","target_best_header_response","total_headers","try_from","try_into","type_id","vzip","Backup","HeadersSync","HeadersSyncParams","Signed","TargetTransactionMode","Unsigned","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","from","from","from","headers","headers_mut","init","init","init","into","into","into","is_almost_synced","max_future_headers_to_download","max_headers_in_single_submit","max_headers_in_submitted_status","max_headers_size_in_single_submit","new","pause_submit","prune_depth","restart","select_headers_to_submit","select_new_header_to_download","select_orphan_header_to_download","source_best_header_number_response","source_best_number","status","target_best_header","target_best_header_response","target_tx_mode","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SourceClient","SyncMaintain","TargetClient","best_block_number","best_header_id","complete_header","header_by_hash","header_by_number","header_completion","header_extra","incomplete_headers_ids","is_known_header","maintain","metrics_prefix","requires_extra","run","submit_headers","SyncLoopMetrics","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","new","to_owned","try_from","try_into","type_id","update","update_best_block_at_source","update_best_block_at_target","vzip","Completion","Extra","Extra","Hash","Header","HeaderIdOf","HeaderStatus","HeadersSyncPipeline","Incomplete","MaybeExtra","MaybeOrphan","Number","Orphan","QueuedHeader","QueuedHeaderData","Ready","SOURCE_NAME","SourceHeader","Submitted","SubmittedHeaders","Synced","TARGET_NAME","Unknown","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","equivalent","estimate_size","extra","fatal_error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","header","id","id","incomplete","init","init","init","init","into","into","into","into","new","parent_id","parent_id","rejected","set_extra","submitted","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["headers_relay","","","","","headers_relay::headers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","headers_relay::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","headers_relay::sync_loop","","","","","","","","","","","","","","","","","headers_relay::sync_loop_metrics","","","","","","","","","","","","","","","","","","","","headers_relay::sync_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Headers queue - the intermediate buffer that is filled …","Headers synchronization context. This structure wraps …","Entrypoint for running headers synchronization loop.","Metrics for headers synchronization relay loop.","Types that are used by headers synchronization components.","Headers queue.","Marks given headers incomplete.","Returns number of best block in the queue.","Returns number of best synced block we have ever seen. It …","","","Forgets all ever known headers.","Receive completion response from source node.","","","","","Receive extra from source node.","","Returns the argument unchanged.","Get oldest header from given queue.","When header completion data is sent to target node.","Appends new header, received from the source node, to the …","Returns header completion data to upload to target node.","Get oldest headers from given queue until functor will …","Returns number of headers that are currently in given …","When header is submitted to target node.","Returns id of the header for which we want to fetch …","When incomplete headers ids are receved from target node.","","Calls <code>U::from(self)</code>.","Receive target node response for MaybeExtra request.","Receive target node response for MaybeOrphan request.","Prune and never accept headers before this block.","Returns true if given header requires completion data.","Returns synchronization status of the header.","Receive best header from the target node.","Returns number of headers that are currently in the queue.","","","","","Submit new headers using signed transactions, but only …","Headers synchronization context.","Common sync params.","Submit new headers using signed transactions.","Target transaction mode.","Submit new headers using unsigned transactions.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns reference to the headers queue.","Returns mutable reference to the headers queue.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we have synced almost all known headers.","Maximal number of ethereum headers to pre-download.","Maximal number of headers in single submit request.","Maximal number of active (we believe) submit header …","Maximal total headers size in single submit request.","Creates new headers synchronizer.","Pause headers submit until best header will be updated on …","We only may store and accept (from Ethereum node) headers …","Restart synchronization.","Select headers that need to be submitted to the target …","Select header that needs to be downloaded from the source …","Selech orphan header to downoload.","Receive new target header number from the source node.","Return best header number known to source node.","Returns synchronization status.","Best header known to target node.","Receive new best header from the target node. Returns true …","Target transactions mode.","","","","","","","","","","","","","","","Source client trait.","Synchronization maintain procedure.","Target client trait.","Get best block number.","Returns ID of best header known to the target node.","Submit completion data for header.","Get header by hash.","Get canonical header by number.","Get completion data by header hash.","Get extra data by header hash.","Returns ID of headers that require to be ‘completed’ …","Returns true if header is known to the target node.","Run custom maintain procedures. This is guaranteed to be …","Return prefix that will be used by default to expose …","Returns true if header requires extra data to be submitted.","Run headers synchronization.","Submit headers.","Headers sync metrics.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create and register headers loop metrics.","","","","","Update metrics.","Update best block number at source.","Update best block number at target.","","Type of data required to ‘complete’ header that we’…","Header is in Extra queue.","Type of extra data for the header that we’re receiving …","Headers we’re syncing are identified by this hash.","Type of header that we’re syncing.","A HeaderId for <code>HeaderSyncPipeline</code>.","Ethereum header synchronization status.","Headers synchronization pipeline.","Header is in Incomplete queue.","Header is in MaybeExtra queue.","Header is in MaybeOrphan queue.","Headers we’re syncing are identified by this number.","Header is in Orphan queue.","Header how it’s stored in the synchronization queue.","Header how it’s stored in the synchronization queue.","Header is in Ready queue.","Name of the headers source.","Header that we’re receiving from source node.","Header has been recently submitted to the target node.","Headers submission result.","Header is known to the target node.","Name of the headers target.","Header is unknown.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function used to estimate size of target-encoded header.","Returns reference to associated extra data.","Fatal target node error, if it has occured during …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns reference to header.","Returns ID of header.","Returns ID of header.","IDs of incomplete headers. These headers were submitted …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates new queued header.","Returns ID of parent header.","Returns ID of parent header.","IDs of ignored headers that we have decided not to submit …","Set associated extra data.","IDs of headers that have been submitted to target node.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,18,0,0,18,0,18,17,18,19,17,18,19,17,18,17,18,17,18,19,17,18,19,17,18,19,18,18,17,18,19,17,18,19,19,19,17,18,19,17,18,19,19,17,17,17,17,19,19,17,19,19,19,19,19,19,19,19,19,17,17,18,17,18,19,17,18,19,17,18,19,17,18,19,0,0,0,24,26,26,24,24,24,24,26,26,27,0,26,0,26,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,1,11,1,1,1,0,0,0,11,11,11,1,11,0,0,11,1,0,11,0,11,1,11,11,12,37,39,11,12,37,39,11,12,37,11,12,37,37,39,11,12,12,37,39,11,12,37,39,11,12,37,39,11,12,37,11,1,12,39,11,12,37,39,39,11,12,37,39,12,42,12,39,11,12,37,39,11,12,37,39,12,42,12,39,12,39,11,12,37,39,11,12,37,39,11,12,37,39,11,12,37,39,11,12,37,39],"f":[0,0,0,0,0,0,[[[2,[1]],3,[5,[[4,[1]]]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[]],[[[2,[1]]]],[[[2,[1]],4,6]],[[],[[2,[1]]]],[7],[7],[7],[[[2,[1]],4]],[[[2,[[0,[8,1]]]],9],10],[[]],[[[2,[1]],11],[[6,[12]]]],[[[2,[1]],4]],[[[2,[1]]]],[[[2,[1]]],6],[[[2,[1]],11,13],[[6,[[5,[12]]]]]],[[[2,[1]],11],7],[[[2,[1]],[5,[[4,[1]]]]]],[[[2,[1]]],[[6,[[4,[1]]]]]],[[[2,[1]],[14,[[4,[1]]]]]],[[],7],[[]],[[[2,[1]],4,3]],[[[2,[1]],4,3]],[[[2,[1]]]],[[[2,[1]],4],3],[[[2,[1]],4],11],[[[2,[1]],4]],[[[2,[1]]],7],[[],15],[[],15],[[],16],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[18,18],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[18,18],3],[[],3],[[17,9],10],[[18,9],10],[[[19,[[0,[8,1]]]],9],10],[[]],[[]],[[]],[[[19,[1]]],2],[[[19,[1]]],2],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[[19,[1]]],3],0,0,0,0,[17,[[19,[1]]]],[[[19,[1]]]],0,[[[19,[1]]]],[[[19,[1]],3],[[6,[[5,[12]]]]]],[[[19,[1]]],6],[[[19,[1]]],[[6,[12]]]],[[[19,[1]]]],[[[19,[1]]],6],[[[19,[1]]]],[[[19,[1]]],[[6,[[4,[1]]]]]],[[[19,[1]],[4,[1]]],3],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,[[],[[22,[[21,[20]]]]]],[[],[[22,[[21,[20]]]]]],[4,[[22,[[21,[20]]]]]],[[],[[22,[[21,[20]]]]]],[[],[[22,[[21,[20]]]]]],[4,[[22,[[21,[20]]]]]],[[4,12],[[22,[[21,[20]]]]]],[[],[[22,[[21,[20]]]]]],[4,[[22,[[21,[20]]]]]],[19,[[22,[[21,[20]]]]]],[[],23],[12,[[22,[[21,[20]]]]]],[[[24,[1]],25,[26,[1]],25,[27,[1]],17,28,[0,[20,29]]],[[15,[23]]]],[[[5,[12]]],[[22,[[21,[20]]]]]],0,[[]],[[]],[30,30],[[]],[7],[7],[7],[[]],[[],7],[[]],[[31,[6,[32]]],[[15,[30,33]]]],[[]],[[],15],[[],15],[[],16],[[30,19]],[[30,[35,[34]]]],[[30,[35,[34]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[[[12,[[0,[36,1]]]]],[[12,[[0,[36,1]]]]]],[[[37,[[0,[36,1]]]]],[[37,[[0,[36,1]]]]]],[[]],[[]],[[]],[[],[[37,[[0,[38,1]]]]]],[[],39],[7],[7],[[[12,[1]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[11,11],3],[[[12,[[0,[40,1]]]],12],3],[[[37,[[0,[40,1]]]],37],3],[[],3],[12,7],[[[12,[1]]],6],0,[[11,9],10],[[[12,[[0,[8,1]]]],9],10],[[[37,[[0,[8,1]]]],9],10],[[[39,[8,8]],9],10],[[[39,[8]],9],10],[[]],[[]],[[]],[[]],[[[12,[1]]]],[[],41],[[[12,[1]]],41],0,[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],[[12,[1]]]],[[],41],[[[12,[1]]],41],0,[[[12,[1]]],[[12,[1]]]],0,[[]],[[]],[[]],[[],23],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]]],"p":[[8,"HeadersSyncPipeline"],[3,"QueuedHeaders"],[15,"bool"],[6,"HeaderIdOf"],[3,"Vec"],[4,"Option"],[15,"usize"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"HeaderStatus"],[3,"QueuedHeader"],[8,"FnMut"],[3,"HashSet"],[4,"Result"],[3,"TypeId"],[3,"HeadersSyncParams"],[4,"TargetTransactionMode"],[3,"HeadersSync"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"String"],[8,"SourceClient"],[3,"Duration"],[8,"TargetClient"],[8,"SyncMaintain"],[3,"MetricsParams"],[8,"Send"],[3,"SyncLoopMetrics"],[3,"Registry"],[15,"str"],[4,"Error"],[15,"u64"],[8,"Into"],[8,"Clone"],[3,"QueuedHeaderData"],[8,"Default"],[3,"SubmittedHeaders"],[8,"PartialEq"],[3,"HeaderId"],[8,"SourceHeader"]]},\
"jsonrpc_runtime_client":{"doc":"Create implements wrapper over RPC client re-used from …","t":[13,13,13,13,13,3,2,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,2,2,2,2,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5],"n":["AuthorSubmitExtrinsic","ChainGetBlock","ChainGetBlockHash","ChainGetFinalizedHead","ChainGetHeader","ConnectionParams","Rococo","StateCall","StateGetStorage","StateProveStorage","StateRuntimeVersion","SubstrateClient","SubstrateRPC","SystemAccountNextIndex","SystemHealth","_0","_1","_2","_3","_4","_5","_6","_7","_8","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","author_submit_extrinsic","best_finalized_header_hash","best_header","block_hash_by_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_get_block","chain_get_block_hash","chain_get_finalized_head","chain_get_header","client","clone","clone","clone_into","clone_into","create_rpc_client","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","ensure_synced","fmt","fmt","free_native_balance","free_native_balance","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","genesis_hash","get_block","get_first_header","get_gtwy_init_data","get_metadata","get_parachain_id","grandpa_authorities_set","header_by_hash","header_by_number","host","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","next_account_index","params","polkadot_like_chain","port","prove_storage","reconnect","runtime_version","runtime_version","secure","state_call","state_call","state_get_storage","state_prove_storage","state_runtime_version","storage_value","submit_signed_extrinsic","submit_signed_extrinsic_lock","submit_unsigned_extrinsic","subscribe_justifications","system_account_next_index","system_health","to_owned","to_owned","try_connect","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","useful_queries","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","account_id","at_block","block_hash","block_hash","block_number","data","extrinsic","hash","key","keys","method","Rococo","SyncHeader","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","get_first_header","get_gtwy_init_data","get_metadata","get_parachain_id"],"q":["jsonrpc_runtime_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jsonrpc_runtime_client::SubstrateRPC","","","","","","","","","","","","","","","","","","","","jsonrpc_runtime_client::polkadot_like_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jsonrpc_runtime_client::useful_queries","","",""],"d":["","","","","","Substrate-over-websocket connection params.","","","","","","Substrate client type.","","","","","","","","","","","","","","","","","","","","","","Return hash of the best finalized block.","Returns the best Substrate header.","Get a Substrate block hash by its number.","","","","","","","","","","","Substrate RPC client.","","","","","Run single transaction proof relay and stop.","","","","","","","","","","","Returns true if client is connected to at least one peer …","","","","Return native tokens balance of the account.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Return hash of the genesis block.","Genesis block hash.","Get a Substrate block from its hash.","","","","","Get the GRANDPA authority set at given block.","Get a Substrate header by its hash.","Get a Substrate header by its number.","Websocket server hostname.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns client that is able to call RPCs on Substrate node …","Get the nonce of the given Substrate account.","Client connection params.","Implement Chain with Polkadot-like types for relay-client","Websocket server TCP port.","Returns storage proof of given storage keys.","Reopen client connection.","Return runtime version.","","Use secure websocket connection.","Execute runtime call at given block.","","","","","Read value from runtime storage.","Submit an extrinsic signed by given account.","If several tasks are submitting their transactions …","Submit unsigned extrinsic for inclusion in a block.","Return new justifications stream.","","","","","Try to connect to Substrate node over websocket. Returns …","","","","","","","","","","","","","","","","Useful Substrate network RPC queries","","","","","","","","","","","","","","","","","","","","","","","","Polkadot chain definition","Polkadot header id. Polkadot header type used in headers …","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Get first header of Substrate network","Gets the current authority set id, the actual authority …","",""],"i":[29,29,29,29,29,0,0,29,29,29,29,0,0,29,29,29,29,29,29,29,29,29,29,29,6,8,6,29,8,6,29,8,29,6,6,6,6,29,8,6,29,8,29,29,29,29,6,6,8,6,8,0,8,6,29,8,6,29,8,6,29,8,6,6,8,6,6,6,29,8,6,6,29,29,8,8,6,6,29,29,8,8,6,6,6,0,0,0,0,6,6,6,8,6,29,8,6,29,8,6,29,8,6,29,8,6,29,8,6,29,8,6,29,8,6,6,6,0,8,6,6,6,6,8,6,29,29,29,29,6,6,6,6,6,29,29,6,8,6,6,29,8,6,29,8,6,29,8,6,29,8,6,29,8,0,6,29,8,30,31,32,33,34,35,36,37,38,39,40,41,42,43,40,44,45,46,45,40,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[4,[3]]],5],[6,5],[6,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[7]]],5],[[[4,[7]]],5],[[],5],[[[4,[7]]],5],0,[6,6],[8,8],[[]],[[]],[8,[[11,[[6,[9]],10]]]],[[],8],[12],[12],[12],[12],[12],[12],[12],[12],[12],[6,5],[[6,13],[[11,[14]]]],[[8,13],[[11,[14]]]],[6,[[17,[[16,[5,15]]]]]],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],0,[[6,7],5],0,0,0,0,[6,5],[6,5],[6,5],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[16,[15]]],[[16,[2,15]]]],[[[16,[15]]],[[16,[2,15]]]],[[[16,[15]]],[[16,[2,15]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[8,5],[6,5],0,0,0,[[6,[21,[20,15]]],5],[6,5],[6,5],[6,[[17,[[16,[5,15]]]]]],0,[[6,10,3,7],5],[[[4,[10]],[4,[3]],[4,[7]]],5],[[[4,[20]]],5],[[[4,[[21,[20,15]]]],[4,[7]]],5],[[],5],[[6,20],5],[[6,22],5],0,[[6,3],5],[6,5],[4,5],[[],5],[[]],[[]],[8,5],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[9,9],[[]],[12],[12],[12],[[9,13],24],[[]],[[]],[[]],[[]],[[]],[[],12],[[]],[[[16,[15]]],[[16,[2,15]]]],[18,[[18,[2]]]],[19,[[19,[2]]]],[[]],[[]],[[]],[[],11],[[],11],[[],23],[[]],[[]],[[]],[6,[[11,[[21,[25]],10]]]],[[6,26],[[11,[10]]]],[6,[[11,[27,10]]]],[6,[[11,[28,10]]]]],"p":[[3,"Private"],[8,"Any"],[3,"Bytes"],[8,"Into"],[8,"Future"],[3,"SubstrateClient"],[4,"Option"],[3,"ConnectionParams"],[3,"Rococo"],[3,"String"],[4,"Result"],[15,"usize"],[3,"Formatter"],[3,"Error"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"Arc"],[3,"Rc"],[3,"StorageKey"],[3,"Vec"],[8,"FnOnce"],[3,"TypeId"],[6,"Result"],[15,"u8"],[15,"bool"],[3,"RuntimeMetadataV14"],[15,"u32"],[4,"SubstrateRPC"],[13,"_0"],[13,"_1"],[13,"_2"],[13,"_3"],[13,"_4"],[13,"_5"],[13,"_6"],[13,"_7"],[13,"_8"],[13,"SystemAccountNextIndex"],[13,"StateCall"],[13,"ChainGetHeader"],[13,"ChainGetBlock"],[13,"ChainGetBlockHash"],[13,"AuthorSubmitExtrinsic"],[13,"StateProveStorage"],[13,"StateGetStorage"]]},\
"pallet_account_manager":{"doc":"Account Manager pallet","t":[6,6,0,0,0,14,0,0,3,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,4,13,13,13,16,8,13,6,16,13,13,4,16,4,16,13,13,16,3,13,6,13,3,13,13,6,6,13,16,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AssetsBalanceOf","BalanceOf","manager","monetary","pallet","setup_currency_adapter","transaction","weights","ActiveSetClaimablePerRound","as_any","as_any_mut","borrow","borrow_mut","claimable","deref","deref_mut","drop","executor","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","percent_ratio","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Monetary","as_any","as_any_mut","borrow","borrow_mut","can_withdraw","deposit","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","withdraw","AssetBalanceOf","AssetId","Assets","Call","ChargeAlreadyRegistered","ChargeOrSettlementActualFeesOutgrowReserved","ChargeOrSettlementCalculationOverflow","Clock","Config","ContractsRegistryExecutionFinalized","ContractsRegistryExecutionNonce","Currency","DecodingExecutionIDFailed","DepositReceived","Error","EscrowAccount","Event","Event","ExecutionAlreadyRegistered","ExecutionNotRegistered","Executors","GenesisConfig","Issued","Module","NoChargeOfGivenIdRegistered","Pallet","PendingChargeNotFoundAtCommit","PendingChargeNotFoundAtRefund","PendingChargesPerRound","SettlementsPerRound","SkippingEmptyCharges","Time","WeightInfo","__clone_box","__clone_box","__clone_box","accumulate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","bump_contracts_registry_nonce","can_withdraw","clone","clone","clone","clone_into","clone_into","clone_into","convert","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deposit","deposit","deposit","deposit_immediately","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","finalize","finalize","finalize","finalize_infallible","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_charge_or_fail","get_dispatch_info","identity","identity","identity","index","init","init","init","init","init","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","migrate","module_name","name","new_call_variant_deposit","new_call_variant_finalize","no_charge_or_fail","offchain_worker","offchain_worker","on_chain_storage_version","on_collect_claimable","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","pending_charges_per_round","serialize","settlements_per_round","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","with_weight","withdraw_immediately","charge_fee","charge_id","charge_id","maybe_actual_fees","maybe_asset_id","maybe_recipient","maybe_recipient","offered_reward","outcome","payee","role","source","amount","amount","charge_id","execution_id","payee","recipient","recipient","0","1","BalanceForCurrency","ImbalanceBeneficiary","ImbalanceToBeneficiary","NegativeImbalanceOf","PositiveImbalanceOf","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","drop_zero","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","merge","offset","on_nonzero_unbalanced","on_unbalanceds","peek","split","subsume","try_drop","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","zero","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_account_manager","","","","","","","","pallet_account_manager::manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_account_manager::monetary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_account_manager::palletpallet_account_manager::pallet::Call","","","","","","","","","","","","pallet_account_manager::pallet::Event","","","","","","","pallet_account_manager::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_account_manager::weights","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","The module that hosts all the FRAME types needed to add …","The purpose of this macro is to setup the currency adapter …","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Contains one variant per dispatchable that can be called …","","","","","Configuration trait of this pallet.","","","","","","Custom dispatch errors of this pallet.","","The event emitted by this pallet.","The overarching event type.","","","","Can be used to configure the genesis state of this pallet.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The pallet implementing the on-chain logic.","","","","","","Type providing some time handler","Type representing the weight of this pallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If Called by 3VM as a execution deposit, expect: - charge …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>deposit</code>.","Create a call with the variant <code>finalize</code>.","","","","","Collect claimable (only SFX execution rewards) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_xdns using the Substrate node and …","Weight functions needed for pallet_xdns.","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,60,60,60,60,60,60,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,20,20,20,0,33,33,33,20,0,26,0,20,33,26,0,20,0,20,33,33,20,0,26,0,33,0,33,33,0,0,33,20,20,25,26,27,25,25,26,33,21,27,25,26,33,21,27,26,33,27,26,33,27,26,33,27,25,26,33,21,27,25,26,33,21,27,21,21,25,25,25,26,27,25,26,27,25,25,25,25,26,33,27,26,33,27,26,33,27,26,33,27,21,25,25,27,25,25,26,33,21,27,25,26,33,21,27,21,27,25,26,33,21,27,26,33,27,25,26,27,25,26,27,25,25,27,25,25,26,33,27,25,26,33,21,27,25,25,26,26,33,33,21,21,27,27,25,25,26,26,33,33,21,21,27,27,27,27,25,27,26,33,27,25,25,26,33,21,27,25,25,26,33,21,27,25,26,33,21,27,25,26,33,21,27,25,26,33,21,27,25,26,33,21,27,25,26,33,21,27,25,25,25,27,27,25,25,25,25,25,25,25,25,25,25,25,25,25,21,25,25,26,33,27,25,26,27,25,26,33,21,27,25,26,33,21,27,0,0,26,33,27,26,33,27,26,33,27,25,26,33,21,27,26,33,27,25,26,33,21,27,25,26,33,21,27,25,26,33,21,27,33,25,62,62,63,63,62,62,63,62,63,62,62,62,64,65,65,66,65,64,65,56,56,0,0,0,0,0,67,56,67,56,67,56,67,56,56,67,56,67,56,67,56,56,67,56,67,67,56,56,67,67,56,56,67,56,67,56,67,56,67,56,67,56,67,56,67,56,56,56,67,67,56,56,56,56,67,56,67,56,67,56,67,56,67,56,67,56,56,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],0,[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[[0,[7,8,9,[11,[10]]]],10],[[13,[[0,[7,8,9,[11,[10]]]],12]]]],[[],13],[[],13],[[],14],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[15,16],[15],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[],13],[[],13],[[],14],[[]],[[]],[[]],[15,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18],[18],[18],[19],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]]],[[[21,[20]],22],[[13,[23]]]],[[],[[13,[12]]]],[[[24,[20]],15],16],[25,25],[[[26,[20]]],[[26,[20]]]],[[[27,[20]]],[[27,[20]]]],[[]],[[]],[[]],[28,[[29,[20,[25,[20]]]]]],[[],2],[[],30],[[],31],[[],[[13,[[26,[20]],32]]]],[[],[[13,[33,32]]]],[[],[[13,[[27,[20]],32]]]],[[],[[13,[32]]]],[[],[[13,[32]]]],[[],[[13,[32]]]],[34,[[13,[32]]]],[34,[[13,[32]]]],[34,[[13,[32]]]],[34,[[13,[32]]]],[34,[[13,[32]]]],[34,[[13,[32]]]],[[],[[21,[20]]]],[[[35,[20]],[24,[20]],[24,[20]],36,37,15,15],17],[[[24,[20]],[24,[20]],36,37,15,15],17],0,[[[24,[20]],15]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[13,[[21,[20]]]]]],[[[27,[20]]],38],[2],[2],[2],[2],[2],[[[26,[20]]]],[33],[[[27,[20]]]],[[25,25],16],[[[26,[20]],[26,[20]]],16],[[[27,[20]],[27,[20]]],16],[[],16],[[],16],[[],16],[[39,15,[15,[[24,[20]]]]],17],[[[35,[20]],39,15,[15,[[24,[20]]]]],17],0,[[39,15,[15,[[24,[20]]]]]],[[25,40],41],[[[26,[20]],40],41],[[[33,[20]],40],41],[[[27,[20]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[20]]],42],[[]],[[],[[13,[[43,[[24,[20]]]],12]]]],[[[27,[20]]],44],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[6,[[6,[1]]]],[6,[[6,[1]]]],[6,[[6,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,46],[[],42],[[],42],[[[24,[20]],[24,[20]],36,37,15,15],[[27,[20]]]],[[39,15,[15,[[24,[20]]]]],[[27,[20]]]],[[],[[13,[12]]]],[[]],[[]],[[],31],[47,[[13,[[19,[[48,[[24,[20]]]]]],12]]]],[[]],[[]],[[]],[28,28],[[],28],[[],28],[[],28],[[],[[15,[43]]]],[[[21,[20]]],13],[[],[[15,[49]]]],[[],[[19,[50]]]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],[[19,[10,3]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],51],[[],51],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,[[53,[52]]]],[[[24,[20]],15],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],[[56,[54,55]]]],[2],[2],[2],[2],[2],[2],[[[56,[54,55]]],[[13,[[56,[54,55]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[]],[[]],[[[56,[54,55]],[56,[54,55]]],[[56,[54,55]]]],[[[56,[54,55]]],[[57,[[56,[54,55]]]]]],[56],[58],[[[56,[54,55]]],[[59,[54,55]]]],[[[56,[54,55]],[59,[54,55]]]],[[[56,[54,55]],[56,[54,55]]]],[[[56,[54,55]]],[[13,[[56,[54,55]]]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[56,[54,55]]]],0,0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[],13],[[],13],[[],14],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Zero"],[8,"CheckedDiv"],[8,"CheckedMul"],[15,"u8"],[8,"From"],[4,"DispatchError"],[4,"Result"],[3,"TypeId"],[4,"Option"],[15,"bool"],[6,"DispatchResult"],[3,"Private"],[3,"Vec"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[6,"BalanceOf"],[3,"Pallet"],[4,"Event"],[4,"Call"],[6,"Weight"],[6,"EscrowedBalanceOf"],[3,"CrateVersion"],[3,"StorageVersion"],[3,"Error"],[4,"Error"],[15,"u32"],[6,"OriginFor"],[4,"BenefitSource"],[4,"CircuitRole"],[6,"DispatchResultWithPostInfo"],[4,"Outcome"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"RequestCharge"],[3,"DispatchInfo"],[3,"RuntimeDbWeight"],[15,"u64"],[3,"RoundInfo"],[3,"ClaimableArtifacts"],[3,"Settlement"],[3,"StorageInfo"],[3,"Type"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Config"],[8,"Currency"],[3,"ImbalanceBeneficiary"],[4,"SameOrOther"],[8,"Iterator"],[6,"BalanceForCurrency"],[3,"ActiveSetClaimablePerRound"],[3,"Monetary"],[13,"deposit"],[13,"finalize"],[13,"Issued"],[13,"DepositReceived"],[13,"ContractsRegistryExecutionFinalized"],[3,"ImbalanceToBeneficiary"],[3,"SubstrateWeight"]]},\
"pallet_circuit":{"doc":"Overview","t":[6,8,6,13,13,13,6,4,13,6,6,13,13,6,13,6,3,3,8,4,13,13,13,3,3,13,4,13,13,16,13,13,13,13,13,13,6,8,6,16,13,13,3,13,8,3,13,6,3,3,4,3,8,3,3,4,4,6,3,4,3,6,13,6,13,13,13,17,13,13,13,13,3,13,6,13,13,13,13,13,4,13,3,13,8,13,13,4,4,13,13,13,13,13,13,3,3,3,4,3,6,4,13,13,13,3,13,13,13,13,13,6,16,13,13,13,13,4,13,3,13,13,13,6,6,8,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,10,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,12,10,12,10,10,10,5,0,0,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,0,5,5,10,10,12,12,12,12,12,0,0,12,12,10,10,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,12,0,12,12,12,12,12,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,10,10,10,10,10,10,10,10,10,10,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,12,12,12,12,12,12,12,12,0,12,12,11,10,12,10,0,12,12,0,12,12,11,0,12,12,12,0,11,10,10,12,12,12,10,12,12,12,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,12,12,0,12,12,11,10,12,10,10,0,12,12,12,12,0,12,12,10,10,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,12,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,3,13,4,13,13,13,13,13,3,13,4,13,13,13,13,13,13,3,13,13,13,13,13,13,3,4,13,13,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,13,6,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,10,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,0,0,0,0,0,17,17,6,3,6,17,6,3,6,3,3,8,17,17,17,17,17,17,8,17,6,6,6,6,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,3,8,8,8,3,8,16,16,11,11,10,11,11,11,11,12,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,3,4,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,13,3,6,3,3,6,3,6,6,13,4,3,8,13,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,10,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,16,16,16,3,8,8,16,3,6,6,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,10,11,12,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,11,11,11,3,3,16,16,3,8,16,3,6,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,17,6,3,6,6,6,6,3,6,3,8,17,17,17,6,6,6,6,6,17,17,17,17,17,17,17,6,8,3,17,6,6,3,6,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,12,17,13,17,16,6,17,17,17,17,8,6,17,17,17,17,17,16,6,16,6,16,6,17,17,17,17,17,3,17,17,17,17,17,13,17,17,8,4,3,4,13,13,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,3,17,17,17,17,17,3,17,17,11,11,5,11,11,11,11,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,3,3,8,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,10,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,16,10,10,13,13,4,13,4,3,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,17,3,3,6,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,4,13,4,13,13,13,3,3,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,8,3,6,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,10,10,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,3,4,13,13,17,13,3,3,4,8,3,3,13,13,13,13,3,13,13,17,3,3,4,4,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,10,11,10,11,12,12,12,11,10,11,12,12,10,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,8,10,10,10,10,10,10,10,10,10,10,10,10,6,5,5,5,5,4,17,13,13,3,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,13,13,13,13,13,13,16,13,13,13,13,13,13,4,16,13,13,13,13,13,13,13,8,13,13,16,13,13,4,6,13,16,4,16,16,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,6,6,13,13,3,6,6,6,16,13,13,13,13,13,6,16,13,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,13,13,13,13,13,13,13,13,2,16,13,16,16,6,13,13,13,13,13,13,16,13,13,16,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,13,11,13,11,11,11,13,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,6,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,8,10,10,10,11,10,10,11,11,11,11,17,17,17,17,4,3,17,17,4,13,6,3,3,13,13,17,13,3,17,4,3,6,3,6,13,17,6,13,17,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,12,12,12,12,12,12,12,6,6,8,10,8,13,6,13,17,17,17,3,4,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,4,4,13,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,6,6,3,6,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,13,4,8,3,13,13,13,13,8,8,8,4,4,3,8,13,13,13,4,13,13,13,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,10,12,10,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,12,12,12,12,12,12,12,12,6,6,6,3,11,5,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,12,11,17,3,6,17,17,8,11,11,10,10,11,11,11,12,11,11,3,8,11,11,10,11,11,11,10,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,6,3,3,8,6,3,6,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,10,10,10,10,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,12,3,8,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AccountId","AccountManager","AccountPublic","Address","Ambassador","Attester","Balance","BenefitSource","Blake2","Block","BlockNumber","Bool","BootstrapPool","Bytes","Bytes","ChainId","CircuitInboundResult","CircuitOutboundMessage","CircuitPortal","CircuitRole","Collator","Commit","Complete","Compose","ConfirmedSideEffect","Contract","ContractAccessError","ContractAuthor","Crypto","Currency","DoesntExist","DynamicAddress","DynamicBytes","Enum","Error","Escrow","EscrowCurrencyOf","EscrowTrait","EscrowedBalanceOf","EthVerifier","Ethereum","Events","ExecutionSignal","Executor","Executors","ExtraMessagePayload","Extrinsic","FetchContractsResult","FullSideEffect","GatewayABIConfig","GatewayExpectedOutput","GatewayGenesisConfig","GatewayInboundProtocol","GatewayPointer","GatewaySysProps","GatewayType","GatewayVendor","GenericAddress","GenericPrimitivesHeader","HA","HardenedSideEffect","Hash","Hasher","Header","Inflation","Int","IsTombstone","KEY_TYPE","Keccak256","Kill","Kusama","Local","LocalState","Mapping","Nonce","OnCircuit","Optimistic","Option","OptionalInsurance","OptionalReward","Outcome","Output","Payload","Polkadot","Portal","ProgrammableExternal","ProgrammableInternal","ProofTriePointer","ReadLatestGatewayHeight","Receipts","Ref","Relayer","Requester","Revert","Rococo","RpcPayloadSigned","RpcPayloadUnsigned","SFXBid","SecurityLvl","SideEffect","SideEffectId","SignalKind","Slice","Staker","State","StepConfirmation","Storage","StorageRef","String","Struct","Success","SystemHashing","Time","TrafficFees","TrafficRewards","Transaction","TxOnly","Type","Uint","UncheckedExtrinsic","UnexpectedFailure","Unsettled","Value","XExecSignalId","XExecStepSideEffectId","Xdns","Xtx","XtxId","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abi","account_manager","active_set","add_new_xdns_record","address_length","allowed_side_effects","arguments","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_bid","bid","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridges","bump_contracts_registry_nonce","bytes","call","call_bytes","call_escrow","call_static","can_withdraw","check_merkle_proof","circuit","circuit_portal","claimable","clear","clear","clear","clear","clear","clear","clock","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_txt","collateral_bond","common","compute_merkle_root_blake2","compute_merkle_root_keccak256","confirm_and_decode_payload_params","confirm_event_inclusion","confirmation_outcome","confirmed","confirmed_cost","confirmed_executioner","confirmed_received_at","contract_metadata","contracts_registry","cost","crypto","custom_call_dirty","custom_call_escrow","custom_call_static","custom_payload","decimals","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","delay_steps_at","deposit","deposit_immediately","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dest","digest","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_action","encoded_action","encoded_args","encoded_args","encoded_args_abi","enforce_executor","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","escrow","exec_type","execution_id","executioner","executor","executors","expected_output","extra","extra_payload","extrinsics_root","extrinsics_version","fetch_nonce","fetch_records","fetch_side_effect_interface","finalize","finalize_infallible","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","full_side_effects","gateway_inbound_protocol","gateway_type","gateway_vendor","genesis_hash","get_abi","get_charge_or_fail","get_gateway_para_id","get_gateway_security_coordinates","get_gateway_type_unsafe","get_gateway_value_unsigned_type_unsafe","get_gateway_vendor","get_latest_finalized_header","get_latest_finalized_height","get_storage","get_xtx_status","hash_size","hasher","id","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inclusion_data","increase_bond","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_input","input","input_data","insurance","insurance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","kind","local_state","match_format","max_encoded_len","max_encoded_len","max_reward","method_name","method_name","method_name","method_name","module_name","module_name","modules_encoded","monetary","name","name","new","no_charge_or_fail","number","on_collect_claimable","optimistic","outbound_event","output","pallet","params","parent_hash","partial_cmp","portal","prize","proof","proof_type","protocol","public","read_cmp_latest_target_height","recalculate_executors_stakes","received_at","requester","requester","reserve_bond","reserved_bond","result_format","result_status","retrieve_gateway_pointers","reward_asset_id","reward_asset_id","security_lvl","security_lvl","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_storage","side_effect","signature","signature","signature_caster","signed_extrinsic","signer","size_of","slash_bond","ss58_format","stakes","stakes_per_executor","state","state","state_root","step","step_index","storage","structs","submission_target_height","swap_dirty","swap_escrow","target","target","target","threevm","timeouts_at","to_jsonrpc_signed","to_jsonrpc_unsigned","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_decimals","token_symbol","total_nominated_stake","total_reward","transfer","transfer_escrow","transfers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_signed","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve_bond","update_gateway_ttl","using_encoded","value","value","value_type_size","vendor","volatile","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","withdraw_immediately","xdns","xtx","block_height","key","output","signatures","value","0","0","0","0","encoded_height","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","Address","Blake2","Bool","Bytes","Contract","ContractActionDesc","Crypto","CryptoAlgo","DynamicAddress","DynamicBytes","Ecdsa","Ed25519","Enum","GatewayABIConfig","Hasher","HasherAlgo","Int","Keccak256","Mapping","Option","OptionalInsurance","OptionalReward","Parameter","Ref","Slice","Sr25519","StorageRef","String","Struct","StructDecl","Type","Uint","Value","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action_id","address_length","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_length","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_signature","crypto","decimals","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_buf2val","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval_abi","eval_to_encoded","eval_trait_dynamically","extract_property_names_from_signature_as_bytes","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_string","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signature_to_abi","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash_size","hasher","identity","identity","identity","identity","identity","identity","identity","indexed","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","name","name","no","offsets","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_of","structs","target_id","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_type_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","1","1","AccountManager","Commit","ExecutionId","Outcome","RequestCharge","Revert","Settlement","UnexpectedFailure","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump_contracts_registry_nonce","can_withdraw","charge_fee","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit","deposit_immediately","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","finalize","finalize_infallible","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_charge_or_fail","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","maybe_asset_id","no_charge_or_fail","offered_reward","on_collect_claimable","outcome","payee","recipient","recipient","requester","role","role","settlement_amount","source","source","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","withdraw_immediately","chain_circuit","header_chain","messages","polkadot_core","runtime","test_utils","ADDITIONAL_MESSAGE_BYTE_DELIVERY_WEIGHT","AVERAGE_ON_INITIALIZE_RATIO","AccountId","AccountIdConverter","AccountSigner","BEST_FINALIZED_CIRCUIT_HEADER_METHOD","Balance","BlockLength","BlockNumber","BlockWeights","Circuit","CircuitFinalityApi","DAYS","DEFAULT_MESSAGE_DELIVERY_TX_WEIGHT","EXTRA_STORAGE_PROOF_SIZE","FROM_CIRCUIT_LATEST_CONFIRMED_NONCE_METHOD","FROM_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","FROM_CIRCUIT_UNREWARDED_RELAYERS_STATE","FromCircuitInboundLaneApi","HOURS","Hash","Hasher","Header","Index","MAXIMAL_ENCODED_ACCOUNT_ID_SIZE","MAXIMUM_BLOCK_WEIGHT","MAX_SINGLE_MESSAGE_DELIVERY_CONFIRMATION_TX_WEIGHT","MAX_UNCONFIRMED_MESSAGES_AT_INBOUND_LANE","MAX_UNREWARDED_RELAYER_ENTRIES_AT_INBOUND_LANE","MILLISECS_PER_BLOCK","MINUTES","NORMAL_DISPATCH_RATIO","SESSION_LENGTH","SLOT_DURATION","Signature","TO_CIRCUIT_ESTIMATE_MESSAGE_FEE_METHOD","TO_CIRCUIT_LATEST_GENERATED_NONCE_METHOD","TO_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","TO_CIRCUIT_MESSAGES_DISPATCH_WEIGHT_METHOD","TX_EXTRA_BYTES","ToCircuitOutboundLaneApi","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_finalized","best_finalized_with_context","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_account_from_gateway_id","drop","drop","drop","drop","estimate_message_delivery_and_dispatch_fee","estimate_message_delivery_and_dispatch_fee_with_context","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_known_header","is_known_header_with_context","latest_confirmed_nonce","latest_confirmed_nonce_with_context","latest_generated_nonce","latest_generated_nonce_with_context","latest_received_nonce","latest_received_nonce","latest_received_nonce_with_context","latest_received_nonce_with_context","max_extrinsic_size","max_extrinsic_weight","messages_dispatch_weight","messages_dispatch_weight_with_context","time_units","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unrewarded_relayers_state","unrewarded_relayers_state_with_context","vzip","vzip","vzip","vzip","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","AuthoritySet","FinalityProof","HeaderChain","InclusionProofVerifier","InitializationData","Parameter","Transaction","TransactionInclusionProof","__clone_box","__clone_box","append_header","as_any","as_any","as_any_mut","as_any_mut","authorities","authority_list","authority_set","best_finalized","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","find_grandpa_authorities_scheduled_change","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gateway_id","header","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","is_halted","justification","max_encoded_len","new","serialize","serialize","set_id","set_id","target_header_number","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_transaction_inclusion_proof","vzip","vzip","AncestryChain","Error","ExtraHeadersInVotesAncestries","GrandpaJustification","InvalidAuthoritySignature","InvalidJustificationTarget","JustificationDecode","PrecommitIsNotCommitDescendant","TooLowCumulativeWeight","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_justification_target","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","ensure_descendant","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","parents","round","target_header_number","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unvisited","verify_justification","votes_ancestries","vzip","vzip","vzip","Halted","InboundLaneData","LaneId","Message","MessageData","MessageId","MessageKey","MessageNonce","MessagePayload","Normal","OperatingMode","OutboundLaneData","Parameter","RejectingOutboundMessages","UnrewardedRelayersState","Weight","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_size_hint","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","key","lane_id","last_confirmed_nonce","last_delivered_nonce","latest_generated_nonce","latest_received_nonce","messages_in_oldest_entry","nonce","oldest_unpruned_nonce","payload","relayers","save","serialize","source_chain","target_chain","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_messages","total_unrewarded_messages","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unrewarded_relayer_entries","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Error","Error","ForbidOutboundMessages","LaneMessageVerifier","MessageDeliveryAndDispatchPayment","MessagesDeliveryProof","RelayerRewards","RelayersRewards","Sender","TargetHeaderChain","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","messages","pay_delivery_and_dispatch_fee","pay_delivery_and_dispatch_fee","pay_relayers_rewards","pay_relayers_rewards","reward","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_message","verify_message","verify_message","verify_message","verify_messages_delivery_proof","verify_messages_delivery_proof","vzip","vzip","DispatchMessage","DispatchMessageData","DispatchPayload","Error","ForbidInboundMessages","MessageDispatch","MessagesProof","ProvedLaneMessages","ProvedMessages","SourceHeaderChain","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch","dispatch","dispatch_weight","dispatch_weight","drop","drop","drop","drop","encode_to","eq","equivalent","fee","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_clear","key","lane_state","messages","payload","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_messages_proof","verify_messages_proof","vzip","vzip","vzip","vzip","AVERAGE_ON_INITIALIZE_RATIO","AccountId","AccountIdConverter","AccountPublic","AdditionalSigned","Balance","Block","BlockLength","BlockNumber","BlockWeights","Convert","DAYS","EXTRA_STORAGE_PROOF_SIZE","HOURS","Hash","Hasher","Hashing","Header","Index","MAXIMAL_ENCODED_ACCOUNT_ID_SIZE","MAXIMUM_BLOCK_WEIGHT","MAX_MESSAGES_IN_DELIVERY_TRANSACTION","MAX_UNCONFIRMED_MESSAGES_AT_INBOUND_LANE","MAX_UNREWARDED_RELAYER_ENTRIES_AT_INBOUND_LANE","MILLISECS_PER_BLOCK","MINUTES","Nonce","Parameter","Rococo","SLOT_DURATION","Signature","SignedBlock","SignedExtensions","SignedExtra","__clone_box","account_info_storage_key","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert","convert","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","max_extrinsic_size","max_extrinsic_weight","new","time_units","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","0","ACCOUNT_DERIVATION_PREFIX","Account","BASILISK_CHAIN_ID","BlockNumber","BlockNumberOf","CALL_DISPATCH_MODULE_PREFIX","CATALYST_CHAIN_ID","CIRCUIT_BRIDGE_INSTANCE","CIRCUIT_CHAIN_ID","Chain","ChainId","DALI_CHAIN_ID","DOLPHIN_CHAIN_ID","GATEWAY_BRIDGE_INSTANCE","GATEWAY_CHAIN_ID","GENSHIRO_CHAIN_ID","Hash","HashOf","Hasher","HasherOf","Header","HeaderOf","KUSAMA_CHAIN_ID","MILLAU_CHAIN_ID","NO_INSTANCE_ID","PANGOLIN_CHAIN_ID","POLKADOT_CHAIN_ID","PreComputedSize","RIALTO_CHAIN_ID","ROCFINITY_CHAIN_ID","ROCOCO_CHAIN_ID","ROCOCO_ENCOINTER_CHAIN_ID","ROOT_ACCOUNT_DERIVATION_PREFIX","Root","SNOWBLINK_CHAIN_ID","SOONSOCIAL_CHAIN_ID","Size","SourceAccount","StorageProofChecker","StorageProofError","StorageRootMismatch","StorageValueUnavailable","WOCOCO_CHAIN_ID","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","craft_valid_storage_proof","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_account_id","derive_relayer_fund_account_id","drop","drop","drop","drop","eq","equivalent","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","new","read_value","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","0","0","ALICE","Account","BOB","CHARLIE","DAVE","EVE","FERDIE","JustificationGeneratorParams","TEST_GRANDPA_ROUND","TEST_GRANDPA_SET_ID","__clone_box","__clone_box","accounts","as_any","as_any","as_any_mut","as_any_mut","authorities","authorities","authority_list","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","forks","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","header","header_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","make_default_justification","make_justification_for_header","pair","public","round","secret","set_id","sign","signed_precommit","test_header","test_header_with_correct_parent","test_keyring","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","voter_set","votes","vzip","vzip","LocalStateExecutionView","LocalTrigger","OnLocalTrigger","XExecSignalId","XExecStepSideEffectId","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contract","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hardened_side_effects","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","load_local_state","local_state","maybe_xtx_id","new","new","on_local_trigger","on_signal","steps_cnt","submitted_side_effects","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","xtx_id","CircuitPortal","EthVerifier","confirm_event_inclusion","read_cmp_latest_target_height","Ambassador","Attester","BenefitSource","BootstrapPool","CircuitRole","ClaimableArtifacts","Collator","ContractAuthor","Executor","Inflation","Local","Relayer","Requester","Staker","TrafficFees","TrafficRewards","Unsettled","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","beneficiary","benefit_source","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","partial_cmp","role","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_round_claim","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","Clock","ClockMock","as_any","as_any_mut","borrow","borrow_mut","current_round","current_round","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","0","BLOCKS_PER_DAY","BLOCKS_PER_HOUR","BLOCKS_PER_YEAR","DEFAULT_ROUND_TERM","OrderedSet","Range","RoundIndex","RoundInfo","SECONDS_PER_BLOCK","SECONDS_PER_HOUR","SECONDS_PER_YEAR","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contains","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sorted_set","head","ideal","identity","identity","identity","index","init","init","init","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_valid","max","max_encoded_len","max_encoded_len","min","new","new","partial_cmp","remove","serialize","serialize","should_update","term","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","using_encoded","vzip","vzip","vzip","AssemblyScript","Compiler","ContractMetadata","ContractType","Ink","Language","RustC","Solang","Solidity","Source","SourceCompiler","SourceLanguage","System","VanillaEvm","VanillaWasm","VolatileEvm","VolatileWasm","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_generate_side_effects","can_instantiate","can_remunerate","clear","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_contract_type","has_storage","identity","identity","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","new","new","new","new","serialize","serialize","serialize","system_contract","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_type","AuthorInfo","ContractsRegistry","Error","KindValidator","RegistryContract","RegistryContractId","__clone_box","__clone_box","abi","account","action_descriptions","as_any","as_any","as_any_mut","as_any_mut","author","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","bytes","can_generate_side_effects","can_instantiate","can_remunerate","clear","clear","clone","clone","clone_into","clone_into","code_txt","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fees_per_single_use","fetch_contract_by_id","fetch_contracts","fmt","fmt","from","from","from_compose","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","generate_id","has_storage","identity","identity","info","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","meta","new","new","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Escrow","FIRST_REQUESTER_NONCE","Transfer","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","commit","deref","deref","deref_mut","deref_mut","drop","drop","exec","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","revert","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Active","Active","Bond","CancelledScheduledStakingRequest","CandidateBondLessRequest","CapacityStatus","Decrease","Decrease","EXECUTOR_LOCK_ID","Empty","ExecutorInfo","ExecutorSnapshot","ExecutorStatus","Executors","ExecutorsMock","Fixtures","Full","Idle","Increase","Leaving","NominatedStake","Partial","Revoke","STAKER_LOCK_ID","ScheduledConfigurationRequest","ScheduledStakingRequest","StakeAdjust","StakerAdded","StakerStatus","StakingAction","ToBottom","ToTop","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action","action","active_set","active_set","active_set_size","amount","amount","amount","are_valid","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","bond","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_bond_less_delay","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","collateral_bond","collateral_bond","commission","commission","configure_executor_delay","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_owner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","increase_bond","increase_bond","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","leave_candidates_delay","leave_stakers_delay","max_bottom_stakes_per_candidate","max_commission","max_risk","max_stakes_per_staker","max_top_stakes_per_candidate","min_atomic_stake","min_candidate_bond","min_executor_bond","min_total_stake","nominated_stake","owner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","recalculate_executors_stakes","recalculate_executors_stakes","reserve_bond","reserve_bond","revoke_stake_delay","risk","risk","serialize","slash_bond","slash_bond","staker","staker","stakes","stakes","stakes","stakes_per_executor","stakes_per_executor","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","total_nominated_stake","total_nominated_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve_bond","unreserve_bond","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when_executable","when_executable","when_executable","when_executable","0","0","new_total","0","0","GatewayInboundProtocol","call","call_escrow","call_static","custom_call_dirty","custom_call_escrow","custom_call_static","get_storage","set_storage","swap_dirty","swap_escrow","transfer","transfer_escrow","StrLike","ensure_str_err","match_dfd","match_signature","trim_whitespace","BeneficiaryRole","DECIMALS","Developer","Executor","InflationAllocation","MILLIT3RN","TRN","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","developer","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","executor","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_valid","max_encoded_len","max_encoded_len","serialize","serialize","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Optimistic","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_bid_4_sfx","try_dropped_at_bidding_refund","try_from","try_into","try_slash","try_unbond","type_id","unchecked_into","unique_saturated_into","vzip","AccountManager","AddLiquidity","ApplyFailed","ApplyTriggeredWithUnexpectedStatus","ArithmeticErrorDivisionByZero","ArithmeticErrorOverflow","ArithmeticErrorUnderflow","Balances","BiddingFailedExecutorsBalanceTooLowToReserve","BiddingInactive","BiddingRejectedBetterBidFound","BiddingRejectedBidBelowDust","BiddingRejectedBidTooHigh","BiddingRejectedExecutorNotEnoughBalance","Call","Call","CallCustom","CallEvm","CallNative","CallWasm","CancelledSideEffects","ChargingTransferFailed","ChargingTransferFailedAtPendingExecution","Config","ContractXtxKilledRunOutOfFunds","CriticalStateSquareUpCalledToFinishWithoutFsxConfirmed","DeletionQueueLimit","DeterminedForbiddenXtxStatus","EnactSideEffectsCanOnlyBeCalledWithMin1StepFinished","Error","EscrowBalance","EscrowTransfer","Escrowed","Event","Event","Executors","FailedToCheckInOverXBI","FailedToConvertSFX2XBI","FailedToConvertXBIResult2SFXConfirmation","FailedToCreateXBIMetadataDueToWrongAccountConversion","FailedToEnterXBIPortal","FailedToExitXBIPortal","FailedToHardenFullSideEffect","FatalCommitSideEffectWithoutConfirmationAttempt","FatalErroredCommitSideEffectConfirmationAttempt","FatalErroredRevertSideEffectConfirmationAttempt","FatalXtxTimeoutXtxIdNotMatched","FinalizeSquareUpFailed","FullSideEffects","InsuranceBondAlreadyDeposited","InsuranceBondNotRequired","InvalidFSXBidStateLocated","InvalidLocalTrigger","LocalExecutionUnauthorized","LocalSideEffectExecutionNotApplicable","LocalXtxStates","Module","NewSideEffectsAvailable","Notification","Pallet","PendingSFXBids","PendingXtxBidsTimeoutsMap","PendingXtxTimeoutsMap","Portal","RefundTransferFailed","RelayEscrowedFailedNothingToConfirm","RequesterNotEnoughBalance","Result","RewardTransferFailed","SFX2XTXLinksMap","SFXBiddingPeriod","SFXNewBidReceived","SelfAccountId","SelfGatewayId","SelfParaId","SetupFailed","SetupFailedDuplicatedXtx","SetupFailedEmptyXtx","SetupFailedIncorrectXtxStatus","SetupFailedUnknownXtx","SetupFailedXtxAlreadyFinished","SetupFailedXtxNotFound","SetupFailedXtxReverted","SetupFailedXtxRevertedTimeout","SetupFailedXtxStorageArtifactsNotFound","SetupFailedXtxWasDroppedAtBidding","SideEffectConfirmed","SideEffectIsAlreadyScheduledToExecuteOverXBI","SideEffectsConfirmed","SideEffectsValidationFailed","SignalQueueDepth","SignalQueueFull","Swap","Transfer","TransferAssets","TransferORML","UnauthorizedCancellation","UnsupportedRole","UpdateXtxTriggeredWithUnexpectedStatus","WeightInfo","WeightInfo","XBIExitFailedOnSFXConfirmation","XBIPortal","XBIPromise","XExecSignals","XTransactionReadyForExec","XTransactionReceivedForExec","XTransactionStepFinishedExec","XTransactionXtxDroppedAtBidding","XTransactionXtxFinishedExecAllSteps","XTransactionXtxRevertedAfterTimeOut","Xdns","XtxChargeBondDepositFailedCantAccessBid","XtxChargeFailedRequesterBalanceTooLow","XtxTimeoutCheckInterval","XtxTimeoutDefault","__clone_box","__clone_box","__clone_box","account_id","accumulate","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bid_sfx","bid_sfx","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_xtx","cancel_xtx","clone","clone","clone","clone_into","clone_into","clone_into","confirm_side_effect","confirm_side_effect","convert_side_effects","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","do_xbi_exit","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","exec_in_xtx_ctx","execute_side_effects_with_xbi","execute_side_effects_with_xbi","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_active_timing_links","get_call_name","get_call_names","get_dispatch_info","get_full_side_effects","get_local_xtx_state","get_pending_sfx_bids","get_pending_xtx_bids_timeouts","get_sfx_2_xtx_links","get_signal_queue","get_x_exec_signals","identity","identity","identity","index","init","init","init","init","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","load_local_state","migrate","module_name","name","new_call_variant_bid_sfx","new_call_variant_cancel_xtx","new_call_variant_confirm_side_effect","new_call_variant_execute_side_effects_with_xbi","new_call_variant_on_extrinsic_trigger","new_call_variant_on_local_trigger","new_call_variant_on_remote_gateway_trigger","new_call_variant_on_xbi_sfx_resolved","new_call_variant_on_xcm_trigger","offchain_worker","offchain_worker","on_chain_storage_version","on_extrinsic_trigger","on_extrinsic_trigger","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_local_trigger","on_local_trigger","on_local_trigger","on_remote_gateway_trigger","on_remote_gateway_trigger","on_runtime_upgrade","on_signal","on_xbi_sfx_resolved","on_xbi_sfx_resolved","on_xcm_trigger","on_xcm_trigger","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","with_weight","bid_amount","confirmation","max_exec_cost","max_notifications_cost","sequential","sfx_id","sfx_id","sfx_id","side_effect","side_effects","trigger","xtx_id","xtx_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","2","2","2","2","2","2","3","3","3","3","3","3","3","3","3","3","3","4","4","4","4","4","4","4","4","4","5","5","5","5","5","6","6","7","8","9","ErrorMsg","Portal","RegistrationData","RococoBridge","__clone_box","allowed_side_effects","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","confirm_and_decode_payload_params","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encoded_registration_data","eq","equivalent","extrinsic","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gateway_abi","gateway_genesis","gateway_id","gateway_id","gateway_sys_props","gateway_type","gateway_vendor","get_latest_finalized_header","get_latest_finalized_height","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","msg","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","url","vzip","vzip","SideEffectProtocol","get_arguments_2_state_mapper","get_arguments_abi","get_confirming_events","get_escrowed_events","get_id","get_name","get_reversible_commit","get_reversible_revert","populate_state","validate_args","ADD_LIQUIDITY_SIDE_EFFECT_ID","ASSETS_TRANSFER_SIDE_EFFECT_ID","CALL_SIDE_EFFECT_ID","COMPOSABLE_CALL_SIDE_EFFECT_ID","ConfirmationOutcome","ConfirmedSideEffect","DATA_SIDE_EFFECT_ID","EVM_CALL_SIDE_EFFECT_ID","Error","Escrow","EventSignature","FullSideEffect","HardenedSideEffect","HardeningMissingConfirmationError","MisbehaviourMalformedValues","ORML_TRANSFER_SIDE_EFFECT_ID","Optimistic","SFXBid","SWAP_SIDE_EFFECT_ID","SecurityLvl","SideEffect","SideEffectId","SideEffectInterface","SideEffectName","Success","TRANSFER_SIDE_EFFECT_ID","TargetId","TimedOut","WASM_CALL_SIDE_EFFECT_ID","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","argument_abi","argument_to_state_mapper","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_bid","bid","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_events","confirm_events","confirmation_outcome","confirmed","confirmed_cost","confirmed_executioner","confirmed_received_at","cost","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_action","encoded_action","encoded_args","encoded_args","encoded_args_abi","enforce_executor","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","escrowed_events","executioner","executor","expect_reserved_bond","expect_sfx_bid","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_id","generate_id","generate_id","get_arguments_2_state_mapper","get_arguments_abi","get_bond_value","get_confirming_events","get_escrowed_events","get_id","get_insurance","get_name","get_reserved_bond","get_reversible_commit","get_reversible_revert","id","id_as_bytes","identity","identity","identity","identity","identity","identity","identity","identity","inclusion_data","index","index","init","init","init","init","init","init","init","init","init","input","insurance","insurance","interface","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_bid_resolved","is_clear","is_clear","is_clear","is_clear","is_clear","is_successfully_confirmed","max_reward","name","new_none_optimistic","output","parser","partial_cmp","prize","received_at","requester","reserved_bond","revert_events","reward_asset_id","reward_asset_id","security_lvl","security_lvl","serialize","signature","submission_target_height","target","target","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","key","received","SideEffectInterface","argument_abi","argument_to_state_mapper","commit_events","confirm_events","escrowed_events","id","name","revert_events","Arguments","Source","VendorSideEffectsParser","parse_event","HasXDNSAccess","Local","RawSideEffectHeader","Remote","SIDE_EFFECT_HEADER_SIZE","SIDE_EFFECT_NAME_SIZE","SIDE_EFFECT_TYPE_SIZE","Signature","Surrounding","TARGET_ID_SIZE","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_abi","get_my_target_id","get_surrounding","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","read_raw_side_effect_header","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_next_arg","validate_next_args","vzip","vzip","CircuitRole","CircuitStatus","Committed","ContractAuthor","DroppedAtBidding","Executor","Finished","FinishedAllSteps","InsuranceEnact","Local","LocalXtxCtx","PendingBidding","PendingExecution","Ready","RefundAndPunish","RefundBoth","Relayer","Requested","Requester","RevertKill","RevertMisbehaviour","RevertTimedOut","Reverted","Reward","XExecSignal","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","delay_steps_at","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determine_bidding_status","determine_step_status","determine_xtx_status","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","full_side_effects","generate_id","generate_step_id","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","local_state","new","partial_cmp","partial_cmp","partial_cmp","requester","requester_nonce","setup_fresh","status","steps_cnt","timeouts_at","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","use_protocol","vzip","vzip","vzip","vzip","vzip","xtx","xtx_id","AliveContractInfo","CodeHash","RawAliveContractInfo","TrieId","__clone_box","_reserved","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","child_trie_info","clear","clone","clone_into","code_hash","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deduct_block","default","deref","deref_mut","drop","encode_to","eq","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","last_write","pair_count","rent_allowance","rent_paid","storage_size","to_keyed_vec","to_owned","trie_id","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Bounced","Characteristic","CharacteristicValidator","GetState","GetState","GetState","Initiated","Instantiate","LocalStateAccess","ModuleOperations","Precompile","PrecompileArgs","PrecompileInvocation","Remunerated","Remuneration","Remuneration","Signal","Signal","SignalOpcode","Storage","Submit","SubmitSideEffects","ThreeVm","Volatile","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","equivalent","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_registry","get_author","get_bytecode","get_state","get_type","identity","identity","identity","init","init","init","init","init","init","instantiate_check","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invoke","invoke_raw","load_local_state","lookup","new","peek_registry","remunerable_check","remuneration_id","set_author","set_type","storage_check","to_keyed_vec","to_keyed_vec","to_keyed_vec","try_finalize","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_persist_author","try_remove_author","try_remunerate","try_remunerate_exact","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validate","volatile_check","vzip","vzip","vzip","vzip","vzip","vzip","xtx_id","0","0","0","1","1","1","0","BalanceOf","EscrowedBalanceOf","EscrowedCurrencyOf","TransferEntry","__clone_box","account_encode_to_h256","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","commit_deferred_transfers","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","equivalent","escrow_transfer","fmt","from","from_mut","from_mut","from_ref","from_ref","h256_to_account","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","just_transfer","to","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","unchecked_into","unique_saturated_into","value","vzip","FROM_2XX_32B_HASH","LocalState","State","TO_2XX_32B_HASH","VALUE_2XX_32B_HASH","Volatile","cmp","get","get_state","get_state_mut","hash","insert","key_2_state_key","state","stick_key_with_prefix","value_2_state_value","SubstrateWeight","WeightInfo","as_any","as_any_mut","bid_sfx","bid_sfx","borrow","borrow_mut","cancel_xtx","cancel_xtx","confirm_side_effect","confirm_side_effect","deref","deref_mut","drop","execute_side_effects_with_xbi","execute_side_effects_with_xbi","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","on_extrinsic_trigger","on_extrinsic_trigger","on_local_trigger","on_local_trigger","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AllowedSideEffect","FetchXdnsRecordsResponse","Parachain","Xdns","XdnsGatewayId","XdnsRecord","XdnsRecordId","__clone_box","__clone_box","__clone_box","add_new_xdns_record","allowed_side_effects","allowed_side_effects","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assign_registrant","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fetch_records","fetch_side_effect_interface","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_abi","gateway_genesis","gateway_id","gateway_sys_props","gateway_type","gateway_vendor","generate_id","get_abi","get_gateway_para_id","get_gateway_security_coordinates","get_gateway_type_unsafe","get_gateway_value_unsigned_type_unsafe","get_gateway_vendor","id","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","last_finalized","new","new_from_primitives","parachain","registrant","relay_chain_id","security_coordinates","serialize","serialize","serialize","set_last_finalized","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_gateway_ttl","url","using_encoded","vzip","vzip","vzip","xdns_records","LocalState","Volatile","Xtx","XtxId","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","cmp","complete_side_effect","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","delay_steps_at","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","full_side_effects","generate_xtx_id","get","get_state","get_state","get_state_mut","get_state_mut","hash","identity","identity","init","init","initial_input","insert","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","is_completed","key_2_state_key","local_state","new","new","requester","result_status","state","stick_key_with_prefix","timeouts_at","to_keyed_vec","to_keyed_vec","to_owned","to_owned","total_reward","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","value_2_state_value","vzip","vzip"],"q":["pallet_circuitpallet_circuit::GatewayExpectedOutput","","","","","pallet_circuit::GatewayType","","","","pallet_circuit::ReadLatestGatewayHeight","pallet_circuit::SignalKind","pallet_circuit::Type","","","","","","","","","","","","","","pallet_circuit::abipallet_circuit::abi::Type","","","","","","","","","","","","","","pallet_circuit::account_managerpallet_circuit::bridges","","","","","","pallet_circuit::bridges::chain_circuitpallet_circuit::bridges::chain_circuit::time_units","","","","","pallet_circuit::bridges::header_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::bridges::header_chain::justification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::bridges::messagespallet_circuit::bridges::messages::source_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::bridges::messages::target_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::bridges::polkadot_corepallet_circuit::bridges::polkadot_core::time_units","","","","","pallet_circuit::bridges::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::bridges::runtime::SourceAccount","pallet_circuit::bridges::test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::circuit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::circuit_portal","","","","pallet_circuit::claimable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::clock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::commonpallet_circuit::contract_metadatapallet_circuit::contracts_registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::escrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::executorspallet_circuit::executors::ExecutorStatus","pallet_circuit::executors::StakeAdjust","pallet_circuit::executors::StakerAdded","pallet_circuit::executors::StakingAction","","pallet_circuit::gateway_inbound_protocol","","","","","","","","","","","","","pallet_circuit::match_format","","","","","pallet_circuit::monetary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::optimistic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::palletpallet_circuit::pallet::Call","","","","","","","","","","","","","pallet_circuit::pallet::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::portal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::protocol","","","","","","","","","","","pallet_circuit::side_effectpallet_circuit::side_effect::ConfirmationOutcome","","","pallet_circuit::side_effect::interface","","","","","","","","","pallet_circuit::side_effect::parser","","","","pallet_circuit::signature_caster","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::statepallet_circuit::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::threevmpallet_circuit::threevm::PrecompileArgs","","","","","","pallet_circuit::threevm::PrecompileInvocation","pallet_circuit::transfers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::volatile","","","","","","","","","","","","","","","","pallet_circuit::weights","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_circuit::xdnspallet_circuit::xtx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Alias to the public key used for this chain, actually a …","","","","Balance of an account.","","","","Common types across all runtimes","","","","where u8 is bytes length","","Inbound Steps that specifie expected data deposited by …","Outbound Step that specifies expected transmission medium …","","","","","Allows the contract to finish execution in an optimistic …","A struct that encodes RPC parameters required for a call …","","","The possible errors that can happen querying the storage …","","","","The given address doesn’t point to a contract.","","","","","","","","","","","Expect events as a result of that call - will be described …","A representation of a signal","","","Outbound Step that specifies expected transmission medium …","Yet another event or Storage output","A result type of a get storage call.","","Describe ABI configuration for a gateway so that it’s …","Inbound Steps that specifie expected data deposited by …","","","","Represents assorted gateway system properties.","","","","Structure used at gateway registration as a starting point …","","","A hash of some data used by the chain.","","","","","The specified contract is a tombstone and thus cannot have …","Defines application identifier for crypto keys of this …","","Allows the contract to break execution as soon as possible","","","","","Index of a transaction in the chain. 32-bit should be …","","","","","","","Yet another event or Storage output. If expecting output u …","Payload used by this example crate to hold price data …","","","","","Inclusion proofs of different tries","Read latest height of gateway known to a light client","Proof is a merkle path in the receipts trie (in Substrate …","","","","","","","","All Executors from the active set can bid for SFX …","","","","","DynamicBytes and String are lowered to a vector.","","Proof is a merkle path in the state trie","","Effect would be the modified storage key","","","","","","","","","Proof is a merkle path in the transaction trie (extrisics …","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","Simple blob to hold an extrinsic without committing to its …","","","There is no way to declare value in Solidity (should there …","","","","A composable cross-chain (X) transaction that has already …","","","","","","","","","","","","","","","","","","","","","","","","","","","address length in bytes","","Array of next arguments: encoded bytes of arguments that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bid amount - always below SFX::max_fee requested by a user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bump contracts registry nonce in Account Manager nonce …","","Call smart contract behind that gateway in a dirty way - …","Encoded call bytes","Call smart contract behind that gateway in a reversible …","Call smart contract behind that gateway in a static way - …","","Check ethereum merkle proof. Returns Ok(computed-root) if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute ethereum merkle root.","Compute ethereum merkle root.","","","","","","","","","","","cryptography algorithm","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Custom message bytes, that would have to be decoded by the …","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule execution of steps in the future intervals","Send funds to a recipient via the escrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The id associated with the execution","","Bidding Executor belonging to the active set","","Expected results","Encoded extras to that transctions, like versions and gas …","Extra payload in case the message is signed or uses custom …","","Extrinsics version","","Fetches all known XDNS records","","Finalize a transaction, with an optional reason for …","Assert infallible finalize of a transaction if exists","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Vector of Steps that each can consist out of at least one …","","","type of gateway chain this message is intended for","Genesis hash - block id of the genesis block use to …","","Lookup charge by Id and fail if not found","","","","","","","","Get storage on foreign chain under given key. Returns …","","hash size in bytes","hashing algorithm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded content of composable tx","","","","Insurance in case of optimistic FSX","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The signal type","Local Xtx State","","","","","Method name","","","Encoded utf-8 string of method name that implements …","Module/pallet name","Encoded utf-8 string of module name that implements …","SCALE-encoded modules following the format of selected …","","","Message name/identifier","","Lookup charge by Id and fail if not found","","","","","","The module that hosts all the FRAME types needed to add …","","","","","","","","","","","","","Executor - subject of SFX","The owner of the bid","","Optional reserved bond in case of optimistic FSX","","Has returned status already and what","Retrieves all available gateways for a given ChainId. …","","Optional reserved asset id in case execution on foreign …","","","Encoded sender’s public key","","","","","","","","","","","","","","","","","","Set storage on foreign chain of given key pointing to new …","","","Encoded tx signature","","","","","","","","","","","","The current step for the signal","","","value length in bytes. ToDo: move as part of metadata.","","Swap X tokens to Y different tokens on a chain behind that …","Swap X tokens to Y different tokens on a chain behind that …","","","Encoded target’s public key","","Expiry timeout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Total reward","Transfer balance on a chain behind that gateway in a …","Transfer balance on a chain behind that gateway in a dirty …","","","","","","","","","","","","Maps a chain id to its system properties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded and signed transaction ready to send","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","Autogenerated weights for pallet_circuit_circuit_portal","","","","Optionally expect dispatch of extrinsic only at the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","where u8 is bytes length","","","","","","","","","","Describe ABI configuration for a gateway so that it’s …","","","","","","","","","","","DynamicBytes and String are lowered to a vector.","","","","","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","There is no way to declare value in Solidity (should there …","","","","","","","","","address length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","","","","","Checks that the encoded argument has the same length as …","","","","","","","","","","","","","","","","","cryptography algorithm","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval assumes encoded_val is bytes Vector encoded with SCALE","eval assumes encoded_val is bytes Vector encoded with SCALE","","","","list of fields, each of them will have corresponding no.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","hash size in bytes","hashing algorithm","","","","","","","","is indexed - follows the ethereum logs pattern where …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name can empty (e.g. in an event field or unnamed …","encoded name of the struct","number in order","List of offsets of the fields, last entry is the offset …","","","","","","","","Calculate how much memory we expect this type to use when …","value length in bytes. ToDo: move as part of metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ABI type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","General round information consisting ofindex (one-based), …","","","","","","","","","","","","","","","","","","","","","","","","","","Bump contracts registry nonce in Account Manager nonce …","","","","","","","","","","","","","","","","","","","","","Send funds to a recipient via the escrow","","","","","","","","","","","","","","","","","","","","Finalize a transaction, with an optional reason for …","Assert infallible finalize of a transaction if exists","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Lookup charge by Id and fail if not found","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Lookup charge by Id and fail if not found","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines traits which represent a common interface for …","Primitives of messages module.","","Primitives that may be used at (bridges) runtime level.","Utilities for testing runtime code.","Increase of delivery transaction weight on Circuit chain …","Represents the average portion of a block’s weight that …","Some way of identifying an account on the chain. We …","Convert a 256-bit hash into an AccountId.","Public key of the chain account that may be used to verify …","Name of the <code>CircuitFinalityApi::best_finalized</code> runtime …","Balance of an account.","","Block number type used in Circuit.","We allow for 2 seconds of compute with a 6 second average …","Circuit chain.","API for querying information about the finalized Circuit …","","Weight of single regular message delivery transaction on …","Number of extra bytes (excluding size of storage value …","Name of the …","Name of the …","Name of the …","Inbound message lane API for messages sent by Circuit …","","Hash type used in Circuit.","The type of an object that can produce hashes on Circuit.","The header type used by Circuit.","Index of a transaction in the chain.","Maximal size (in bytes) of encoded (using <code>Encode::encode()</code>…","Maximum weight of single Circuit block.","Maximal weight of single message delivery confirmation …","Maximal number of unconfirmed messages at inbound lane.","Maximal number of unrewarded relayer entries at inbound …","","","Represents the portion of a block that will be used by …","The target length of a session (how often authorities …","","Alias to 512-bit hash when used in the context of a …","Name of the …","Name of the …","Name of the <code>ToCircuitOutboundLaneApi::latest_received_nonce</code>…","Name of the …","Number of bytes, included in the signed Circuit …","Outbound message lane API for messages that are sent to …","","","","","","","","","Returns number and hash of the best finalized header known …","Returns number and hash of the best finalized header known …","","","","","","","","","","","","","","","","","","We use this to get the account on Circuit (target) which …","","","","","Estimate message delivery and dispatch fee that needs to …","Estimate message delivery and dispatch fee that needs to …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns true if the header is known to the runtime.","Returns true if the header is known to the runtime.","Nonce of latest message that has been confirmed to the …","Nonce of latest message that has been confirmed to the …","Returns nonce of the latest message, generated by given …","Returns nonce of the latest message, generated by given …","Returns nonce of the latest message, received by bridged …","Returns nonce of the latest message, received by given …","Returns nonce of the latest message, received by bridged …","Returns nonce of the latest message, received by given …","Get the maximum length in bytes that a Normal extrinsic on …","Get the maximum weight (compute time) that a Normal …","Returns total dispatch weight and encoded payload size of …","Returns total dispatch weight and encoded payload size of …","Human readable time units defined in terms of number of …","","","","","","","","","","","","","","","","","","","","","State of the unrewarded relayers set at given lane.","State of the unrewarded relayers set at given lane.","","","","","","","","","","A GRANDPA Authority List and ID.","Abstract finality proof that is justifying block finality.","A trait for pallets which want to keep track of finalized …","base trait for verifying transaction inclusion proofs.","Data required for initializing the bridge pallet.","A type that can be used as a parameter in a dispatchable …","Transaction type.","Transaction inclusion proof type.","","","Write a header finalized by GRANDPA to the underlying …","","","","","List of GRANDPA authorities for the current round.","The initial authorities of the pallet.","Get the best authority set known to the header chain.","Get the best finalized header known to the header chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find header digest that schedules next GRANDPA authorities …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","4-byte gateway identifier.","The header from which we should start syncing.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Should the pallet block transaction immediately after …","Pallet for checking GRANDPA Finality Proofs.","","Create a new GRANDPA Authority Set.","","","Monotonic identifier of the current GRANDPA authority set.","The ID of the initial authority set.","Return number of header that this proof is generated for.","","","","","","","","","","","","","","","","","","","","","","","Verify that transaction is a part of given block.","","","Votes ancestries with useful methods.","Justification verification error.","The justification contains extra (unused) headers in its …","A GRANDPA Justification is a proof that a given header was …","The authority has provided an invalid signature.","Justification is finalizing unexpected header.","Failed to decode justification.","The justification contains precommit for header that is …","The cumulative weight of all votes in the justification is …","","","","","","","","","","","","","","","","","","","The set of votes for the chain which is to be finalized.","","","","Decode justification target.","","","","","","","","","","","","Returns <code>Err(_)</code> if <code>precommit_target</code> is a descendant of the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Create new ancestry chain.","Header hash =&gt; parent header hash mapping.","The round (voting period) this justification is valid for.","","","","","","","","","","","","","","","","","","","","","","","Hashes of headers that weren’t visited by <code>is_ancestor</code> …","Verify that justification, that is generated by given …","A proof that the chain of blocks in the commit are related …","","","","The pallet is halted. All operations (except operating …","Inbound lane data.","Lane identifier.","Message as it is stored in the storage.","Message data as it is stored in the storage.","Message id as a tuple.","Message key (unique message identifier) as it is stored in …","Message nonce. Valid messages will never have 0 nonce.","Opaque message payload. We only decode this payload when …","Normal mode, when all operations are allowed.","Messages pallet operating mode.","Outbound lane data.","Messages pallet parameter.","The pallet is not accepting outbound messages. Inbound …","Gist of <code>InboundLaneData::relayers</code> field used by runtime …","Numeric range of a transaction weight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns approximate size of the struct, given number of …","","","","","","","","","","","","","","","Message delivery and dispatch fee, paid by the submitter.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message key.","ID of the message lane.","Nonce of the last message that a) has been delivered to …","Nonce of the last message that has been delivered to this …","Nonce of latest message, generated by us.","Nonce of latest message, received by bridged chain.","Number of messages in the oldest entry of …","Message nonce.","Nonce of oldest message that we haven’t yet pruned. May …","Message payload.","Identifiers of relayers and messages that they have …","Save parameter value in the runtime storage.","","Primitives of messages module, that are used on the source …","Primitives of messages module, that are used on the target …","","","","","","","","","","","","","","","Total number of messages in the relayers vector.","Returns total number of messages in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of entries in the <code>InboundLaneData::relayers</code> set.","","","","","","","","Error type.","Error type.","Error type.","Structure that may be used in place of <code>TargetHeaderChain</code>, …","Lane message verifier.","Message delivery payment. It is called as a part of …","Proof that messages have been received by target chain.","Single relayer rewards.","Relayers rewards, grouped by relayer account id.","The sender of the message on the source chain.","Target chain API. Used by source chain to verify target …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Perform some initialization in externalities-provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Total number of messages relayed by this relayer.","Withhold/write-off delivery_and_dispatch_fee from …","","Pay rewards for delivering messages to the given relayers.","","Total rewards that are to be paid to the relayer.","","","","","","","","","","","Verify message payload before we accept it.","Verify message payload and return Ok(()) if message is …","","","Verify messages delivery proof and return lane &amp;&amp; nonce of …","","","","Message with decoded dispatch payload.","Message data with decoded dispatch payload.","Decoded message payload type. Valid message may contain …","Error type.","Structure that may be used in place of <code>SourceHeaderChain</code> …","Called when inbound message is received.","Proof that messages are sent from source chain. This may …","Proved messages from single lane of the source chain.","Proved messages from the source chain.","Source chain API. Used by target chain, to verify source …","","","","","","","","","","","","","","","","","","","","","","","","Message data with decoded dispatch payload.","","","","","","","","","","","","","","Called when inbound message is received.","","Estimate dispatch weight.","","","","","","","","","Message delivery and dispatch fee, paid by the submitter.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Message key.","Optional outbound lane state.","Messages sent through this lane.","Result of dispatch payload decoding.","","","","","","","","","","","","","","","","","","","","","","","","","","Verify messages proof and return proved messages.","","","","","","All Polkadot-like chains assume that an on-initialize …","Id of account on Polkadot-like chains.","Convert a 256-bit hash into an AccountId.","Public key of account on Polkadot-like chains.","Parameters which are part of the payload used to produce …","The balance of an account on Polkadot-like chain.","Block type of Polkadot-like chains.","All Polkadot-like chains have maximal block size set to …","Block number type used in Polkadot-like chains.","All Polkadot-like chains have the same block weights.","Extensible conversion trait. Generic over both source and …","","Number of extra bytes (excluding size of storage value …","","Hash type used in Polkadot-like chains.","The type of an object that can produce hashes on …","Hashing type.","The header type used by Polkadot-like chains.","Account Index (a.k.a. nonce).","Maximal size (in bytes) of encoded (using <code>Encode::encode()</code>…","All Polkadot-like chains allow 2 seconds of compute with a …","Maximal number of messages in single delivery transaction.","Maximal number of unconfirmed messages at inbound lane.","Maximal number of unrewarded relayer entries at inbound …","","","Index of a transaction on the Polkadot-like chains.","A type that can be used as a parameter in a dispatchable …","Polkadot-like chain.","","Signature type used by Polkadot-like chains.","Polkadot-like block signed with a Justification.","A simplified version of signed extensions meant for …","A type of the data encoded as part of the transaction.","","Return a storage key for account data.","","","","","","","","","","","","","","","","","","","","","","","","","","Make conversion.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Get the maximum length in bytes that a Normal extrinsic on …","Get the maximum weight (compute time) that a Normal …","","Human readable time units defined in terms of number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A unique prefix for entropy when generating cross-chain …","A non-priviledged account.","Basilisk","A type that fulfills the abstract idea of what a Substrate …","Block number used by the chain.","Call-dispatch module prefix.","Catalyst","Bridge-with-Millau instance id.","Bridge-with-Wococo instance id.","Minimal Substrate-based chain representation that may be …","Unique identifier of the chain.","Dali","Dolphin","Bridge-with-Rialto instance id.","Bridge-with-Rococo instance id.","Genshiro","A type that fulfills the abstract idea of what a Substrate …","Hash type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Hasher type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Header type used by the chain.","Bridge-with-Kusama instance id.","Bridge-with-Millau instance id.","Use this when something must be shared among all instances.","Pangolin","Bridge-with-Polkadot instance id.","Pre-computed size.","Bridge-with-Rialto instance id.","Rocfinity","Bridge-with-Rococo instance id.","Encointer","A unique prefix for entropy when generating a cross-chain …","An account that belongs to Root (priviledged origin).","Snowbridge","SoonSocial","Anything that has size.","Type of accounts on the source chain.","This struct is used to read storage values from a subset …","","","","Bridge-with-Wococo instance id.","","","","","","","","","","","","","","","","","Return valid storage proof and state root.","","","","","","","","","Derive an account ID from a foreign account ID.","Derive the account ID of the shared relayer fund account.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Constructs a new storage proof checker.","Reads a value from the available subset of storage. If the …","Return approximate size of this object (in bytes).","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of test accounts with friendly names.","A test account which can be used to sign messages.","","","","","","Configuration parameters when generating test GRANDPA …","","","","","Get a list of “unique” accounts.","","","","","Convenience function to get a list of Grandpa authority …","The current GRANDPA authority set.","Convenience function to get a list of Grandpa authorities.","","","","","","","","","","","","","","","","","The number of forks.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","The header which we want to finalize.","Convenience function for generating a Header ID at a given …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Make a valid GRANDPA justification with sensible defaults","Generate justifications in a way where we are able to tune …","","","The GRANDPA round number for the current authority set.","","The current authority set ID.","","Create signed precommit with given target.","Get a header for testing.","Get a header for testing, with correct parent_hash","Get the corresponding identities from the keyring for the …","","","","","","","","","","","","","Get a valid set of voters for a Grandpa round.","The total number of vote ancestries in our justification.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of the contract which generated the side effects","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Side effects generated from the contract call","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An ordered set backed by <code>Vec</code>.","A range consisting of min, ideal, and max.","Round identifier (one-based).","General round information consisting ofindex (one-based), …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the set","","","","","","","","","Return if the set contains <code>value</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a set from a <code>Vec</code>. <code>v</code> will be sorted and dedup first.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Create a set from a <code>Vec</code>. Assume <code>v</code> is sorted and contain …","The first block of the current round.","","","","","Current round index.","","","","Insert an element. Return true if insertion happened.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Create a new empty set","","Remove an element. Return true if removal happened.","","","Check if the round should be updated","The length of the current round in number of blocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","New round","","","","","","Compilers used to compile a smart contract.","Metadata about a smart contract.","Type of the contract.","","The language in which the smart contract is written.","","","","","A compiler used to compile a smart contract.","The language and version in which a smart contract is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new InkProjectSource.","Constructs a new SourceLanguage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A preliminary representation of a contract in the onchain …","","","","Optional ABI","Original code author","Action descriptions (calls for now)","","","","","Optional information for an author","","","","","","","","","","","Bytecode","","","","","","","","","","Original code text","","","","","","","","","","","","","","","","","","","","","","","Optional remuneration fee for the author","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Contracts Info after Contracts Pallet","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contract metadata to be used in queries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Active with no scheduled exit","Committed to be online and producing valid blocks (not …","Generic type describing either an executor’s self-bond …","Represents a cancelled scheduled request for emitting an …","Request scheduled to change the executor candidate’s …","Capacity status for top or bottom stakes.","","","","Empty aka contains no stakes","Executor configuration information.","Snapshot of collator state at the start of the round for …","The activity status of the executor","","","Protocol enforced thresholds and delays for staking.","Reached capacity","Temporarily inactive and excused for inactivity","","Bonded until the inner round","","Partially full (nonempty and not full)","","","Represents a scheduled request for an executor …","Represents a scheduled request that define a StakingAction…","Staker’s bond adjustment - used with locks.","Convey relevant information describing if a delegator was …","The activity status of the staker.","An action that can be performed upon a stake","","","","","","","","","","","","","","","","","","","","","Returns the wrapped amount value.","","","Asserts that all included fixtures are greater than zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total value locked by the collatoreturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The rewardable stakes. This list is a subset of total …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total counted value locked for the collator, including …all smart contract behind that gateway in a dirty way - …","Call smart contract behind that gateway in a reversible …","Call smart contract behind that gateway in a static way - …","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Get storage on foreign chain under given key. Returns …","Set storage on foreign chain of given key pointing to new …","Swap X tokens to Y different tokens on a chain behind that …","Swap X tokens to Y different tokens on a chain behind that …","Transfer balance on a chain behind that gateway in a …","Transfer balance on a chain behind that gateway in a dirty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A type that provides access to AccountManager","","","","","","","A type that provides inspection and mutation to some …","","","","","","","Contains one variant per dispatchable that can be called …","A dispatchable call.","","","","","","","","This pallet’s configuration trait","","","The Circuit’s deletion queue limit - preventing potential","","","Custom dispatch errors of this pallet.","","","A type that manages escrow, and therefore balances","Events for the pallet.","The overarching event type.","","","","","","","","","","","","","","Current Circuit’s context of active full side effects …","","","","","","","LocalXtxStates stores the map of LocalState - additional …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","The pallet implementing the on-chain logic.","Temporary bids for SFX executions. Cleaned out each …","Temporary bids for SFX executions. Cleaned out each …","Current Circuit’s context of active Xtx used for the …","A type that gives access to the new portal functionality","","","","","","Links mapping SFX 2 XTX","The Circuit’s SFX Bidding Period","","The Circuit’s account id","The Circuit’s self gateway id","The Circuit’s self parachain id","","","","","","","","","","","","","","","","The maximum number of signals that can be queued for …","","","","","","","","","","Weight information for extrinsics in this pallet.","","","","Current Circuit’s context of all accepted for execution …","","","","","","","A type that provides access to Xdns","","","The Circuit’s Xtx timeout check interval","The Circuit’s Default Xtx timeout","","","","The account ID of the Circuit Vault.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blind version should only be used for testing - unsafe …","Blind version should only be used for testing - unsafe …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Current Circuit’s context of active Xtx used for the …","","","","Current Circuit’s context of active full side effects …","LocalXtxStates stores the map of LocalState - additional …","Temporary bids for SFX executions. Cleaned out each …","Temporary bids for SFX executions. Cleaned out each …","Links mapping SFX 2 XTX","Handles queued signals","Current Circuit’s context of all accepted for execution …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>bid_sfx</code>.","Create a call with the variant <code>cancel_xtx</code>.","Create a call with the variant <code>confirm_side_effect</code>.","Create a call with the variant …","Create a call with the variant <code>on_extrinsic_trigger</code>.","Create a call with the variant <code>on_local_trigger</code>.","Create a call with the variant <code>on_remote_gateway_trigger</code>.","Create a call with the variant <code>on_xbi_sfx_resolved</code>.","Create a call with the variant <code>on_xcm_trigger</code>.","","","","","","","","","","","","Used by other pallets that want to create the exec order","","Used by other pallets that want to create the exec ordereturns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expected confirmation to FSX wasn’t there while …","","","","All Executors from the active set can bid for SFX …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bid amount - always below SFX::max_fee requested by a useridding Executor belonging to the active set","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","ToDo: Protocol::Reversible x-t3rn#69 - !Inspect if from is …","","","","This event must be emitted by Escrow Contracts","","","","","","ToDo: Protocol::Reversible x-t3rn#69 - If executors wants …","","","","","","","","","","","","","","","","","","","","","","","","","Insurance in case of optimistic FSX","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executor - subject of SFX","Optional reserved bond in case of optimistic FSX","","","Optional reserved asset id in case execution on foreign …eturns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of Circuit storage items: Requested - default …","","","","","","","","","","","","","","","","","","","","","","","A composable cross-chain (X) transaction that has already …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule execution of steps in the future intervals","","","","","","","","","","","Check if all FSX have the bidding companion. Additionally, …","Based solely on full steps + insurance deposits determine …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The owner of the bid","The owner of the bid","","Has returned status already and what","Has returned status already and what","Expiry timeout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information for managing an account and its sub trie …","","","This field is reserved for future evolution of format.","","","","","","","","Associated child trie unique id is built from the hash …","","","","The code associated with a given account.","","","","","Last block rent has been paid.","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Last block child storage has been written.","The total number of key-value pairs in storage of this …","Pay rent at most up to this value.","The amount of rent that was paid by the contract over its …","The total number of bytes used by this contract.","","","Unique ID for the subtree encoded as a bytes vector.","","","","","","","","","","","","","Passthrough to validator","","","","","","","","","","The happy return type of an invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Allows creating a <code>Module</code> from a binary blob from the …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoke a precompile","Invoke a precompile, providing raw bytes and a pointer","","Looks up a precompile function pointer","","","","","","","","","","","Try to finalize a ledger item with an reason","","","","","","","","","","","","","","","Try to remunerate the fees from the given module","Try to remunerate the fees from the given module with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_circuit_circuit_portal using the …","Weight functions needed for pallet_circuit_circuit_portal.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The object with XdnsRecords as returned by the RPC endpoint","","","A hash based on encoding the Gateway ID","A preliminary representation of a xdns_record in the …","A hash based on encoding the complete XdnsRecord","","","","","","Methods enabled to be called on the remote target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches all known XDNS records","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Gateway Id","Gateway System Properties","Gateway Type","Gateway Vendor","Function that generates an XdnsRecordId hash based on the …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Leave empty if there’s no escrow capabilities on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SCALE-encoded url string on where given Consensus System …","","","","","","","","A composable cross-chain (X) transaction that has already …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule execution of steps in the future intervals","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Vector of Steps that each can consist out of at least one …","","","","","","","","","","","","Encoded content of composable tx","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Local Xtx State","","","The owner of the bid","Has returned status already and what","","","Expiry timeout","","","","","Total reward","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,55,45,45,0,0,23,0,0,55,44,0,55,0,0,0,0,0,45,49,25,0,0,55,0,45,55,211,33,55,55,55,32,185,0,0,0,212,8,39,0,45,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,44,55,33,0,23,25,8,45,0,55,0,9,185,55,55,55,0,39,0,8,0,9,9,0,0,36,55,45,45,49,8,0,0,0,0,0,0,0,55,45,36,0,39,55,55,55,32,0,211,44,44,36,9,0,55,0,49,44,55,0,0,0,0,0,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,0,0,213,214,7,214,18,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,173,160,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,7,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,0,215,31,216,40,216,216,215,0,0,0,0,9,8,10,11,31,38,0,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,9,31,213,0,0,0,217,212,126,173,126,126,126,0,0,167,7,216,216,216,40,7,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,9,8,10,11,31,38,210,215,215,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,31,29,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,38,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,168,126,168,126,126,168,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,167,0,31,24,167,160,0,18,40,18,29,10,9,214,214,215,215,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,38,39,40,38,24,24,25,25,26,26,28,28,9,9,8,8,29,29,30,30,10,10,11,11,31,31,32,32,33,33,18,18,34,34,35,35,36,36,37,37,38,38,39,39,40,40,24,24,25,25,26,26,28,28,9,9,8,8,29,29,30,30,10,10,11,11,31,31,32,32,33,33,18,18,34,34,35,35,36,36,37,37,38,38,39,39,40,40,210,0,30,18,10,214,215,214,214,214,214,214,217,217,216,0,7,7,30,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,167,213,126,173,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,210,173,31,168,160,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,9,8,10,11,31,38,24,210,0,24,25,168,18,34,35,40,18,40,10,0,31,18,24,215,29,215,0,26,167,0,34,29,9,0,126,26,37,0,28,212,213,167,160,210,213,160,37,210,0,168,160,126,173,18,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,216,0,168,40,0,35,40,38,213,11,213,213,0,125,29,24,26,0,7,173,216,216,168,126,18,0,210,18,18,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,11,11,213,210,216,216,0,24,25,26,28,9,8,29,30,10,11,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,36,37,38,39,40,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,9,8,30,10,11,31,18,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,213,214,38,26,31,7,30,0,24,25,26,28,9,8,29,30,10,11,31,32,33,18,34,35,36,37,38,39,40,0,215,0,0,218,219,220,221,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,234,238,55,23,55,55,55,0,55,0,55,55,72,72,55,0,55,0,55,23,55,55,55,55,0,55,55,72,55,55,55,0,0,55,55,55,23,72,7,73,74,75,73,7,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,7,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,7,55,23,72,7,73,74,75,55,23,72,7,73,74,75,0,7,7,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,0,55,23,72,7,73,74,75,7,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,55,0,0,0,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,0,55,55,23,23,72,72,7,7,73,73,74,74,75,75,55,55,23,23,72,72,7,7,73,73,74,74,75,75,0,55,23,72,7,73,74,75,55,23,72,7,73,74,75,7,7,55,23,72,7,73,74,75,74,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,7,74,75,74,75,55,23,72,7,73,74,75,55,7,73,73,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,55,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,74,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,55,23,72,7,73,74,75,7,55,23,72,7,73,74,75,228,229,230,231,232,233,234,235,236,237,238,239,234,238,0,49,0,0,0,49,0,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,215,215,54,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,215,215,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,215,215,77,54,49,77,54,49,77,77,54,54,49,49,77,77,54,54,49,49,215,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,54,215,54,215,77,54,77,54,77,77,54,77,77,54,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,77,54,49,215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,82,241,242,240,82,241,242,243,243,240,82,241,242,240,82,241,242,240,240,82,241,242,240,82,241,242,0,240,82,241,242,244,244,82,240,82,241,242,240,240,82,82,241,241,242,242,240,240,82,82,241,241,242,242,241,241,241,242,242,242,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,243,243,245,245,244,244,244,245,244,245,0,0,244,244,0,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,240,82,241,242,245,245,240,82,241,242,0,0,0,0,0,0,0,0,0,0,0,246,246,86,87,247,86,87,86,87,86,87,247,247,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,0,86,87,86,87,86,86,87,87,86,86,87,87,87,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,87,0,86,86,86,87,86,87,248,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,246,86,87,0,0,90,0,90,90,90,90,90,89,89,90,91,89,90,91,89,89,89,89,90,91,89,90,91,89,89,89,89,89,89,0,89,89,90,91,89,90,91,89,90,91,89,91,89,90,89,90,89,90,91,89,90,91,89,89,90,90,91,91,89,89,90,90,91,91,89,89,90,91,89,90,91,89,90,91,89,90,91,89,90,91,89,90,91,89,90,91,91,91,89,89,89,89,89,90,91,89,90,91,89,89,89,89,90,91,89,89,90,91,89,90,91,91,0,89,89,90,91,93,0,0,0,0,0,0,0,0,93,0,0,0,93,0,0,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,96,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,93,94,95,96,97,85,98,93,94,95,96,97,85,98,97,93,94,95,96,97,85,98,93,94,95,96,97,85,98,95,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,93,94,94,95,95,96,96,97,97,85,85,98,98,93,93,94,94,95,95,96,96,97,97,85,85,98,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,97,85,98,96,94,97,97,98,98,85,94,98,95,97,249,93,0,0,93,94,95,96,97,85,98,93,94,95,96,97,85,98,85,0,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,93,94,95,96,97,85,98,85,93,94,95,96,97,85,98,250,251,252,0,0,0,250,0,0,0,0,253,100,253,100,253,100,253,100,100,253,100,253,100,253,100,100,253,100,253,253,100,100,253,253,100,100,253,100,252,253,100,253,100,253,100,253,100,253,100,253,100,100,252,253,252,253,100,253,100,253,100,253,100,253,100,253,100,250,251,253,253,250,253,253,100,0,0,254,255,0,0,255,0,0,0,102,256,102,104,103,256,102,104,103,102,102,102,256,102,104,103,256,102,104,103,102,102,102,103,102,102,102,102,102,256,102,104,103,256,102,104,103,254,256,254,256,256,102,104,103,102,102,102,104,102,104,103,256,102,104,104,103,103,256,256,102,102,104,104,103,103,256,256,102,102,104,104,103,103,102,256,102,104,103,256,102,104,103,256,102,104,103,256,102,104,103,256,102,104,103,256,102,104,103,256,102,104,103,102,103,102,102,104,102,102,256,102,104,103,256,102,104,103,102,102,102,256,102,104,103,256,102,104,103,256,102,104,103,255,256,256,102,104,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,257,258,259,105,106,257,258,259,105,106,105,105,105,257,258,259,105,106,257,258,259,105,106,105,105,260,257,105,105,105,105,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,105,105,105,106,257,258,259,105,106,257,257,258,258,259,259,105,105,106,106,257,257,258,258,259,259,105,105,106,106,258,258,258,259,259,259,105,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,257,258,259,105,106,0,0,105,0,105,105,257,258,259,105,106,257,258,259,105,106,105,105,105,257,258,259,105,106,105,257,258,259,105,106,257,258,259,105,106,105,257,258,259,105,106,0,0,0,0,0,112,0,81,0,261,0,0,0,0,0,0,0,0,0,0,0,0,261,0,261,0,261,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0,0,0,109,109,0,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,0,111,81,112,109,111,81,112,109,0,0,111,81,112,109,109,109,109,111,81,112,109,111,111,81,81,112,112,109,109,111,111,81,81,112,112,109,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,111,262,112,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,111,81,112,109,263,114,0,0,0,0,0,0,0,0,0,0,114,116,0,114,116,114,116,0,116,0,114,116,114,116,114,116,114,116,116,114,116,114,116,114,116,114,116,114,116,114,114,116,116,114,114,116,116,116,0,114,116,114,116,114,116,114,116,114,116,114,116,114,116,0,0,114,114,116,114,116,114,0,0,0,0,114,116,114,116,114,116,114,116,114,116,114,116,0,116,114,116,0,0,0,0,0,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,123,124,124,123,123,124,124,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,264,124,123,123,124,264,264,124,123,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,124,0,212,212,212,45,45,0,44,0,0,45,45,45,44,45,45,45,45,44,44,44,45,44,59,45,44,59,45,44,59,59,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,45,44,44,59,59,45,45,44,44,59,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,59,45,44,59,45,44,59,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,45,44,59,0,0,265,265,265,265,266,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,127,0,0,0,0,0,0,0,0,0,0,0,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,127,128,58,127,128,58,127,128,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,127,128,58,127,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,127,127,128,128,58,58,127,127,128,128,58,58,127,127,127,58,128,128,58,127,58,128,58,127,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,128,128,58,128,58,127,128,127,128,127,58,58,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,128,58,127,58,127,128,58,127,134,0,0,0,134,0,131,131,134,0,0,0,129,129,129,129,129,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,129,130,129,130,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,129,129,129,129,130,129,130,129,130,129,130,129,130,129,130,129,130,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,131,132,133,134,135,131,129,130,129,130,129,130,129,130,132,133,133,134,134,135,135,131,131,129,130,132,133,134,135,131,129,130,132,132,133,133,134,134,135,135,131,131,129,129,130,130,132,132,133,133,134,134,135,135,131,131,129,129,130,130,130,129,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,129,130,132,133,135,130,133,135,131,130,129,130,129,130,133,134,135,131,132,133,134,135,131,129,130,132,133,134,135,131,129,130,129,130,129,130,129,130,132,133,134,135,131,129,130,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,132,133,134,135,131,129,130,130,0,0,267,0,0,0,137,138,138,137,138,137,138,137,138,138,137,138,137,138,137,138,137,138,137,138,138,268,268,268,137,138,137,138,137,138,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,267,267,137,138,137,138,138,137,137,138,138,137,137,138,138,138,268,137,138,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,0,0,0,269,270,269,270,269,270,269,270,269,269,270,269,270,269,270,269,269,270,269,269,270,270,269,269,270,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,269,270,269,270,269,270,269,270,269,270,269,270,145,146,0,0,0,0,142,140,0,147,0,0,0,0,0,0,147,146,142,146,0,147,140,0,0,0,0,0,0,0,143,143,142,143,144,145,146,147,148,140,149,150,151,152,141,149,150,213,271,141,140,144,148,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,153,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,141,144,146,141,142,143,144,145,146,147,148,140,149,150,151,152,141,142,143,144,145,146,147,148,140,149,150,151,152,141,144,140,149,152,141,213,271,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,153,144,146,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,142,143,153,144,145,146,147,148,140,149,150,151,152,141,144,145,146,140,149,150,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,150,151,152,141,271,271,61,61,142,142,143,143,153,153,144,144,145,145,146,146,147,147,148,148,140,140,149,149,150,150,151,151,152,152,141,141,144,271,271,61,61,142,142,143,143,153,153,144,144,145,145,146,146,147,147,148,148,140,140,149,149,150,150,151,151,152,152,141,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,213,271,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,144,146,141,141,141,141,141,141,141,141,141,141,141,141,61,144,144,140,149,152,141,213,271,213,271,141,151,152,141,213,271,61,149,213,271,153,213,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,142,143,144,145,146,147,148,140,149,150,151,152,141,153,213,271,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,213,271,271,61,142,143,153,144,145,146,147,148,140,149,150,151,152,141,148,149,150,152,272,273,274,275,276,0,216,216,216,216,216,216,216,216,216,216,216,216,0,0,0,0,0,0,0,154,154,0,0,0,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,155,154,155,154,155,154,155,154,155,154,155,154,155,155,154,155,154,155,154,155,155,154,155,154,155,154,155,154,155,155,154,155,154,155,154,154,155,155,154,154,155,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,155,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,157,165,161,161,161,161,161,157,161,161,161,161,161,161,0,157,165,165,165,165,165,161,161,0,161,161,157,161,161,0,0,165,157,0,157,157,161,161,161,161,161,161,161,161,161,161,161,161,0,161,161,161,161,161,161,0,0,165,165,0,0,0,0,157,161,161,161,165,161,0,157,165,157,157,157,161,161,161,161,161,161,161,161,161,161,161,165,161,165,161,157,161,165,165,165,165,161,161,161,0,157,161,157,157,0,165,165,165,165,165,165,157,161,161,157,157,164,165,166,164,164,164,165,161,166,164,165,161,166,164,166,165,161,166,165,161,166,165,161,166,164,165,161,166,164,165,161,166,164,166,164,165,166,164,165,166,164,166,164,164,164,164,165,161,166,165,161,166,165,161,166,165,161,166,164,165,161,166,164,165,161,166,166,164,164,165,161,166,165,161,166,164,165,166,164,165,166,164,164,166,164,165,161,166,164,165,161,166,164,164,165,165,161,161,166,166,164,164,165,165,161,161,166,166,164,166,166,166,164,164,164,164,164,164,164,165,161,166,164,164,165,161,166,164,164,165,161,166,164,165,161,166,164,165,161,166,164,165,161,166,164,165,161,166,164,165,161,166,164,164,164,164,166,166,166,166,166,166,166,166,166,164,164,164,164,166,164,164,164,164,164,164,164,164,166,164,166,164,164,164,166,164,166,164,165,161,166,164,165,166,164,165,161,166,164,165,161,166,0,0,165,161,166,165,161,166,165,161,166,164,165,161,166,165,161,166,164,165,161,166,164,165,161,166,164,165,161,166,161,278,279,280,280,281,278,282,279,280,281,283,284,280,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,285,286,287,288,289,290,291,292,293,294,295,297,304,305,306,307,285,286,287,288,289,291,292,293,294,295,297,304,305,307,285,286,287,288,289,291,292,293,294,295,304,286,287,288,289,291,292,293,294,295,288,289,291,292,293,291,293,291,291,291,0,0,0,0,183,183,308,183,308,183,183,183,183,308,183,308,183,183,183,217,183,183,183,183,308,183,308,183,308,183,183,183,183,183,308,183,308,183,308,308,183,183,308,308,183,183,183,183,308,183,183,183,183,217,217,183,308,183,308,183,308,183,308,183,308,183,308,183,308,183,308,183,183,308,183,308,183,183,183,183,308,183,183,308,183,308,183,183,308,183,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,185,0,0,0,187,184,0,185,0,0,0,0,0,0,0,184,0,0,184,0,168,126,184,167,185,186,173,160,186,186,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,126,184,185,186,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,185,186,186,126,173,126,126,126,167,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,126,184,185,186,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,186,168,126,184,167,185,187,186,173,160,168,126,184,167,185,186,173,160,168,126,168,126,126,168,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,167,186,167,160,160,173,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,168,126,126,184,184,167,167,185,185,187,187,186,186,173,173,160,160,168,168,126,126,184,184,167,167,185,185,187,187,186,186,173,173,160,160,168,186,173,186,186,173,186,186,186,160,186,160,186,186,186,168,168,126,184,167,185,186,173,160,167,126,173,168,126,184,167,185,187,186,173,160,173,168,160,0,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,173,126,184,185,186,160,173,168,186,160,167,0,185,126,167,160,160,186,168,160,126,173,186,168,173,168,126,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,168,126,184,167,185,187,186,173,160,309,309,309,0,186,186,186,186,186,186,186,186,0,0,0,310,0,189,0,189,0,0,0,0,0,0,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,188,189,189,188,188,189,189,311,311,311,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,0,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,0,0,188,189,0,0,190,191,190,191,190,190,0,191,0,190,190,190,192,192,191,190,191,190,190,190,190,192,0,190,191,192,177,156,190,191,192,177,156,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,156,190,191,192,177,156,190,191,192,177,190,177,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,190,177,177,156,190,191,192,177,156,190,191,192,177,190,190,190,156,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,156,190,191,192,177,156,156,190,190,191,191,192,192,177,177,156,156,190,190,191,191,192,192,177,177,156,177,177,190,191,192,177,156,190,191,192,177,156,190,191,192,177,156,190,191,192,177,190,191,192,177,156,190,191,192,177,156,190,191,192,177,156,190,191,192,177,190,177,156,177,190,191,192,177,177,177,177,177,177,190,191,192,177,190,191,192,177,156,190,191,192,177,156,190,191,192,177,190,191,192,177,190,191,192,177,190,191,192,177,156,190,191,192,177,190,191,192,177,156,190,191,192,177,156,190,191,192,177,156,156,190,191,192,177,156,156,0,0,0,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,204,0,0,0,206,203,204,207,0,0,0,0,0,0,0,207,206,203,0,207,206,203,0,207,206,205,207,202,203,204,206,205,207,202,203,204,202,203,204,202,203,204,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,202,203,204,202,203,204,202,203,204,202,203,204,205,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,202,202,203,204,204,204,204,206,205,207,202,203,204,206,206,205,205,207,207,202,202,203,203,204,204,206,206,205,205,207,207,202,202,203,203,204,204,312,313,313,206,313,202,203,204,206,205,207,202,203,204,312,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,314,314,315,314,205,312,312,205,313,313,312,202,203,204,316,206,205,207,202,203,204,206,205,207,202,203,204,312,312,316,316,202,203,204,202,203,204,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,206,205,207,202,203,204,202,317,312,206,205,207,202,203,204,202,318,319,320,318,319,320,321,0,0,0,0,208,0,208,208,208,208,208,208,208,208,208,208,0,208,208,208,208,208,208,208,208,208,208,208,208,0,208,208,208,208,208,208,0,208,208,208,208,208,208,208,208,208,0,208,208,208,208,208,208,208,208,208,208,208,208,208,0,0,0,0,0,0,322,322,322,322,322,322,322,125,322,322,0,0,323,323,324,323,323,323,324,323,324,323,323,323,323,324,323,323,323,323,323,323,323,323,323,323,323,323,323,324,323,324,323,323,323,323,323,323,323,0,0,0,0,0,0,0,5,209,48,214,214,48,5,209,48,5,209,48,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,209,5,209,48,5,209,48,5,209,48,214,214,5,209,48,5,209,48,5,5,209,209,48,48,5,5,209,209,48,48,48,48,48,48,48,48,48,214,214,214,214,214,214,5,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,48,48,48,48,48,5,48,5,209,48,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,5,209,48,214,48,209,5,209,48,209,0,0,0,0,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,322,210,125,210,125,210,125,210,125,210,125,210,210,125,210,125,210,125,210,125,125,210,125,210,125,210,125,210,125,210,125,125,210,210,125,125,210,210,210,210,322,322,125,322,125,322,125,210,125,210,210,322,125,210,125,210,125,210,125,210,125,210,125,210,125,210,210,322,210,125,210,210,210,125,322,210,125,210,125,210,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,210,125,322,125,210],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],[[3,[2]]]],[[[3,[4,2]],[6,[5]],7,8,9,10,11,[3,[4,2]],[3,[2]]],[[13,[12]]]],0,[[],[[16,[[15,[14,2]],2]]]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[12]]]],0,[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],0,[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[6,20],[[21,22,23],[[13,[21,21]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[24,24],[25,25],[26,26],[[[28,[27,27]]],[[28,[27,27]]]],[9,9],[8,8],[29,29],[30,30],[10,10],[11,11],[31,31],[32,32],[33,33],[18,18],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],41],0,[[]],0,[22,21],[22,21],[[[3,[4,2]],[3,[4,2]]],[[13,[12]]]],[[[3,[4,2]],[3,[4,2]],[6,[[3,[[3,[4,2]],2]]]],[6,[[3,[4,2]]]]],[[13,[19]]]],0,0,0,0,0,0,0,0,0,[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],0,0,[[],[[13,[24,42]]]],[[],[[13,[25,42]]]],[[],[[13,[26,42]]]],[[],[[13,[28,42]]]],[[],[[13,[9,42]]]],[[],[[13,[8,42]]]],[[],[[13,[29,42]]]],[[],[[13,[30,42]]]],[[],[[13,[10,42]]]],[[],[[13,[11,42]]]],[[],[[13,[31,42]]]],[[],[[13,[32,42]]]],[[],[[13,[33,42]]]],[[],[[13,[18,42]]]],[[],[[13,[36,42]]]],[[],[[13,[37,42]]]],[[],[[13,[38,42]]]],[[],[[13,[39,42]]]],[[],[[13,[40,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],9],[[],8],[[],10],[[],11],[[],31],[[],38],0,[[44,45,6,6],[[13,[12]]]],[6],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[9]]]],[[],[[13,[8]]]],[[],[[13,[29]]]],[[],[[13,[30]]]],[[],[[13,[10]]]],[[],[[13,[11]]]],[[],[[13,[31]]]],[[],[[13,[32]]]],[[],[[13,[33]]]],[[],[[13,[18]]]],[[],[[13,[34]]]],[[],[[13,[35]]]],[[],[[13,[36]]]],[[],[[13,[37]]]],[[],[[13,[38]]]],[[],[[13,[39]]]],[[],[[13,[40]]]],0,0,[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[38,[[3,[4,2]]]],[24],[25],[26],[28],[9],[8],[29],[30],[10],[11],[31],[32],[33],[18],[36],[37],[38],[39],[40],0,0,0,0,0,0,[[24,24],20],[[25,25],20],[[26,26],20],[[[28,[47,47]],28],20],[[9,9],20],[[8,8],20],[[29,29],20],[[30,30],20],[[10,10],20],[[11,11],20],[[31,31],20],[[32,32],20],[[33,33],20],[[18,18],20],[[34,34],20],[[35,35],20],[[36,36],20],[[37,37],20],[[38,38],20],[[39,39],20],[[40,40],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[9,43],[[],[[3,[48,2]]]],[[],[[13,[[15,[14,2]],12]]]],[[49,6,6],[[13,[12]]]],[[49,6,6]],[[24,50],[[13,[51]]]],[[25,50],[[13,[51]]]],[[26,50],[[13,[51]]]],[[28,50],52],[[9,50],[[13,[51]]]],[[8,50],[[13,[51]]]],[[29,50],[[13,[51]]]],[[30,50],[[13,[51]]]],[[10,50],[[13,[51]]]],[[11,50],[[13,[51]]]],[[31,50],[[13,[51]]]],[[32,50],[[13,[51]]]],[[33,50],[[13,[51]]]],[[18,50],[[13,[51]]]],[[34,50],[[13,[51]]]],[[35,50],[[13,[51]]]],[[36,50],[[13,[51]]]],[[37,50],[[13,[51]]]],[[38,50],[[13,[51]]]],[[39,50],[[13,[51]]]],[[40,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,38],[[]],[[]],[[],[[13,[38,42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[13,[7,12]]]],[[],[[13,[54,12]]]],[[],[[13,[43,12]]]],[[],[[13,[[3,[4,2]],12]]]],[[],9],[[],55],[[],[[13,[8,12]]]],[[],[[13,[[6,[[3,[4,2]]]],12]]]],[[],[[13,[[6,[[3,[4,2]]]],12]]]],[[[3,[4,2]],9],[[13,[18,19]]]],[[]],0,0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[]],0,0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],46],[[],46],0,0,0,0,0,0,0,0,0,0,0,[[[6,[43]],25],24],[[],[[13,[12]]]],0,[58,[[13,[[3,[59,2]],12]]]],0,0,0,0,0,0,[[9,9],[[6,[41]]]],0,0,0,0,0,[28],[[[6,[[3,[4,2]]]],[6,[[3,[4,2]]]]],[[13,[[3,[4,2]],19]]]],[[]],0,0,0,[[],[[13,[12]]]],0,0,0,[[],[[13,[[3,[30,2]],19]]]],0,0,0,0,0,[9,13],[8,13],[29,13],[30,13],[10,13],[11,13],[31,13],[32,13],[33,13],[18,13],[34,13],[35,13],[36,13],[37,13],[38,13],[39,13],[40,13],[[[3,[4,2]],[6,[[3,[4,2]]]],9],[[13,[18,19]]]],0,0,0,0,0,0,[[38,60],46],[[]],0,[[],[[3,[61,2]]]],[[],[[3,[61,2]]]],0,0,0,0,0,0,0,0,[[[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],0,0,0,0,0,[18,[[13,[35,19]]]],[18,[[13,[34,19]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,[[[63,[62]],[65,[64]],9],[[13,[18,19]]]],[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],3,9],[[13,[18,19]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[13,[11]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[13,[70,[71,[70]]]]]],[38],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,[[13,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,46,7],[[13,[19]]]],[[]],[55,55],[23,23],[72,72],[7,7],[73,73],[74,74],[75,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[4,2]],[3,[55,2]]],[[13,[[3,[4,2]],19]]]],0,0,[[],[[13,[55,42]]]],[[],[[13,[23,42]]]],[[],[[13,[72,42]]]],[[],[[13,[7,42]]]],[[],[[13,[73,42]]]],[[],[[13,[74,42]]]],[[],[[13,[75,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[[3,[4,2]]],[[13,[19]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],7],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[55]]]],[[],[[13,[23]]]],[[],[[13,[72]]]],[[],[[13,[7]]]],[[],[[13,[73]]]],[[],[[13,[74]]]],[[],[[13,[75]]]],[46],[46],[46],[46],[46],[46],[46],[55],[23],[72],[7],[73],[74],[75],[[55,55],20],[[23,23],20],[[72,72],20],[[7,7],20],[[73,73],20],[[74,74],20],[[75,75],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[55,[3,[4,2]]],[[13,[[15,[17,2]],19]]]],[[55,[3,[4,2]],7],[[13,[[3,[4,2]],19]]]],[[55,[3,[4,2]]],[[13,[[3,[4,2]],19]]]],[55,[[13,[[15,[17,2]],19]]]],[[[3,[4,2]]],[[13,[19]]]],0,[[55,50],[[13,[51]]]],[[23,50],[[13,[51]]]],[[72,50],[[13,[51]]]],[[7,50],[[13,[51]]]],[[73,50],[[13,[51]]]],[[74,50],[[13,[51]]]],[[75,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[4,2]]],[[13,[19]]]],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[55],[23],[72],[7],[73],[74],[75],0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],0,0,0,0,[55,13],[23,13],[72,13],[7,13],[73,13],[74,13],[75,13],[[55,7],[[13,[46,19]]]],0,0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,76],[55],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[12]]]],[6,20],0,[77,77],[54,54],[49,49],[[]],[[]],[[]],[[],[[13,[77,42]]]],[[],[[13,[54,42]]]],[[],[[13,[49,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[44,45,6,6],[[13,[12]]]],[6],[46],[46],[46],[46],[46],[46],[46],[46],[46],[77],[54],[49],[[77,77],20],[[54,54],20],[[49,49],20],[[],20],[[],20],[[],20],[[49,6,6],[[13,[12]]]],[[49,6,6]],[[77,50],[[13,[51]]]],[[54,50],[[13,[51]]]],[[49,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[54,12]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[12]]]],0,[58,[[13,[[3,[59,2]],12]]]],0,0,0,0,0,0,0,0,0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[13,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[78,[[13,[79]]]],[[78,80],[[13,[79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21],[46],[46],[46],[46],[46],[46],[46],[46],[81],[46],[46],[46],[46],[78,[[13,[6,79]]]],[[78,80],[[13,[6,79]]]],[[82,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],83],[[]],[[]],[[],84],[[],84],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,[[13,[20,79]]]],[[78,80],[[13,[20,79]]]],[78,[[13,[69,79]]]],[[78,80],[[13,[69,79]]]],[78,[[13,[69,79]]]],[[78,80],[[13,[69,79]]]],[78,[[13,[69,79]]]],[78,[[13,[69,79]]]],[[78,80],[[13,[69,79]]]],[[78,80],[[13,[69,79]]]],[[],43],[[],69],[[78,69,69],[[13,[[3,[2]],79]]]],[[78,80,69,69],[[13,[[3,[2]],79]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],66],[[],66],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,[[13,[85,79]]]],[[78,80],[[13,[85,79]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],13],[[],17],[[],17],[[],17],[[],17],0,0,[[],86],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[87,87],[[]],[[]],[[],[[13,[86,42]]]],[[],[[13,[87,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],86],[[],87],[46],[46],[46],[46],[[],[[13,[86]]]],[[],[[13,[87]]]],[46],[46],[86],[87],[[86,86],20],[[87,87],20],[[],20],[[],20],[[],[[6,[88]]]],[[86,50],[[13,[51]]]],[[87,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],0,0,[[],46],[[[3,[2]],69],86],[86,13],[87,13],0,0,[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[],6],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[[]],0,[[],[[13,[89,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[[],[[13,[90]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[89],[91,[[13,[91,90]]]],[[89,89],20],[[90,90],20],[[],20],[[],20],[[89,50],[[13,[51]]]],[[90,50],[[13,[51]]]],[[91,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],0,0,[89],[[],[[3,[4,2]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[69,92,89],[[13,[90]]]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,93],[94,94],[95,95],[96,96],[97,97],[85,85],[98,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[13,[93,42]]]],[[],[[13,[94,42]]]],[[],[[13,[95,42]]]],[[],[[13,[96,42]]]],[[],[[13,[97,42]]]],[[],[[13,[85,42]]]],[[],[[13,[98,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],93],[[],97],[[],85],[[],98],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[93]]]],[46],[46],[46],[46],[46],[46],[46],[93],[94],[95],[96],[97],[85],[98],[[43,43],[[6,[43]]]],[[93,93],20],[[94,94],20],[[95,95],20],[[96,96],20],[[97,97],20],[[85,85],20],[[98,98],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[93,50],[[13,[51]]]],[[94,50],[[13,[51]]]],[[95,50],[[13,[51]]]],[[96,50],[[13,[51]]]],[[97,50],[[13,[51]]]],[[85,50],[[13,[51]]]],[[98,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],0,0,0,[97,69],0,0,0,0,0,0,0,[[]],[93,13],0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[99,[[6,[69]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],100],[46],[46],[46],[46],[46],[46],[[100,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],0,[101,13],[101,13],[[[16,[100,2]]]],[[[16,[100,2]]]],0,[[],13],[[],13],[[],13],[[],13],[[],66],[[],66],[[]],[[]],[[]],[[]],[[],13],[[101,98],13],[[101,98],13],[[],13],[[],13],[[],13],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[[]],0,[[],[[13,[102,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],102],[46],[46],[46],[46],[46],[46],[46],[46],[103],[103],[103,69],[103,69],[46],[46],[46],[46],[102],[[102,102],20],[[],20],0,[[102,50],[[13,[51]]]],[[104,50],[[13,[51]]]],[[103,50],[[13,[51]]]],[[]],[[]],[95,104],[[]],[96,103],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],0,0,0,0,[[],[[3,[4,2]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[13,[[16,[[102,[96]],2]]]]]],[43,[[13,[[16,[[102,[96]],2]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],[[3,[4,2]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,105],[[]],[[]],[21],[[],[[13,[105,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[105,105],20],[[],20],[[105,50],[[13,[51]]]],[[106,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],84],[[],84],[[]],[[],83],[[],83],[[]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],69],[[107,108,43,64],105],0,[[],[[3,[4,2]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46],[46],[46],[46],[46],[46],[46],[46],[81,21],[[],21],[46],[46],[46],[46],[[109,109],20],[[],20],[[109,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,[[13,[111,109]]]],[111,[[13,[[6,[[3,[4,2]]]],109]]]],[[],43],[112,43],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],66],[[],66],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[113,[[3,[114,2]]]],[[],17],[[],17],[[],17],[[],17],[[],[[3,[115,2]]]],0,[[],[[3,[2]]]],[[]],[[]],[[]],[[]],[114,114],[116,116],[[]],[[]],[[],116],[46],[46],[46],[46],[46],[46],[[114,50],[[13,[51]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[],89],[116,89],[114,117],[114,118],0,[114,119],0,[114,120],[[114,69,69],[[122,[121,115]]]],[[]],[6],[[],[[3,[2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],66],[[],66],[[]],[[]],[[]],[[]],[[],[[92,[115]]]],0,[[]],[[]],0,0,0,0,0,[1],[1],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[124,124],[[]],[[]],0,[[],[[13,[123,42]]]],[[],[[13,[124,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[123],[124],[[123,123],20],[[124,124],20],[[],20],[[],20],[[123,50],[[13,[51]]]],[[124,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[6,[[13,[124,12]]]],0,0,[[[3,[[3,[4,2]],2]],6],123],[[125,[3,[[3,[126,2]],2]]],124],[123,[[13,[12]]]],[24,[[13,[12]]]],0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[3,[4,2]],[3,[4,2]],[6,[[3,[[3,[4,2]],2]]]],[6,[[3,[4,2]]]]],[[13,[19]]]],[[[6,[[3,[4,2]]]],[6,[[3,[4,2]]]]],[[13,[[3,[4,2]],19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[44,44],[59,59],[[]],[[]],[[]],[[],[[13,[45,42]]]],[[],[[13,[44,42]]]],[[],[[13,[59,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[45],[44],[59],[[45,45],20],[[44,44],20],[[59,59],20],[[],20],[[],20],[[],20],[[45,50],[[13,[51]]]],[[44,50],[[13,[51]]]],[[59,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,45],[[6,[41]]]],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],17],[[],17],[[]],[[]],[[],58],[[],58],[46],[46],[46],[[]],[[]],[[]],[[]],[[]],[[],46],[[]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[],13],[[],13],[[],66],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127],[[]],[128,128],[58,58],[127,127],[[]],[[]],[[]],[[128,128],41],[127,20],[[],[[13,[128,42]]]],[[],[[13,[58,42]]]],[[],[[13,[127,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],128],[[],58],[[],127],[46],[46],[46],[46],[46],[46],[[],[[13,[128]]]],[[],[[13,[127]]]],[46],[46],[46],[127,[[3,[4,2]]]],[128],[58],[127],[[128,128],20],[[58,58],20],[[127,127],20],[[],20],[[],20],[[],20],[[128,50],[[13,[51]]]],[[58,50],[[13,[51]]]],[[127,50],[[13,[51]]]],[[]],[[]],[[[3,[2]]],127],[[]],[[[3,[2]]],127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],127],0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[],46],[[],46],[[],46],[127,20],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[128,20],0,[[],46],[[],46],0,[43,58],[[],127],[[128,128],[[6,[41]]]],[127,20],[128,13],[127,13],[58,20],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[58],[127],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,20],[129,20],[129,20],[[]],[[]],[129,129],[130,130],[[]],[[]],[[],[[13,[129,42]]]],[[],[[13,[130,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],129],[[],130],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[131]]]],[46],[46],[46],[46],[46],[46],[46],[129],[130],[[129,129],20],[[130,130],20],[[],20],[[],20],[[132,50],[[13,[51]]]],[[133,50],[[13,[51]]]],[[133,50],[[13,[51]]]],[[134,50],[[13,[51]]]],[[134,50],[[13,[51]]]],[[135,50],[[13,[51]]]],[[135,50],[[13,[51]]]],[[131,50],[[13,[51]]]],[[131,50],[[13,[51]]]],[[129,50],[[13,[51]]]],[[130,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,129],[129,20],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[133,135],132],[[134,[3,[4,2]]],133],[[131,[3,[4,2]]],135],[[[3,[4,2]],[3,[4,2]],129,[3,[4,2]],[3,[[3,[4,2]],2]],[6,[[3,[4,2]]]],[6,[[3,[4,2]]]],[6,[[3,[4,2]]]],[6,[[3,[4,2]]]],[6,[[3,[4,2]]]]],130],[133,13],[135,13],[131,13],[[],130],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],136],[[],136],[[],136],[[],136],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[130,129],130],0,0,0,0,0,0,[1],[1],0,0,0,[[],17],[[],17],[[],17],[[],17],0,[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[]],[[]],[137,137],[138,138],[[]],[[]],0,[[],[[13,[137,42]]]],[[],[[13,[138,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],137],[[],138],[46],[46],[46],[46],[46],[46],[137],[138],[[137,137],20],[[138,138],20],[[],20],[[],20],0,[[],[[13,[138]]]],[[6,[6,[[3,[4,2]]]]],[[13,[[3,[138,2]]]]]],[[137,50],[[13,[51]]]],[[138,50],[[13,[51]]]],[[]],[[]],[[31,[3,[73,2]],137,[6,[[3,[4,2]]]],[6,[139]],130],138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138],[[],20],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],0,[6,137],[[[3,[4,2]],[3,[4,2]],137,[6,[[3,[4,2]]]],[3,[73,2]],[6,[139]],130],138],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[[3,[[3,[4]]]]],[[13,[19]]]],[46],[46],[46],[46],[46],[46],[[[3,[[3,[4]]]]],[[13,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[[3,[[3,[4]]]]],[[13,[19]]]],[[],13],[[],13],[[],13],[[],13],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],0,[140],0,0,[141,20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[140,140],[149,149],[150,150],[151,151],[152,152],[141,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[144,144],41],[[140,140],41],[[149,149],41],[[152,152],41],[[141,141],41],[[]],[[]],0,0,0,[[],[[13,[61,42]]]],[[],[[13,[142,42]]]],[[],[[13,[143,42]]]],[[],[[13,[153,42]]]],[[],[[13,[144,42]]]],[[],[[13,[145,42]]]],[[],[[13,[146,42]]]],[[],[[13,[147,42]]]],[[],[[13,[148,42]]]],[[],[[13,[140,42]]]],[[],[[13,[149,42]]]],[[],[[13,[150,42]]]],[[],[[13,[151,42]]]],[[],[[13,[152,42]]]],[[],[[13,[141,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],153],[[],144],[[],146],[[],141],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[141]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[61],[142],[143],[153],[144],[145],[146],[147],[148],[140],[149],[150],[151],[152],[141],[[142,142],20],[[143,143],20],[[153,153],20],[[144,144],20],[[145,145],20],[[146,146],20],[[147,147],20],[[148,148],20],[[140,140],20],[[149,149],20],[[150,150],20],[[151,151],20],[[152,152],20],[[141,141],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[61,50],[[13,[51]]]],[[142,50],[[13,[51]]]],[[143,50],[[13,[51]]]],[[153,50],[[13,[51]]]],[[144,50],[[13,[51]]]],[[145,50],[[13,[51]]]],[[146,50],[[13,[51]]]],[[147,50],[[13,[51]]]],[[148,50],[[13,[51]]]],[[140,50],[[13,[51]]]],[[149,50],[[13,[51]]]],[[150,50],[[13,[51]]]],[[151,50],[[13,[51]]]],[[152,50],[[13,[51]]]],[[141,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[149,150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[144,144],[[6,[41]]]],[[140,140],[[6,[41]]]],[[149,149],[[6,[41]]]],[[152,152],[[6,[41]]]],[[141,141],[[6,[41]]]],[[]],[[]],[[],[[13,[12]]]],[[],[[13,[12]]]],0,0,0,[141,13],[[]],[[]],0,0,[[],[[3,[61,2]]]],[[],[[3,[61,2]]]],0,[[],[[3,[61,2]]]],[[],[[3,[61,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[19,19,[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9,[6,[[3,[4,2]]]]],[[13,[18,19]]]],[[[3,[4,2]],9],[[13,[18,19]]]],[[[3,[4,2]],[6,[[3,[4,2]]]],9],[[13,[18,19]]]],[[[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],9],[[13,[18,19]]]],[[[63,[62]],[65,[64]],9],[[13,[18,19]]]],[[[3,[4,2]],[3,[4,2]],[3,[4,2]],[3,[4,2]],3,9],[[13,[18,19]]]],0,[[20,19],[[13,[19]]]],[[[3,[4,2]]],[[13,[[3,[[3,[[3,[4,2]],2]],2]],19]]]],[[[3,[4,2]]],[[13,[19]]]],[[[3,[4,2]]],[[3,[4,2]]]],0,0,0,0,0,0,0,[1],[1],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,154],[155,155],[[]],[[]],[[],[[13,[154,42]]]],[[],[[13,[155,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],155],[46],[46],[46],[46],[[],[[13,[154]]]],[[],[[13,[155]]]],0,[46],[46],[154],[155],[[154,154],20],[[155,155],20],[[],20],[[],20],0,[[154,50],[[13,[51]]]],[[155,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[],20],[155,20],[[],46],[[],46],[154,13],[155,13],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],17],[[],17],[[]],[[]],[46],[46],[46],[[]],[[]],[[]],[[]],[[]],[[],46],[[]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[156,[158,[157]],[159,[157]],[6,[[160,[[158,[157]],43]]]]],[[13,[[160,[[158,[157]],43]],[161,[157]]]]]],[156],[[],13],[[],13],[156,[[13,[[161,[157]]]]]],[156,[[13,[[161,[157]]]]]],[[],66],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[3],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[162,[157]],[159,[157]],[158,[157]]],163],0,[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[162,[157]]],163],0,[164,164],[[[165,[157]]],[[165,[157]]]],[[[166,[157]]],[[166,[157]]]],[[]],[[]],[[]],[[[162,[157]],[159,[157]],[167,[[158,[157]]]]],163],0,[[[3,[[3,[4]]]]],[[13,[[3,[[168,[[158,[157]]]]]],19]]]],[[],46],[[],169],[[],170],[[],[[13,[[165,[157]],42]]]],[[],[[13,[161,42]]]],[[],[[13,[[166,[157]],42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[46],[46],[[[166,[157]]],163],[[171,172],[[13,[[161,[157]]]]]],[46],[46],[46],[46],[[[165,[157]]]],[161],[[[166,[157]]]],[[164,164],20],[[[165,[157]],[165,[157]]],20],[[[166,[157]],[166,[157]]],20],[[],20],[[],20],[[],20],[[125,[3,[[3,[[173,[[158,[157]]]]]]]]],[[13,[[3,[[168,[[158,[157]]]]]],19]]]],[[[162,[157]],[174,[157]],[168,[[158,[157]]]],64,64],163],0,[[164,50],52],[[[165,[157]],50],52],[[[161,[157]],50],52],[[[166,[157]],50],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[[166,[157]]],19],[[]],[[[166,[157]]],175],[[],[[6,[[3,[[3,[[173,[[158,[157]]]]]]]]]]]],[[],[[6,[125]]]],[[],[[6,[[160,[[158,[157]],43]]]]]],[[],6],[[],[[6,[[174,[157]]]]]],[[],176],[[],[[6,[177]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[162,6],[[13,[[124,[157,[178,[157]]]],12]]]],[179,69],[[],19],[[],19],[[[159,[157]],[158,[157]]],[[166,[157]]]],[[],[[166,[157]]]],[[[159,[157]],[167,[[158,[157]]]]],[[166,[157]]]],[[[174,[157]],[168,[[158,[157]]]],64,64],[[166,[157]]]],[[[3,[[168,[[158,[157]]]]]],20],[[166,[157]]]],[[[3,[4]]],[[166,[157]]]],[[],[[166,[157]]]],[[],[[166,[157]]]],[[],[[166,[157]]]],[[]],[[]],[[],170],[[[162,[157]],[3,[[168,[[158,[157]]]]]],20],163],0,[[]],[[]],[[]],[180,180],[[],180],[[],180],[[[162,[157]],[3,[4]]],181],[[162,[123,[157]]],181],0,[[[162,[157]]],163],0,[[],180],[[162,24],181],[[[162,[157]]],163],0,[[[162,[157]]],163],0,[[],[[3,[182]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[71,[70]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[],17],[[],17],[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[183,183],[[]],[[[3,[4,2]],[3,[4,2]]],[[13,[12]]]],[[],[[13,[183,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[183],0,[[183,183],20],[[],20],0,[[183,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],[[13,[[6,[[3,[4,2]]]],12]]]],[[],[[13,[[6,[[3,[4,2]]]],12]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],0,[[],[[3,[4,2]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],[[3,[[3,[4,2]],2]]]],[[],[[3,[55,2]]]],[[],[[3,[[3,[4,2]],2]]]],[[],[[3,[[3,[4,2]],2]]]],[[]],[[],[[3,[4,2]]]],[[],[[3,[[3,[4,2]],2]]]],[[],[[3,[[3,[4,2]],2]]]],[[[3,[[3,[4,2]],2]],125,[6,[[3,[4,2]]]]],[[13,[19]]]],[[[3,[[3,[4,2]],2]],7,125,[6,[[3,[4,2]]]]],[[13,[19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[168,168],[126,126],[184,184],[167,167],[185,185],[186,186],[173,173],[160,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[185,185],41],0,0,0,0,0,0,0,0,[[],[[13,[168,42]]]],[[],[[13,[126,42]]]],[[],[[13,[184,42]]]],[[],[[13,[167,42]]]],[[],[[13,[185,42]]]],[[],[[13,[186,42]]]],[[],[[13,[173,42]]]],[[],[[13,[160,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],126],[[],184],[[],185],[[],186],[[],160],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[186]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[168],[126],[184],[167],[185],[186],[173],[160],0,0,0,0,0,0,[[168,168],20],[[126,126],20],[[184,184],20],[[167,167],20],[[185,185],20],[[187,187],20],[[186,186],20],[[173,173],20],[[160,160],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,[160],[173,160],[[168,50],[[13,[51]]]],[[126,50],[[13,[51]]]],[[184,50],[[13,[51]]]],[[167,50],[[13,[51]]]],[[185,50],[[13,[51]]]],[[187,50],[[13,[51]]]],[[186,50],[[13,[51]]]],[[173,50],[[13,[51]]]],[[160,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[168,43]],[186],[173],[186,[[3,[[3,[4,2]],2]]]],[186,[[3,[55,2]]]],[173],[186,[[3,[[3,[4,2]],2]]]],[186,[[3,[[3,[4,2]],2]]]],[186],[160],[186,[[3,[4,2]]]],[160,6],[186,[[3,[[3,[4,2]],2]]]],[186,[[3,[[3,[4,2]],2]]]],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],0,0,0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[173,20],[[],20],[[],20],[[],20],[[],20],[[],20],[173,20],0,0,[6,160],0,0,[[185,185],[[6,[41]]]],0,0,0,0,0,0,0,0,0,[186,13],0,0,0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[4,2]]],[[13,[168]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[173,[[13,[126]]]],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[4,2]],3,55],[[13,[19]]]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[188,188],[189,189],[[]],[[]],[[],[[13,[188,42]]]],[[],[[13,[189,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[188],[189],[[188,188],20],[[189,189],20],[[],20],[[],20],[[188,50],[[13,[51]]]],[[189,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[7,19]]]],[[]],[[],189],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[[3,[4,2]]],[[13,[19]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[]],[[]],[[]],[[]],[[55,46,46],[[13,[[3,[4,2]],19]]]],[[[3,[2]]],[[13,[[3,[[3,[4,2]],2]],19]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[190,190],[191,191],[192,192],[[[177,[27,27]]],[[177,[27,27]]]],[[]],[[]],[[]],[[]],[[],[[13,[190,42]]]],[[],[[13,[191,42]]]],[[],[[13,[192,42]]]],[[],[[13,[177,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],190],[[],[[177,[193,193]]]],0,[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],[[13,[190,[161,[157]]]]]],[[],[[13,[190,[161,[157]]]]]],[[],[[13,[190,[161,[157]]]]]],[46],[46],[46],[46],[46],[190],[191],[192],[177],[[190,190],20],[[191,191],20],[[192,192],20],[[[177,[47,47]],177],20],[[],20],[[],20],[[],20],[[],20],[[190,50],52],[[191,50],52],[[192,50],52],[[177,50],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[177,[[0,[194,27,195]],[0,[196,197,198,194,27,195]]]]],[[174,[199]]]],[[[174,[199]],46],[[200,[199]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],0,[[43,[0,[196,197,198,194,27,195]],[6,[[3,[[0,[196,197,198,194,27,195]]]]]]],[[177,[[0,[194,27,195]],[0,[196,197,198,194,27,195]]]]]],[[190,190],[[6,[41]]]],[[191,191],[[6,[41]]]],[[192,192],[[6,[41]]]],0,0,[[[6,[3]]]],0,0,0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],0,[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[139,201],[[]],[139,139],[[]],0,[[],[[13,[139,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],0,[[],139],[46],[46],[46],[139],[[139,139],20],[[],20],[[139,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],46],[[]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[],20],0,0,0,0,0,[[],[[3,[4,2]]]],[[]],0,[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[],[[68,[67]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[202,42]]]],[[],[[13,[203,42]]]],[[],[[13,[204,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],205],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[202,[[3,[4,2]]]],[202],[203],[204],[[204,204],20],[[],20],[[204,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[12]]]],[[],[[6,[137]]]],[[],3],[206,[[6,[124]]]],[[],129],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[129,[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[203,[[13,[206,12]]]],[[4,3]],[6,[[13,[124,12]]]],[[],[[6,[4]]]],[6,205],[[],[[13,[138,12]]]],[129,[[13,[12]]]],0,[137],[129],[129,[[13,[12]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[49,[[13,[12]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[6,[137]]],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[205,12]]]],[[],[[13,[205,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[202],[207,13],[129,[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],21],[[],17],[[],17],[[]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[208,208],[[]],[[],[[13,[12]]]],0,[[],[[13,[208,42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],208],[46],[46],[46],[208],[[208,208],20],[[],20],[3,[[13,[12]]]],[[208,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[21],[[],[[3,[4,2]]]],[[],46],[[]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[],20],[[],[[13,[12]]]],0,[[],[[3,[4,2]]]],[[]],[[],13],[[],13],[[]],[[]],[[],[[3,[4,2]]]],[[],66],[[]],[[]],0,[[]],0,0,0,0,0,0,[[[3,[4,2]]],20],[[],[[6,[3]]]],[[],16],[[],16],[[]],[[[3,[4,2]]],[[13,[19]]]],[[]],0,[[[3,[4,2]],[3,[4,2]]],[[3,[4,2]]]],[[[3,[4,2]]],[[13,[[3,[4,2]],19]]]],0,0,[[],17],[[],17],[[],180],[[],180],[[]],[[]],[[],180],[[],180],[[],180],[[],180],[46],[46],[46],[[],180],[[],180],[[]],[[]],[[]],[[]],[[]],[[],46],[[]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[],180],[[],180],[[],180],[[],180],[[],13],[[],13],[[],66],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[1],[1],[[[3,[4,2]],[6,[5]],7,8,9,10,11,[3,[4,2]],[3,[2]]],[[13,[12]]]],[[],[[16,[[15,[14,2]],2]]]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[48],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[209,209],[48,48],[[]],[[]],[[]],[[],[[13,[5,42]]]],[[],[[13,[209,42]]]],[[],[[13,[48,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[46],[46],[46],[46],[46],[46],[[],[[13,[5]]]],[[],[[13,[209]]]],[[],[[13,[48]]]],[46],[46],[46],[209,[[3,[4,2]]]],[5],[209],[48],[[5,5],20],[[209,209],20],[[48,48],20],[[],20],[[],20],[[],20],[[],[[3,[48,2]]]],[[],[[13,[[15,[14,2]],12]]]],[[5,50],[[13,[51]]]],[[209,50],[[13,[51]]]],[[48,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[48],[[],[[13,[7,12]]]],[[],[[13,[43,12]]]],[[],[[13,[[3,[4,2]],12]]]],[[],9],[[],55],[[],[[13,[8,12]]]],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[3,[4,2]],[6,[5]],7,8,9,10,11,[3,[4,2]],[3,[2]]],48],[[[3,[4,2]],7,[6,[[3,[4,2]]]],4,[3,[4,2]],[6,[5]],8,9,11,6,[3,[4,2]],[6,[69]],[3,[2]]],48],0,0,0,0,[5,13],[209,13],[48,13],[[48,69]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[13,[70,[71,[70]]]]]],0,[209],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[210,210],[[]],[[]],[[[3,[4,2]]],20],[[210,167,168,43],[[13,[20,19]]]],[[],[[13,[125,42]]]],[[],[[13,[210,42]]]],[[],[[13,[42]]]],[[],[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[43,[[13,[42]]]],[[],125],[[],210],0,[46],[46],[46],[46],[46],[46],[125,[[3,[4,2]]]],[125],[210],[[125,125],20],[[210,210],20],[[],20],[[],20],[[125,50],[[13,[51]]]],[[210,50],[[13,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[210,43]],[[],[[6,[3]]]],[[],16],[125,16],[[],16],[125,16],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],46],[[],46],0,[[[3,[4,2]]],[[13,[19]]]],[[]],[[]],[[[15,[2]]],[[15,[17,2]]]],[[[15,[2]]],[[15,[17,2]]]],[56,[[56,[17]]]],[56,[[56,[17]]]],[57,[[57,[17]]]],[57,[[57,[17]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],[210,20],[[]],0,[[],125],[[[3,[4,2]],6,[6,[[3,[2]]]],6,125,[3,[[3,[173,2]],2]]],210],0,0,0,[[[3,[4,2]],[3,[4,2]]],[[3,[4,2]]]],0,[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[3,[4,2]]]],[[],[[3,[4,2]]]],[[],66],[[],66],[[],[[68,[67]]]],[[],[[68,[67]]]],[[]],[[]],[[]],[[]],[125],[[[3,[4,2]]],[[13,[[3,[4,2]],19]]]],[[]],[[]]],"p":[[3,"Private"],[3,"Global"],[3,"Vec"],[15,"u8"],[3,"Parachain"],[4,"Option"],[3,"GatewayABIConfig"],[4,"GatewayVendor"],[4,"GatewayType"],[3,"GatewayGenesisConfig"],[3,"GatewaySysProps"],[4,"DispatchError"],[4,"Result"],[8,"SideEffectProtocol"],[3,"Box"],[3,"BTreeMap"],[8,"Any"],[3,"CircuitOutboundMessage"],[15,"str"],[15,"bool"],[3,"H256"],[8,"Iterator"],[4,"HasherAlgo"],[3,"ExecutionSignal"],[4,"SignalKind"],[3,"StepConfirmation"],[8,"Clone"],[3,"Payload"],[3,"GenericPrimitivesHeader"],[3,"GatewayPointer"],[3,"Compose"],[4,"ReadLatestGatewayHeight"],[4,"ContractAccessError"],[3,"RpcPayloadUnsigned"],[3,"RpcPayloadSigned"],[4,"ProofTriePointer"],[3,"CircuitInboundResult"],[3,"UncheckedExtrinsic"],[4,"GatewayExpectedOutput"],[3,"ExtraMessagePayload"],[4,"Ordering"],[3,"Error"],[15,"u32"],[4,"BenefitSource"],[4,"CircuitRole"],[15,"usize"],[8,"PartialEq"],[3,"XdnsRecord"],[4,"Outcome"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"UncheckedExtrinsic"],[3,"RequestCharge"],[4,"Type"],[3,"Arc"],[3,"Rc"],[3,"RoundInfo"],[3,"ClaimableArtifacts"],[3,"MallocSizeOfOps"],[3,"NominatedStake"],[3,"AccountId32"],[4,"MultiAddress"],[15,"u128"],[3,"Compact"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[15,"u64"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[4,"CryptoAlgo"],[3,"ContractActionDesc"],[3,"Parameter"],[3,"StructDecl"],[4,"RuntimeString"],[3,"Settlement"],[4,"BlockId"],[4,"ApiError"],[4,"ExecutionContext"],[4,"SourceAccount"],[3,"Circuit"],[3,"BlockWeights"],[3,"BlockLength"],[3,"UnrewardedRelayersState"],[3,"AuthoritySet"],[3,"InitializationData"],[3,"ScheduledChange"],[3,"GrandpaJustification"],[4,"Error"],[3,"AncestryChain"],[3,"VoterSet"],[4,"OperatingMode"],[3,"MessageKey"],[3,"MessageData"],[3,"Message"],[3,"InboundLaneData"],[3,"OutboundLaneData"],[3,"VecDeque"],[3,"RelayerRewards"],[4,"RawOrigin"],[3,"ProvedLaneMessages"],[3,"DispatchMessage"],[3,"DispatchMessageData"],[3,"SignedExtensions"],[3,"Rococo"],[3,"RuntimeVersion"],[4,"Era"],[4,"StorageProofError"],[3,"StorageProof"],[3,"StorageProofChecker"],[3,"PreComputedSize"],[15,"u16"],[3,"Account"],[3,"Public"],[3,"JustificationGeneratorParams"],[3,"Keypair"],[3,"PublicKey"],[3,"SecretKey"],[3,"Signature"],[3,"Signature"],[3,"SignedPrecommit"],[3,"LocalTrigger"],[3,"LocalStateExecutionView"],[3,"LocalState"],[3,"HardenedSideEffect"],[3,"OrderedSet"],[3,"Range"],[4,"ContractType"],[3,"ContractMetadata"],[4,"Compiler"],[3,"Source"],[3,"SourceLanguage"],[4,"Language"],[3,"SourceCompiler"],[3,"String"],[3,"AuthorInfo"],[3,"RegistryContract"],[3,"RawAliveContractInfo"],[4,"StakingAction"],[3,"Fixtures"],[4,"StakeAdjust"],[4,"StakerAdded"],[3,"Bond"],[4,"StakerStatus"],[4,"ExecutorStatus"],[4,"CapacityStatus"],[3,"CandidateBondLessRequest"],[3,"ScheduledStakingRequest"],[3,"CancelledScheduledStakingRequest"],[3,"ExecutorInfo"],[3,"ScheduledConfigurationRequest"],[3,"ExecutorSnapshot"],[4,"BeneficiaryRole"],[3,"InflationAllocation"],[3,"LocalXtxCtx"],[8,"Config"],[6,"EscrowedBalanceOf"],[6,"SideEffectId"],[3,"SFXBid"],[4,"Error"],[6,"OriginFor"],[6,"DispatchResultWithPostInfo"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"ConfirmedSideEffect"],[3,"SideEffect"],[3,"CrateVersion"],[3,"StorageVersion"],[3,"XBICheckIn"],[3,"XBICheckOut"],[3,"FullSideEffect"],[6,"XExecSignalId"],[3,"DispatchInfo"],[3,"BoundedVec"],[3,"XExecSignal"],[6,"EscrowBalance"],[3,"RuntimeDbWeight"],[6,"Weight"],[6,"DispatchResult"],[3,"StorageInfo"],[3,"RegistrationData"],[4,"ConfirmationOutcome"],[4,"SecurityLvl"],[3,"SideEffectInterface"],[4,"Error"],[3,"Signature"],[4,"Surrounding"],[4,"CircuitStatus"],[4,"CircuitRole"],[4,"InsuranceEnact"],[8,"Default"],[8,"Encode"],[8,"Debug"],[8,"Ord"],[8,"Copy"],[8,"Zero"],[8,"Config"],[6,"XExecStepSideEffectId"],[4,"ChildInfo"],[3,"GetState"],[4,"PrecompileArgs"],[4,"SignalOpcode"],[3,"Remunerated"],[4,"PrecompileInvocation"],[4,"Characteristic"],[3,"TransferEntry"],[3,"FetchXdnsRecordsResponse"],[3,"Xtx"],[8,"EscrowTrait"],[8,"CircuitPortal"],[8,"Executors"],[8,"Xdns"],[8,"AccountManager"],[8,"GatewayInboundProtocol"],[8,"Portal"],[13,"Extrinsic"],[13,"Storage"],[13,"Output"],[13,"Events"],[13,"ProgrammableInternal"],[13,"ProgrammableExternal"],[13,"TxOnly"],[13,"OnCircuit"],[13,"Success"],[13,"Kill"],[13,"Address"],[13,"Int"],[13,"Uint"],[13,"Bytes"],[13,"Enum"],[13,"Struct"],[13,"Mapping"],[13,"Ref"],[13,"Option"],[13,"StorageRef"],[13,"Hasher"],[13,"Crypto"],[3,"AccountIdConverter"],[3,"BlockWeights"],[3,"BlockLength"],[8,"CircuitFinalityApi"],[8,"ToCircuitOutboundLaneApi"],[8,"FromCircuitInboundLaneApi"],[8,"InclusionProofVerifier"],[8,"HeaderChain"],[8,"FinalityProof"],[8,"Parameter"],[8,"TargetHeaderChain"],[8,"LaneMessageVerifier"],[8,"MessageDeliveryAndDispatchPayment"],[3,"ForbidOutboundMessages"],[8,"MessageDispatch"],[8,"SourceHeaderChain"],[3,"ForbidInboundMessages"],[3,"AccountIdConverter"],[3,"BlockLength"],[3,"BlockWeights"],[8,"Convert"],[8,"Chain"],[8,"Size"],[13,"Account"],[8,"OnLocalTrigger"],[3,"ClockMock"],[8,"Clock"],[8,"ContractsRegistry"],[8,"KindValidator"],[3,"Escrow"],[3,"Transfer"],[3,"ExecutorsMock"],[13,"Leaving"],[13,"Increase"],[13,"ToTop"],[13,"Revoke"],[13,"Decrease"],[3,"Optimistic"],[13,"bid_sfx"],[13,"confirm_side_effect"],[13,"execute_side_effects_with_xbi"],[13,"on_extrinsic_trigger"],[13,"on_xbi_sfx_resolved"],[13,"on_local_trigger"],[13,"cancel_xtx"],[13,"Transfer"],[13,"TransferAssets"],[13,"TransferORML"],[13,"AddLiquidity"],[13,"Swap"],[13,"CallNative"],[13,"CallEvm"],[13,"CallWasm"],[13,"CallCustom"],[13,"Notification"],[13,"Result"],[13,"XTransactionReceivedForExec"],[13,"SFXNewBidReceived"],[13,"SideEffectConfirmed"],[13,"XTransactionReadyForExec"],[13,"XTransactionStepFinishedExec"],[13,"XTransactionXtxFinishedExecAllSteps"],[13,"XTransactionXtxRevertedAfterTimeOut"],[13,"XTransactionXtxDroppedAtBidding"],[13,"NewSideEffectsAvailable"],[13,"CancelledSideEffects"],[13,"SideEffectsConfirmed"],[13,"EscrowTransfer"],[3,"ErrorMsg"],[13,"MisbehaviourMalformedValues"],[8,"VendorSideEffectsParser"],[8,"HasXDNSAccess"],[8,"ThreeVm"],[8,"ModuleOperations"],[8,"Precompile"],[8,"LocalStateAccess"],[8,"Remuneration"],[8,"CharacteristicValidator"],[13,"GetState"],[13,"SubmitSideEffects"],[13,"Signal"],[13,"GetState"],[8,"Volatile"],[3,"SubstrateWeight"],[8,"WeightInfo"]]},\
"pallet_clock":{"doc":"Account Manager pallet","t":[8,13,13,13,6,3,8,13,13,16,13,13,13,8,6,13,8,3,3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,8,13,13,13,13,16,13,4,13,13,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,10,10,11,11,11,10,10,11,11,11,11,12,12,12,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,10,0,11,11,10,10,12,11,11,11,11,11,11,11,10,10,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,16,4,6,8,6,4,4,16,16,3,6,6,13,3,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["AccountManager","Address","Bool","Bytes","ChainId","ClaimableArtifacts","Clock","Contract","Crypto","Currency","DynamicAddress","DynamicBytes","Enum","EscrowTrait","EscrowedBalanceOf","Ethereum","Executors","GatewayABIConfig","GatewayGenesisConfig","GatewayType","GatewayVendor","Hasher","Int","Kusama","Mapping","OnCircuit","Option","OptionalInsurance","OptionalReward","Polkadot","ProgrammableExternal","ProgrammableInternal","Ref","Rococo","RoundInfo","SideEffectProtocol","Slice","StorageRef","String","Struct","Time","TxOnly","Type","Uint","Value","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","active_set","address_length","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","beneficiary","benefit_source","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump_contracts_registry_nonce","can_withdraw","check_length","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collateral_bond","crypto","current_round","decimals","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","deposit","deposit_immediately","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval_abi","extrinsics_version","fetch_nonce","finalize","finalize_infallible","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","get_arguments_2_state_mapper","get_arguments_abi","get_charge_or_fail","get_confirming_events","get_escrowed_events","get_hash","get_hash","get_id","get_name","get_reversible_commit","get_reversible_revert","hash","hash","hash_size","hasher","head","identity","identity","identity","identity","identity","identity","identity","increase_bond","index","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","max_encoded_len","modules_encoded","new","no_charge_or_fail","on_collect_claimable","pallet","partial_cmp","populate_state","recalculate_executors_stakes","reserve_bond","role","serialize","serialize","serialize","serialize","serialize","should_update","size_of","slash_bond","stakes","stakes_per_executor","structs","term","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_bytes","total_nominated_stake","total_round_claim","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve_bond","update","validate_args","value_type_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw_immediately","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","AccountManager","Call","ClaimableArtifactsPerRound","Config","CurrentRound","Error","Event","Event","Executors","GenesisConfig","LastClaims","Module","NewRound","Pallet","RoundDuration","__clone_box","__clone_box","__clone_box","accumulate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_round","current_round","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","init","init","init","init","init","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","migrate","module_name","name","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","serialize","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","with_weight","head","index","term"],"q":["pallet_clock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_clock::GatewayType","","","","pallet_clock::Type","","","","","","","","","","","","","","pallet_clock::palletpallet_clock::pallet::Event","",""],"d":["","","","where u8 is bytes length","","","","","","","","","","","","","","Describe ABI configuration for a gateway so that it’s …","","","","","","","","","","","","","","","","","General round information consisting ofindex (one-based), …","","DynamicBytes and String are lowered to a vector.","","","","","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","There is no way to declare value in Solidity (should there …","","","","","","","","","address length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","","","","","Bump contracts registry nonce in Account Manager nonce …","","Checks that the encoded argument has the same length as …","","","","","","","","","","","","","","","","","","","","","","cryptography algorithm","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send funds to a recipient via the escrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval assumes encoded_val is bytes Vector encoded with SCALE","eval assumes encoded_val is bytes Vector encoded with SCALE","Extrinsics version","","Finalize a transaction, with an optional reason for …","Assert infallible finalize of a transaction if exists","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Genesis hash - block id of the genesis block use to …","","","Lookup charge by Id and fail if not found","","","","","","","","","","","hash size in bytes","hashing algorithm","The first block of the current round.","","","","","","","","","Current round index.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SCALE-encoded modules following the format of selected …","","Lookup charge by Id and fail if not found","","The module that hosts all the FRAME types needed to add …","","","","","","","","","","","Check if the round should be updated","Calculate how much memory we expect this type to use when …","","","","value length in bytes. ToDo: move as part of metadata.","The length of the current round in number of blocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","New round","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","A type that provides access to AccountManager","Contains one variant per dispatchable that can be called …","","Configuration trait of this pallet.","Information on the current round.","Custom dispatch errors of this pallet.","The event emitted by this pallet.","The overarching event type.","","Can be used to configure the genesis state of this pallet.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The pallet implementing the on-chain logic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information on the current round.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,10,10,10,0,0,0,10,10,57,10,10,10,0,0,17,0,0,0,0,0,10,10,17,10,16,10,10,10,17,16,16,10,17,0,0,10,10,10,10,57,16,0,10,10,10,12,14,15,16,17,18,58,12,10,12,14,15,16,17,18,10,12,14,15,16,17,18,14,14,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,12,10,12,14,15,16,17,18,10,12,14,15,16,17,18,59,59,10,12,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,16,58,12,60,12,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,12,15,16,17,18,59,59,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,10,18,16,59,59,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,10,12,12,14,14,15,15,16,16,17,17,18,18,10,10,12,12,14,14,15,15,16,16,17,17,18,18,18,61,61,59,61,61,10,12,61,61,61,61,10,12,12,12,15,10,12,14,15,16,17,18,58,15,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,12,15,16,17,18,15,18,15,59,59,0,16,61,58,58,14,10,12,16,17,18,15,10,58,58,58,12,15,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,10,58,14,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,10,12,14,15,16,17,18,58,15,61,12,10,12,14,15,16,17,18,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,72,76,38,0,0,0,0,0,0,38,38,0,0,0,43,0,38,42,43,44,42,42,43,47,39,44,42,43,47,39,44,43,47,44,43,47,44,43,47,44,42,43,47,39,44,42,43,47,39,44,39,39,42,43,44,42,43,44,42,42,42,42,42,43,47,44,43,47,44,43,47,44,43,47,44,39,42,43,47,39,44,42,43,47,39,44,39,44,42,43,47,39,44,43,42,43,44,42,43,44,42,43,47,44,42,43,47,39,44,42,42,43,43,47,47,39,39,44,44,42,42,43,43,47,47,39,39,44,44,44,44,44,43,47,44,42,42,43,47,39,44,42,42,43,47,39,44,42,43,47,39,44,42,43,47,39,44,42,43,47,39,44,42,43,47,39,44,42,43,47,39,44,42,42,42,42,42,42,42,42,42,42,42,42,42,39,42,43,47,44,42,43,44,42,43,47,39,44,42,43,47,39,44,0,0,43,47,44,43,47,44,43,47,44,42,43,47,39,44,43,47,44,42,43,47,39,44,42,43,47,39,44,42,43,47,39,44,47,78,78,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[6]]]],[8,9],[[10,11,12],[[7,[13]]]],[[]],[[]],[[]],[[]],[[]],[10,10],[12,12],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16],19],[[]],0,[[],15],0,[[],[[7,[10,20]]]],[[],[[7,[12,20]]]],[[],[[7,[14,20]]]],[[],[[7,[15,20]]]],[[],[[7,[16,20]]]],[[],[[7,[17,20]]]],[[],[[7,[18,20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[[],12],[[],15],[[],16],[[],17],[[],18],[[22,23,8,8],[[7,[6]]]],[8],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[7,[10]]]],[[],[[7,[12]]]],[[],[[7,[16]]]],[[],[[7,[17]]]],[[],[[7,[18]]]],[11],[11],[11],[11],[11],[11],[11],[10],[12],[14],[15],[16],[17],[18],[[10,10],9],[[12,12],9],[[14,14],9],[[15,15],9],[[16,16],9],[[17,17],9],[[18,18],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[10,[3,[5,2]]],[[7,[[24,[4,2]],13]]]],[[10,[3,[5,2]],12],[[7,[[3,[5,2]],13]]]],0,[16,21],[[25,8,8],[[7,[6]]]],[[25,8,8]],[[10,26],[[7,[27]]]],[[12,26],[[7,[27]]]],[[14,26],[[7,[27]]]],[[15,26],[[7,[27]]]],[[16,26],[[7,[27]]]],[[17,26],[[7,[27]]]],[[18,26],[[7,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[3,[[3,[5,2]],2]]]],[[],[[3,[10,2]]]],[[],[[7,[28,6]]]],[[],[[3,[[3,[5,2]],2]]]],[[],[[3,[[3,[5,2]],2]]]],[[],29],[[],29],[[]],[[],[[3,[5,2]]]],[[],[[3,[[3,[5,2]],2]]]],[[],[[3,[[3,[5,2]],2]]]],[10],[12],0,0,0,[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],0,[21,15],[[],[[7,[6]]]],[15,[[7,[[3,[14,2]],6]]]],0,[[16,16],[[8,[19]]]],[[[3,[[3,[5,2]],2]],32,[8,[[3,[5,2]]]]],[[7,[13]]]],[[]],[[],[[7,[6]]]],0,[10,7],[12,7],[16,7],[17,7],[18,7],[15,9],[[10,12],[[7,[11,13]]]],[[]],[[],[[3,[33,2]]]],[[],[[3,[33,2]]]],0,0,[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,34],[10],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],[[37,[36]]]],[[],[[37,[36]]]],[[],[[37,[36]]]],[[],[[37,[36]]]],[[],[[37,[36]]]],[[],[[37,[36]]]],[[],[[37,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[[[3,[[3,[5,2]],2]],12,32,[8,[[3,[5,2]]]]],[[7,[13]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[7,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[39,[38]]]],[[[39,[38]],40],[[7,[41]]]],[42,42],[[[43,[38]]],[[43,[38]]]],[[[44,[38]]],[[44,[38]]]],[[]],[[]],[[]],[[],11],[[],45],[[],15],[[],15],[[],46],[[],[[7,[[43,[38]],20]]]],[[],[[7,[47,20]]]],[[],[[7,[[44,[38]],20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[[],[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[21,[[7,[20]]]],[[],[[39,[38]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[7,[[39,[38]]]]]],[[[44,[38]]],48],[11],[11],[11],[11],[11],[[[43,[38]]]],[[42,42],9],[[[43,[38]],[43,[38]]],9],[[[44,[38]],[44,[38]]],9],[[],9],[[],9],[[],9],[[42,26],49],[[[43,[38]],26],49],[[[47,[38]],26],49],[[[44,[38]],26],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[38]]],13],[[]],[[[44,[38]]],50],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[[[24,[2]]],[[24,[4,2]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[30,[[30,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[31,[[31,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,29],[[],13],[[],13],[[]],[[]],[[],46],[[]],[[]],[[]],[52,52],[[],52],[[[53,[38]]],52],[[],52],[[[39,[38]]],7],[[],[[3,[54]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],[[3,[5,2]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[56,[55]]]],0,0,0],"p":[[3,"Private"],[3,"Global"],[3,"Vec"],[8,"Any"],[15,"u8"],[4,"DispatchError"],[4,"Result"],[4,"Option"],[15,"bool"],[4,"Type"],[15,"usize"],[3,"GatewayABIConfig"],[15,"str"],[3,"ClaimableArtifacts"],[3,"RoundInfo"],[4,"GatewayType"],[4,"GatewayVendor"],[3,"GatewayGenesisConfig"],[4,"Ordering"],[3,"Error"],[15,"u32"],[4,"BenefitSource"],[4,"CircuitRole"],[3,"Box"],[4,"Outcome"],[3,"Formatter"],[3,"Error"],[3,"RequestCharge"],[15,"u64"],[3,"Arc"],[3,"Rc"],[3,"LocalState"],[3,"NominatedStake"],[4,"RuntimeString"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"Config"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"StorageVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[6,"Result"],[3,"DispatchInfo"],[3,"RuntimeDbWeight"],[6,"Weight"],[6,"BlockNumberFor"],[3,"StorageInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"EscrowTrait"],[8,"Executors"],[8,"AccountManager"],[8,"Clock"],[8,"SideEffectProtocol"],[13,"ProgrammableInternal"],[13,"ProgrammableExternal"],[13,"TxOnly"],[13,"OnCircuit"],[13,"Address"],[13,"Int"],[13,"Uint"],[13,"Bytes"],[13,"Enum"],[13,"Struct"],[13,"Mapping"],[13,"Ref"],[13,"Option"],[13,"StorageRef"],[13,"Hasher"],[13,"Crypto"],[13,"NewRound"]]},\
"pallet_contracts_registry":{"doc":"Contracts Registry Pallet","t":[0,0,0,16,4,8,13,13,13,6,4,16,4,16,3,6,3,13,16,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,4,3,13,6,13,3,6,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11],"n":["pallet","types","weights","Balances","Call","Config","ContractAlreadyExists","ContractPurged","ContractStored","ContractsRegistry","Error","Escrowed","Event","Event","GenesisConfig","Module","Pallet","UnknownContract","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","accumulate","add_new_contract","add_new_contract","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contracts_registry","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fetch_contract_by_id","fetch_contracts","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","init","init","init","init","init","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","migrate","module_name","name","new_call_variant_add_new_contract","new_call_variant_purge","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","purge","purge","serialize","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","with_weight","contract","contract_id","requester","requester","0","0","1","1","ContractAccessError","ContractsRegistryResult","DoesntExist","FetchContractsResult","IsTombstone","RegistryContract","RegistryContractId","__clone_box","__clone_box","abi","action_descriptions","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","author","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","clear","clone","clone","clone_into","clone_into","code_txt","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","from","from","from","from_compose","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gas_consumed","generate_id","identity","identity","identity","info","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","meta","new","result","serialize","serialize","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","SubstrateWeight","WeightInfo","add_new_contract","add_new_contract","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fetch_contracts","fetch_contracts","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","purge","purge","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_contracts_registry","","","pallet_contracts_registry::palletpallet_contracts_registry::pallet::Call","","","","pallet_contracts_registry::pallet::Event","","","","pallet_contracts_registry::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_contracts_registry::weights","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The module that hosts all the FRAME types needed to add …","","Autogenerated weights for pallet_contracts_registry","A type that provides inspection and mutation to some …","Contains one variant per dispatchable that can be called …","Configuration trait of this pallet.","Stored contract has already been added before","[requester, contract_id]","[requester, contract_id]","The pre-validated composable contracts on-chain registry.","Custom dispatch errors of this pallet.","A type that manages escrow, and therefore balances","The event emitted by this pallet.","The overarching event type.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The pallet implementing the on-chain logic.","Access of unknown contract","Type representing the weight of this pallet","","","","","","Inserts a contract into the on-chain registry. Root only …","Inserts a contract into the on-chain registry. Root only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pre-validated composable contracts on-chain registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal function that queries the RegistryContract …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>add_new_contract</code>.","Create a call with the variant <code>purge</code>.","","","","","","","","","","","Removes a contract from the onchain registry. Root only …","Removes a contract from the onchain registry. Root only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The possible errors that can happen querying the storage …","","The given address doesn’t point to a contract.","","The specified contract is a tombstone and thus cannot have …","A preliminary representation of a contract in the onchain …","","","","Optional ABI","Action descriptions (calls for now)","","","","","","","Optional information for an author","","","","","","","","","","","","","","","","Bytecode","","","","","","Original code text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Contracts Info after Contracts Pallet","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Contract metadata to be used in queries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_contracts_registry using the Substrate …","Weight functions needed for pallet_contracts_registry.","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,3,0,0,18,16,16,0,0,3,0,3,0,0,0,18,3,15,16,18,19,15,15,19,15,16,18,11,19,15,16,18,11,19,16,18,19,16,18,19,16,18,19,15,16,18,11,19,15,16,18,11,19,11,11,15,16,18,19,15,16,18,19,15,15,15,15,16,18,19,16,18,19,16,18,19,16,18,19,11,15,16,18,11,19,15,16,18,11,19,11,19,15,16,18,11,19,16,18,19,15,16,18,19,15,16,18,19,15,15,15,16,18,19,15,16,18,11,19,15,15,16,16,18,18,11,11,19,19,15,15,16,16,18,18,11,11,19,19,19,19,19,16,18,19,15,15,16,18,11,19,15,15,16,18,11,19,15,16,18,11,19,15,16,18,11,19,15,16,18,11,19,15,16,18,11,19,15,16,18,11,19,15,15,15,19,19,15,15,15,15,15,15,15,15,15,15,15,19,11,15,16,18,19,15,16,18,19,15,16,18,11,19,15,16,18,11,19,0,0,16,18,19,16,18,19,16,18,19,15,16,18,11,19,16,18,19,15,16,18,11,19,15,16,18,11,19,15,16,18,11,19,18,53,54,53,54,55,56,55,56,0,0,44,0,44,0,0,44,6,6,6,44,45,6,44,45,6,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,6,6,44,6,44,6,6,44,45,6,44,45,6,44,45,6,44,45,6,6,44,45,6,44,45,6,44,45,44,45,6,44,45,6,44,45,6,44,45,6,45,44,45,6,44,45,6,6,44,44,45,45,6,6,44,44,45,45,6,6,45,6,44,45,6,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,6,6,6,45,44,45,44,45,6,44,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,44,45,6,6,44,45,6,44,45,6,44,45,6,0,0,57,58,58,58,58,58,58,58,58,57,58,58,58,58,58,58,58,58,58,58,58,58,58,57,58,58,58,58,58,58,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[2],[[[4,[3]],[6,[[5,[3]]]]],7],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[3]]]],[[[11,[3]],12],[[14,[13]]]],[15,15],[[[16,[3]]],[[16,[3]]]],[[[18,[17]]],[[18,[17]]]],[[[19,[3]]],[[19,[3]]]],[[]],[[]],[[]],[[]],[[],[[20,[[6,[[5,[3]]]]]]]],[[],21],[[],22],[[],23],[[],[[14,[[16,[3]],24]]]],[[],[[14,[18,24]]]],[[],[[14,[[19,[3]],24]]]],[[],[[14,[24]]]],[[],[[14,[24]]]],[[],[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[[],[[11,[3]]]],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[14,[[11,[3]]]]]],[[[19,[3]]],7],[21],[21],[21],[21],[21],[[[16,[3]]]],[18],[[[19,[3]]]],[[15,15],26],[[[16,[3]],[16,[3]]],26],[[[18,[27]],18],26],[[[19,[3]],[19,[3]]],26],[[],26],[[],26],[[],26],[[],26],[[[28,[3]]],[[14,[[6,[[5,[3]]]],[18,[3]]]]]],[[20,[20,[[2,[9]]]]],[[14,[[2,[[6,[[5,[3]]]]]],[18,[3]]]]]],[[15,29],30],[[[16,[3]],29],30],[[[18,[3]],29],30],[[[19,[3]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[3]]],31],[[]],[[[19,[3]]],32],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,37],[[],31],[[],31],[[[6,[[5,[3]]]]],[[19,[3]]]],[[[28,[3]]],[[19,[3]]]],[[]],[[]],[[],23],[[]],[[]],[[]],[38,38],[[],38],[[],38],[[],38],[[[4,[3]],[28,[3]]],7],0,[[[11,[3]]],14],[[],[[2,[39]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[43,[42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[44,44],[6,6],[[]],[[]],0,[[],[[14,[44,24]]]],[[],[[14,[45,24]]]],[[],[[14,[6,24]]]],[[],[[14,[24]]]],[[],[[14,[24]]]],[[],[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[25,[[14,[24]]]],[[],6],[21],[21],[21],[21],[21],[21],[[],[[14,[44]]]],[[],[[14,[45]]]],[21],[21],[21],[44],[45],[6],[[44,44],26],[[[45,[27]],45],26],[[6,6],26],[[],26],[[],26],[[],26],0,[[44,29],30],[[45,29],30],[[6,29],[[14,[46]]]],[[]],[[]],[[]],[[47,[2,[48,10]],49,[20,[[2,[9,10]]]],[20,[50]],51],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],0,[[],21],[[],21],[[],21],[[]],[[]],[[]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[[[33,[10]]],[[33,[8,10]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[34,[[34,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[35,[[35,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],0,[[[2,[9,10]],[2,[9,10]],49,[20,[[2,[9,10]]]],[2,[48,10]],[20,[50]],51],6],0,[44,14],[45,14],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],[[2,[9,10]]]],[[],40],[[],40],[[],40],[[],[[41,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],38],[[],38],[[],8],[[],8],[[]],[[]],[21],[21],[21],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[],21],[[]],[[[33,[10]]],[[33,[8,10]]]],[34,[[34,[8]]]],[35,[[35,[8]]]],[[]],[[]],[[],38],[[],38],[[],14],[[],14],[[],40],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Vec"],[8,"Config"],[6,"OriginFor"],[6,"EscrowedBalanceOf"],[3,"RegistryContract"],[6,"DispatchResultWithPostInfo"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[4,"Result"],[3,"Pallet"],[4,"Event"],[8,"Clone"],[4,"Error"],[4,"Call"],[4,"Option"],[15,"usize"],[3,"CrateVersion"],[3,"StorageVersion"],[3,"Error"],[15,"u32"],[15,"bool"],[8,"PartialEq"],[6,"RegistryContractId"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"RuntimeDbWeight"],[15,"u64"],[6,"Weight"],[3,"StorageInfo"],[3,"TypeId"],[3,"Type"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[4,"ContractAccessError"],[3,"ContractsRegistryResult"],[3,"Error"],[3,"Compose"],[3,"ContractActionDesc"],[3,"AuthorInfo"],[3,"RawAliveContractInfo"],[3,"ContractMetadata"],[4,"MetaForm"],[13,"add_new_contract"],[13,"purge"],[13,"ContractStored"],[13,"ContractPurged"],[8,"WeightInfo"],[3,"SubstrateWeight"]]},\
"pallet_contracts_registry_rpc_runtime_api":{"doc":"Runtime API definition required by Contracts Registry RPC …","t":[8,6,11,11],"n":["ContractsRegistryRuntimeApi","FetchContractsResult","fetch_contracts","fetch_contracts_with_context"],"q":["pallet_contracts_registry_rpc_runtime_api","","",""],"d":["The API to interact with contracts without using executive.","","Returns the contracts searchable by name, author or …","Returns the contracts searchable by name, author or …"],"i":[0,0,9,9],"f":[0,0,[[1,2,[2,[[4,[3]]]]],[[7,[5,6]]]],[[1,8,2,[2,[[4,[3]]]]],[[7,[5,6]]]]],"p":[[4,"BlockId"],[4,"Option"],[15,"u8"],[3,"Vec"],[6,"FetchContractsResult"],[4,"ApiError"],[4,"Result"],[4,"ExecutionContext"],[8,"ContractsRegistryRuntimeApi"]]},\
"pallet_grandpa_finality_verifier":{"doc":"Substrate Finality Verifier Pallet","t":[6,6,6,6,0,0,0,0,0,0,0,3,8,8,8,3,8,4,13,13,13,16,16,11,11,11,10,11,11,11,11,11,11,12,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,3,4,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,16,6,8,6,16,6,16,6,16,6,3,4,13,13,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,3,17,17,17,17,17,3,17,17,11,11,5,11,11,11,11,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,6,6,6,6,6,6,6,3,6,13,13,6,3,4,4,3,3,6,3,3,3,3,3,3,3,4,3,3,6,13,13,6,6,13,13,6,3,6,6,3,6,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,6,13,16,4,8,13,4,13,13,13,13,13,16,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,13,6,6,13,3,13,13,13,13,13,13,13,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11],"n":["BridgedBlockHash","BridgedBlockHasher","BridgedBlockNumber","BridgedHeader","bridges","mock","pallet","weights","header_chain","runtime","test_utils","AuthoritySet","FinalityProof","HeaderChain","InclusionProofVerifier","InitializationData","Parameter","ProofTriePointer","Receipts","State","Transaction","Transaction","TransactionInclusionProof","__clone_box","__clone_box","__clone_box","append_header","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","authorities","authority_list","authority_set","best_finalized","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","find_grandpa_authorities_scheduled_change","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","header","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","is_clear","is_halted","justification","max_encoded_len","new","serialize","serialize","serialize","set_id","set_id","target_header_number","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_transaction_inclusion_proof","vzip","vzip","vzip","AncestryChain","Error","ExtraHeadersInVotesAncestries","GrandpaJustification","InvalidAuthoritySignature","InvalidJustificationTarget","JustificationDecode","PrecommitIsNotCommitDescendant","TooLowCumulativeWeight","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_justification_target","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","ensure_descendant","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","parents","round","target_header_number","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unvisited","verify_justification","votes_ancestries","vzip","vzip","vzip","BlockNumber","BlockNumberOf","Chain","ChainId","Hash","HashOf","Hasher","HasherOf","Header","HeaderOf","StorageProofChecker","StorageProofError","StorageRootMismatch","StorageValueUnavailable","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","craft_valid_storage_proof","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","new","read_value","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","0","ALICE","Account","BOB","CHARLIE","DAVE","EVE","FERDIE","JustificationGeneratorParams","TEST_GRANDPA_ROUND","TEST_GRANDPA_SET_ID","__clone_box","__clone_box","accounts","as_any","as_any","as_any_mut","as_any_mut","authorities","authorities","authority_list","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","forks","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","header","header_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","make_default_justification","make_justification_for_header","pair","public","round","secret","set_id","sign","signed_precommit","test_header","test_header_with_correct_parent","test_keyring","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","voter_set","votes","vzip","vzip","AccountId","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","AvailableBlockRatio","Balances","Balances","Balances","BalancesConfig","BlockHashCount","Call","Event","ExistentialDeposit","GenesisConfig","GrandpaFinalityVerifier","HeadersToStore","MaxReserves","MaximumBlockLength","MaximumBlockWeight","MinimumPeriod","NumValidators","Origin","OriginCaller","PalletInfo","SessionLength","Sudo","Sudo","Sudo","SudoConfig","System","System","System","SystemConfig","TestCircuitLikeChain","TestHeader","TestNumber","TestRuntime","Timestamp","Timestamp","TransactionByteFee","Void","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_filter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_signed","assimilate_storage","balances","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brute_seed_block_1","caller","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","crate_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch","dispatch_bypass_filter","dispatch_bypass_filter_with_storage_layer","dispatch_with_storage_layer","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","filter_call","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_module_names","identity","identity","identity","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_sub_type","is_sub_type","is_sub_type","is_sub_type","max_encoded_len","metadata","module_name","name","none","none","pre_dispatch","reset_filter","root","root","run_test","serialize","set_caller_from","signed","signed","sudo","system","system","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","BestFinalizedMap","BlockHeightConversionError","BridgedChain","Call","Config","EmptyRangeSubmitted","Error","EventDecodingFailed","EventNotIncluded","Halted","HeaderDataDecodingError","HeaderDecodingError","HeadersToStore","InclusionDataDecodeError","Instance1","Instance10","Instance11","Instance12","Instance13","Instance14","Instance15","Instance16","Instance2","Instance3","Instance4","Instance5","Instance6","Instance7","Instance8","Instance9","InvalidAuthoritySet","InvalidGrandpaJustification","InvalidJustificationLinkage","InvalidRangeLinkage","InvalidStorageProof","Module","MultiImportedHeaders","NoFinalizedHeader","Pallet","ParachainEntryNotFound","RangeToLarge","StorageRootMismatch","StorageRootNotFound","UnknownHeader","UnkownSideEffect","UnsupportedScheduledChange","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accumulate","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_finalized_map","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirm_and_decode_payload_params","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","ensure_operational_single","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_bridged_block_hash","get_call_name","get_call_names","get_dispatch_info","get_imported_roots","get_initial_hash_map","get_latest_finalized_header","get_latest_finalized_height","get_multi_imported_hashes","get_multi_imported_hashes_pointer","get_multi_imported_headers","identity","identity","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","integrity_test","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_known_header","migrate","module_name","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","parse_finalized_storage_proof","set_operational","set_owner","storage_info","submit_headers","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_weight","GatewayWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","find_scheduled_change","find_scheduled_change","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","read_write_authority_sets","read_write_authority_sets","submit_finality_proof","submit_finality_proof","submit_finality_proof_on_many_forks","submit_finality_proof_on_many_forks","submit_finality_proof_on_single_fork","submit_finality_proof_on_single_fork","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_grandpa_finality_verifier","","","","","","","","pallet_grandpa_finality_verifier::bridges","","","pallet_grandpa_finality_verifier::bridges::header_chainpallet_grandpa_finality_verifier::bridges::header_chain::justification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_grandpa_finality_verifier::bridges::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_grandpa_finality_verifier::bridges::test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_grandpa_finality_verifier::mockpallet_grandpa_finality_verifier::mock::Call","","","","pallet_grandpa_finality_verifier::mock::Event","","","pallet_grandpa_finality_verifier::mock::OriginCaller","","pallet_grandpa_finality_verifier::palletpallet_grandpa_finality_verifier::weights","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Block hash of the bridged chain.","Hasher of the bridged chain.","Block number of the bridged chain.","Header of the bridged chain.","","","The module that hosts all the FRAME types needed to add …","Pallet containing weights for this pallet. Autogenerated …","Defines traits which represent a common interface for …","Primitives that may be used at (bridges) runtime level.","Utilities for testing runtime code.","A GRANDPA Authority List and ID.","Abstract finality proof that is justifying block finality.","A trait for pallets which want to keep track of finalized …","base trait for verifying transaction inclusion proofs.","Data required for initializing the bridge pallet.","A type that can be used as a parameter in a dispatchable …","Inclusion proofs of different tries","Proof is a merkle path in the receipts trie (in Substrate …","Proof is a merkle path in the state trie","Proof is a merkle path in the transaction trie (extrisics …","Transaction type.","Transaction inclusion proof type.","","","","Write a header finalized by GRANDPA to the underlying …","","","","","","","List of GRANDPA authorities for the current round.","The initial authorities of the pallet.","Get the best authority set known to the header chain.","Get the best finalized header known to the header chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find header digest that schedules next GRANDPA authorities …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","4-byte gateway identifier.","The header from which we should start syncing.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Should the pallet block transaction immediately after …","Pallet for checking GRANDPA Finality Proofs.","","Create a new GRANDPA Authority Set.","","","","Monotonic identifier of the current GRANDPA authority set.","The ID of the initial authority set.","Return number of header that this proof is generated for.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify that transaction is a part of given block.","","","","Votes ancestries with useful methods.","Justification verification error.","The justification contains extra (unused) headers in its …","A GRANDPA Justification is a proof that a given header was …","The authority has provided an invalid signature.","Justification is finalizing unexpected header.","Failed to decode justification.","The justification contains precommit for header that is …","The cumulative weight of all votes in the justification is …","","","","","","","","","","","","","","","","","","","The set of votes for the chain which is to be finalized.","","","","Decode justification target.","","","","","","","","","","","","Returns <code>Err(_)</code> if <code>precommit_target</code> is a descendant of the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Create new ancestry chain.","Header hash =&gt; parent header hash mapping.","The round (voting period) this justification is valid for.","","","","","","","","","","","","","","","","","","","","","","","Hashes of headers that weren’t visited by <code>is_ancestor</code> …","Verify that justification, that is generated by given …","A proof that the chain of blocks in the commit are related …","","","","A type that fulfills the abstract idea of what a Substrate …","Block number used by the chain.","Minimal Substrate-based chain representation that may be …","","A type that fulfills the abstract idea of what a Substrate …","Hash type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Hasher type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Header type used by the chain.","This struct is used to read storage values from a subset …","","","","","","","","","","","","Return valid storage proof and state root.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Constructs a new storage proof checker.","Reads a value from the available subset of storage. If the …","","","","","","","","","","","","","","Set of test accounts with friendly names.","A test account which can be used to sign messages.","","","","","","Configuration parameters when generating test GRANDPA …","","","","","Get a list of “unique” accounts.","","","","","Convenience function to get a list of Grandpa authority …","The current GRANDPA authority set.","Convenience function to get a list of Grandpa authorities.","","","","","","","","","","","","","","","","","The number of forks.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The header which we want to finalize.","Convenience function for generating a Header ID at a given …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Make a valid GRANDPA justification with sensible defaults","Generate justifications in a way where we are able to tune …","","","The GRANDPA round number for the current authority set.","","The current authority set ID.","","Create signed precommit with given target.","Get a header for testing.","Get a header for testing, with correct parent_hash","Get the corresponding identities from the keyring for the …","","","","","","","","","","","","","Get a valid set of voters for a Grandpa round.","The total number of vote ancestries in our justification.","","","","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","","","","","","","","","","","","","","","","The runtime origin type representing the origin of a call.","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Convert to runtime origin with caller being system signed …","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create with system none origin and …","","","","Create with system root origin and …","","","","","Create with system signed origin and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of hashes of the best finalized header.","The block height couldn’t be converted","The chain we are bridging to here.","Contains one variant per dispatchable that can be called …","Configuration trait of this pallet.","The submitted range is empty","Custom dispatch errors of this pallet.","The events paramaters couldn’t be decoded","The event was not found in the specified block","The pallet is currently halted","The given bytes couldn’t be decoded as header data","The given bytes couldn’t be decoded as a header","Maximal number of finalized headers to keep in the storage.","The inclusion data couldn’t be decoded","Instance1 to be used for instantiable pallet define with …","Instance10 to be used for instantiable pallet define with …","Instance11 to be used for instantiable pallet define with …","Instance12 to be used for instantiable pallet define with …","Instance13 to be used for instantiable pallet define with …","Instance14 to be used for instantiable pallet define with …","Instance15 to be used for instantiable pallet define with …","Instance16 to be used for instantiable pallet define with …","Instance2 to be used for instantiable pallet define with …","Instance3 to be used for instantiable pallet define with …","Instance4 to be used for instantiable pallet define with …","Instance5 to be used for instantiable pallet define with …","Instance6 to be used for instantiable pallet define with …","Instance7 to be used for instantiable pallet define with …","Instance8 to be used for instantiable pallet define with …","Instance9 to be used for instantiable pallet define with …","The authority set in invalid","The submitted GrandpaJustification is not valid","The linkage with the justified header is not valid","The header range linkage is not valid","The submitted storage proof is invalid","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Headers which have been imported into the pallet.","No finalized header was found in storage","The pallet implementing the on-chain logic.","The parachain entry was not found in storage","The submitted range is larger the HeadersToStore, which is …","The headers storage root doesn’t map the supplied once","The relaychains storge root was not found. This implies …","The header couldn’t be found in storage","The side effect is not known for this vendor","A forced change was detected, which is not supported","Weights gathered through benchmarkingnsure that the pallet is in operational mode (not halted).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Map of hashes of the best finalized header.","","","","Roots (ExtrinsicsRoot + StateRoot) which have been …","Hash of the header used to bootstrap the pallet.","","","A ring buffer of imported hashes. Ordered by the insertion …","Current ring buffer position.","Headers which have been imported into the pallet.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if a particular header is known to the bridge pallet.","","","","","","","","","","","Verify that the passed storage proof is valid, given it is …","Halt or resume all pallet operations.","Change <code>PalletOwner</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_bridge_grandpa using the Rialto node …","Weight functions needed for pallet_bridge_grandpa.","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,112,112,4,10,11,113,4,10,11,4,10,11,4,10,113,113,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,0,4,10,11,4,10,11,4,4,10,10,11,11,4,4,10,10,11,11,10,10,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,10,0,4,4,4,10,11,4,10,114,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,112,4,10,11,0,0,30,0,30,30,30,30,30,29,29,30,31,29,30,31,29,29,29,29,30,31,29,30,31,29,29,29,29,29,29,0,29,29,30,31,29,30,31,29,30,31,29,31,29,30,29,30,29,30,31,29,30,31,29,29,30,30,31,31,29,29,30,30,31,31,29,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,31,31,29,29,29,29,29,30,31,29,30,31,29,29,29,29,30,31,29,29,30,31,29,30,31,31,0,29,29,30,31,115,0,0,0,115,0,115,0,115,0,0,0,33,33,35,33,35,33,35,33,35,33,0,35,33,35,33,35,33,33,33,33,35,33,35,35,33,33,35,35,33,33,35,33,35,33,35,33,35,33,35,33,35,33,35,33,35,35,35,33,35,33,35,33,35,33,35,33,35,33,37,0,0,0,0,0,0,0,0,0,0,37,39,0,37,39,37,39,0,39,0,37,39,37,39,37,39,37,39,39,37,39,37,39,37,39,37,39,37,39,37,37,39,39,37,37,39,39,39,0,37,39,37,39,37,39,37,39,37,39,37,39,37,39,0,0,37,37,39,37,39,37,0,0,0,0,37,39,37,39,37,39,37,39,37,39,37,39,0,39,37,39,0,0,0,0,0,0,0,0,0,53,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,55,0,0,53,55,0,0,0,0,0,0,55,0,54,52,53,47,54,55,47,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,47,49,49,53,54,55,53,54,55,53,54,55,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,0,47,52,53,47,54,55,52,53,47,54,55,116,53,54,55,53,54,55,53,54,55,53,54,55,49,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,49,55,55,55,55,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,53,54,55,52,52,53,54,55,52,53,54,55,47,52,53,47,54,55,60,116,52,53,53,53,53,47,47,47,47,54,54,55,55,55,55,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,116,52,52,53,53,47,47,54,54,55,55,49,49,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,60,60,116,116,52,52,53,53,47,47,54,54,55,55,49,49,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,60,60,117,117,117,118,118,118,119,119,119,120,120,120,121,121,121,122,122,122,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,55,55,55,55,53,54,55,116,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,55,55,55,55,54,52,116,116,47,47,52,47,47,47,0,49,47,47,47,49,49,54,53,54,55,52,53,47,54,55,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,53,53,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,47,53,54,55,53,54,55,53,54,55,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,52,53,54,55,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,52,116,52,53,47,54,55,49,117,118,119,120,121,122,123,124,125,126,127,60,128,129,130,131,132,133,134,135,136,0,105,83,0,0,105,0,105,105,105,105,105,83,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,105,105,105,0,0,105,0,105,105,105,105,105,105,105,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,105,86,105,86,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,85,85,85,105,86,105,86,105,86,105,86,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,86,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,85,105,105,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,85,85,105,105,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,85,86,86,86,85,85,85,85,85,85,85,105,86,85,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,85,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,105,86,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,0,105,86,105,86,105,86,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,86,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,85,105,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,0,0,137,137,137,137,137,137,137,138,137,137,137,137,137,137,137,137,137,137,137,137,137,138,137,138,137,138,137,138,137,137,137,137,137,137,137],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],4],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[[[10,[[0,[8,9]]]]],[[10,[[0,[8,9]]]]]],[11,11],[[]],[[]],[[]],[[],[[2,[4,12]]]],[[],[[2,[[10,[9]],12]]]],[[],[[2,[11,12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[[],4],[[],[[10,[[0,[14,9]]]]]],[15],[15],[15],[15],[15],[15],[[],[[2,[4]]]],[[],[[2,[[10,[9]]]]]],[[],[[2,[11]]]],[15],[15],[15],[4],[[[10,[9]]]],[11],[[4,4],16],[[[10,[[0,[17,9]]]],10],16],[[11,11],16],[[],16],[[],16],[[],16],[[],[[19,[18]]]],[[4,20],21],[[[10,[9]],20],21],[[11,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],0,0,[[],15],[[25,26],4],[4,2],[[[10,[9]]],2],[11,2],0,0,[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],27],[[],27],[[],27],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[[0,[8,9]]]]],[[29,[[0,[8,9]]]]]],[[]],0,[[],[[2,[[29,[9]],12]]]],[[],[[2,[12]]]],[13,[[2,[12]]]],[[],[[2,[30]]]],[13,[[2,[12]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[[29,[9]]]],[[[31,[9]]],[[2,[[31,[9]],30]]]],[[[29,[[0,[17,9]]]],29],16],[[30,30],16],[[],16],[[],16],[[[29,[9]],20],21],[[30,20],21],[[[31,[9]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[31,[9]]]],0,0,[[[29,[9]]]],[[],[[7,[5,6]]]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[7,[5,6]]]],[[],27],[[],27],[[],27],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],0,[[26,32,29],[[2,[30]]]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[15],[15],[15],[15],[15],[15],[[33,33],16],[[],16],[[33,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[34,[[2,[35,33]]]],[35,[[2,[[19,[[7,[5]]]],33]]]],[[],2],[[],2],[[],2],[[],2],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[36,[[7,[37]]]],[[],3],[[],3],[[],3],[[],3],[[],[[7,[38]]]],0,[[],25],[[]],[[]],[[]],[[]],[37,37],[[[39,[8]]],[[39,[8]]]],[[]],[[]],[[],[[39,[9]]]],[15],[15],[15],[15],[15],[15],[[37,20],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5],[[],15],[[],15],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[],[[29,[9]]]],[[[39,[9]]],[[29,[9]]]],[37,40],[37,41],0,[37,42],0,[37,43],[[37,44,26],[[46,[45,38]]]],[[],9],[19,9],[[],7],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],27],[[],27],[[]],[[]],[[]],[[]],[[],[[32,[38]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[47,48]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[47,19],[[49,50],[[2,[51]]]],0,[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47],[52,52],[53,53],[47,47],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[[],[[19,[56]]]],[[],[[2,[53,12]]]],[[],[[2,[54,12]]]],[[],[[2,[55,12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[[],49],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[2,[49]]]],[[55,47],57],[[55,47],57],[[55,47],57],[[55,47],57],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[53],[54],[55],[58,[[2,[13]]]],[[52,52],16],[[53,53],16],[[54,54],16],[[55,55],16],[[],16],[[],16],[[],16],[[],16],[47,16],[[52,20],21],[[53,20],21],[[47,20],[[2,[59]]]],[[54,20],21],[[55,20],21],[[60,20],21],[[]],[[]],[[[61,[52]]],53],[[[62,[52]]],53],[[]],[[[63,[52]]],53],[54,47],[19,47],[[[64,[52]]],47],[[]],[[[64,[52]]],54],[[]],[[[66,[65,52]]],55],[[]],[[[66,[67,52]]],55],[[[66,[68,52]]],55],[[[66,[69,52]]],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],[[70,[44]]]],[[],44],[[],[[70,[71]]]],[[],71],[[],71],[[],13],[[],[[70,[13]]]],[[],13],[[],72],[[],72],[[],[[70,[72]]]],[[],44],[[],44],[[],[[70,[44]]]],[[],44],[[],[[70,[44]]]],[[],44],[[],[[70,[13]]]],[[],13],[[],13],[[],44],[[],44],[[],[[70,[44]]]],[[],13],[[],[[70,[13]]]],[[],13],[[],13],[[],[[70,[13]]]],[[],13],[[],[[70,[44]]]],[[],44],[[],44],[55,73],[74],[55,75],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[19,[15]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,[[19,[66]]]],[55,[[19,[66]]]],[55,[[19,[66]]]],[55,[[19,[66]]]],[[],15],[[],76],[[],[[19,[74]]]],[[],[[19,[74]]]],[[],47],[[],47],[[],[[2,[77]]]],[47],[[],47],[[],47],[78],[49,2],[[47,[79,[47]]]],[[],47],[[],47],0,0,0,[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[53,[[2,[[62,[52]]]]]],[53,[[2,[[61,[52]]]]]],[53,[[2,[[63,[52]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[47,78],[[2,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[7],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[82,[[84,[83]]]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[[[86,[83]]],[[86,[83]]]],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,[7,[5]],[7,[5]]],[[2,[103]]]],[[],15],[[],56],[[],104],[[],[[2,[105,12]]]],[[],[[2,[[86,[83]],12]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[13,[[2,[12]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[[86,[83]]],57],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[105],[82,[[2,[[105,[83]]]]]],[[85,85],16],[[[86,[83]],[86,[83]]],16],[[87,87],16],[[88,88],16],[[89,89],16],[[90,90],16],[[91,91],16],[[92,92],16],[[93,93],16],[[94,94],16],[[95,95],16],[[96,96],16],[[97,97],16],[[98,98],16],[[99,99],16],[[100,100],16],[[101,101],16],[[102,102],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[85,20],21],[[[105,[83]],20],21],[[[86,[83]],20],21],[[87,20],[[2,[59]]]],[[88,20],[[2,[59]]]],[[89,20],[[2,[59]]]],[[90,20],[[2,[59]]]],[[91,20],[[2,[59]]]],[[92,20],[[2,[59]]]],[[93,20],[[2,[59]]]],[[94,20],[[2,[59]]]],[[95,20],[[2,[59]]]],[[96,20],[[2,[59]]]],[[97,20],[[2,[59]]]],[[98,20],[[2,[59]]]],[[99,20],[[2,[59]]]],[[100,20],[[2,[59]]]],[[101,20],[[2,[59]]]],[[102,20],[[2,[59]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[[106,[83]]]]]],[[[86,[83]]],74],[[]],[[[86,[83]]],75],[[],19],[[],[[19,[[106,[83]]]]]],[82,[[19,[[7,[5]]]]]],[82,[[19,[[7,[5]]]]]],[[],[[19,[[106,[83]]]]]],[[],[[19,[13]]]],[[],[[19,[[84,[83]]]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[82,[7,[5]]],[[2,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[106,[83]],82],16],[107,44],[[],74],[[],74],[[]],[[],104],[[]],[[]],[71,71],[[],71],[[],71],[[[106,[83]],34,78,82],[[2,[103]]]],[[16,82],[[2,[74]]]],[[82,[7,[5]]],[[2,[74]]]],[[],[[7,[108]]]],[[[109,[83]],82,[7,[5]]],[[2,[[7,[5]],103]]]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[],[[7,[5,6]]]],[[],[[7,[5,6]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,[[111,[110]]]],0,0,[[],3],[[],3],[[]],[[]],[15],[15],[15],[13,71],[13,71],[[]],[[]],[[]],[[]],[[]],[[],15],[[]],[[[22,[6]]],[[22,[3,6]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[[]],[[]],[13,71],[13,71],[[13,13],71],[[13,13],71],[13,71],[13,71],[13,71],[13,71],[[],2],[[],2],[[],27],[[]],[[]],[[]]],"p":[[3,"Private"],[4,"Result"],[8,"Any"],[3,"AuthoritySet"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[8,"Header"],[3,"InitializationData"],[4,"ProofTriePointer"],[3,"Error"],[15,"u32"],[8,"Default"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"ScheduledChange"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"AuthorityList"],[6,"SetId"],[3,"TypeId"],[3,"Type"],[3,"GrandpaJustification"],[4,"Error"],[3,"AncestryChain"],[3,"VoterSet"],[4,"StorageProofError"],[3,"StorageProof"],[3,"StorageProofChecker"],[15,"u16"],[3,"Account"],[6,"AuthorityId"],[3,"JustificationGeneratorParams"],[3,"Keypair"],[3,"PublicKey"],[3,"SecretKey"],[3,"Signature"],[15,"u64"],[6,"AuthoritySignature"],[3,"SignedPrecommit"],[3,"Origin"],[8,"Fn"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"TestRuntime"],[4,"Event"],[4,"OriginCaller"],[4,"Call"],[3,"CrateVersion"],[6,"DispatchResultWithPostInfo"],[6,"MockBlock"],[3,"Error"],[3,"TestCircuitLikeChain"],[4,"Event"],[4,"Event"],[4,"Event"],[6,"Origin"],[6,"Sudo"],[6,"CallableCallFor"],[6,"Timestamp"],[6,"Balances"],[6,"System"],[8,"From"],[6,"Weight"],[3,"Perbill"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[3,"RuntimeMetadataPrefixed"],[4,"TransactionValidityError"],[8,"FnOnce"],[8,"Into"],[4,"TransactionSource"],[6,"TransactionValidity"],[6,"ChainId"],[8,"Config"],[6,"BridgedHeader"],[3,"Pallet"],[4,"Call"],[3,"Instance1"],[3,"Instance2"],[3,"Instance3"],[3,"Instance4"],[3,"Instance5"],[3,"Instance6"],[3,"Instance7"],[3,"Instance8"],[3,"Instance9"],[3,"Instance10"],[3,"Instance11"],[3,"Instance12"],[3,"Instance13"],[3,"Instance14"],[3,"Instance15"],[3,"Instance16"],[4,"DispatchError"],[3,"StorageVersion"],[4,"Error"],[6,"BridgedBlockHash"],[3,"RuntimeDbWeight"],[3,"StorageInfo"],[6,"OriginFor"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"InclusionProofVerifier"],[8,"HeaderChain"],[8,"FinalityProof"],[8,"Chain"],[3,"PalletInfo"],[3,"BlockHashCount"],[3,"MaximumBlockWeight"],[3,"MaximumBlockLength"],[3,"AvailableBlockRatio"],[3,"MinimumPeriod"],[3,"TransactionByteFee"],[3,"HeadersToStore"],[3,"SessionLength"],[3,"NumValidators"],[3,"MaxReserves"],[3,"ExistentialDeposit"],[13,"System"],[13,"Balances"],[13,"Timestamp"],[13,"Sudo"],[13,"System"],[13,"Balances"],[13,"Sudo"],[13,"Void"],[13,"system"],[3,"GatewayWeight"],[8,"WeightInfo"]]},\
"pallet_portal":{"doc":"","t":[0,0,4,8,4,4,16,13,13,13,6,13,3,13,13,13,13,13,13,13,13,16,16,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,13,11,13,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11],"n":["pallet","weights","Call","Config","Error","Event","Event","GatewayRegistered","GatewayVendorNotFound","HeaderSubmitted","Module","NoGatewayHeightAvailable","Pallet","RegistrationError","SetOperational","SetOperationalError","SetOwner","SetOwnerError","SideEffectConfirmationFailed","SubmitHeaderError","UnimplementedGatewayVendor","WeightInfo","Xdns","XdnsRecordCreationFailed","__clone_box","__clone_box","__clone_box","accumulate","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","confirm_and_decode_payload_params","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","get_latest_finalized_header","get_latest_finalized_height","identity","identity","identity","index","init","init","init","init","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","migrate","module_name","name","new_call_variant_register_gateway","new_call_variant_set_operational","new_call_variant_set_owner","new_call_variant_submit_headers","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","register_gateway","register_gateway","set_operational","set_operational","set_owner","set_owner","storage_info","submit_headers","submit_headers","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","with_weight","allowed_side_effects","encoded_header_data","encoded_new_owner","encoded_registration_data","gateway_abi","gateway_genesis","gateway_id","gateway_id","gateway_id","gateway_id","gateway_sys_props","gateway_type","gateway_vendor","operational","url","0","0","0","0","1","1","1","SubstrateWeight","WeightInfo","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","register_gateway","register_gateway","set_operational","set_operational","set_owner","set_owner","submit_headers","submit_headers","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_portal","","pallet_portal::palletpallet_portal::pallet::Call","","","","","","","","","","","","","","","pallet_portal::pallet::Event","","","","","","","pallet_portal::weights","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The module that hosts all the FRAME types needed to add …","Autogenerated weights for pallet_xdns","Contains one variant per dispatchable that can be called …","Configure the pallet by specifying the parameters and …","Custom dispatch errors of this pallet.","The event emitted by this pallet.","Because this pallet emits events, it depends on the runtime…","Event documentation should end with an array that provides …","The gateways vendor is not available, which is a result of …","Header was successfully added","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","No gateway height could be found","The pallet implementing the on-chain logic.","Gateway registration failed","Gateway was set operational. [ChainId, bool]","Finality Verifiers operational status can’t be updated","Gateway owner was set successfully. [ChainId, Vec]","Finality Verifier owner can’t be set.","SideEffect confirmation failed","The header could not be added","Specified Vendor is not implemented","Type representing the weight of this pallet","","The creation of the XDNS record was not successful","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>register_gateway</code>.","Create a call with the variant <code>set_operational</code>.","Create a call with the variant <code>set_owner</code>.","Create a call with the variant <code>submit_headers</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_xdns using the Substrate node and …","Weight functions needed for pallet_xdns.","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,7,8,16,8,0,16,0,16,8,16,8,16,16,16,16,7,7,16,6,8,9,6,6,8,16,9,6,8,16,9,8,16,9,8,16,9,8,16,9,6,8,16,9,6,8,16,9,6,8,9,6,8,9,6,6,6,6,8,16,9,8,16,9,8,16,9,8,16,9,6,8,16,9,6,8,16,9,9,6,8,16,9,8,16,9,6,8,9,6,8,9,6,8,16,9,6,8,16,9,6,6,8,8,16,16,9,9,6,6,8,8,16,16,9,9,9,9,9,6,6,8,16,9,6,6,8,16,9,6,6,8,16,9,6,8,16,9,6,8,16,9,6,8,16,9,6,8,16,9,6,8,16,9,6,6,6,9,9,9,9,6,6,6,6,6,6,6,6,9,6,9,6,9,6,6,9,8,16,9,6,8,9,6,8,16,9,6,8,16,9,0,0,8,16,9,8,16,9,8,16,9,6,8,16,9,8,16,9,6,8,16,9,6,8,16,9,6,8,16,9,16,45,46,47,45,45,45,45,47,48,46,45,45,45,48,45,49,50,51,52,50,51,52,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,53,54,53,54,53,54,53,53,53,53,53,53,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[]],[[]],[[]],[[[2,[4]],[2,[4]]],[[11,[10]]]],[[],12],[[],13],[[],14],[[],[[11,[[8,[7]],15]]]],[[],[[11,[16,15]]]],[[],[[11,[[9,[7]],15]]]],[[],[[11,[15]]]],[[],[[11,[15]]]],[[],[[11,[15]]]],[17,[[11,[15]]]],[17,[[11,[15]]]],[17,[[11,[15]]]],[17,[[11,[15]]]],[17,[[11,[15]]]],[17,[[11,[15]]]],[12],[12],[12],[12],[12],[12],[12],[12],[[[9,[7]]],18],[12],[12],[12],[12],[[[8,[7]]]],[16],[[[9,[7]]]],[[6,6],19],[[[8,[7]],[8,[7]]],19],[[[9,[7]],[9,[7]]],19],[[],19],[[],19],[[],19],[[6,20],21],[[[8,[7]],20],21],[[[16,[7]],20],21],[[[9,[7]],20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],22],[[]],[[[9,[7]]],23],[24,[[11,[[25,[[2,[4]]]],10]]]],[24,[[11,[[25,[[2,[4]]]],10]]]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[26,[5]]],[[26,[3,5]]]],[[[26,[5]]],[[26,[3,5]]]],[[[26,[5]]],[[26,[3,5]]]],[[[26,[5]]],[[26,[3,5]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[28,[[28,[3]]]],[28,[[28,[3]]]],[28,[[28,[3]]]],[28,[[28,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,30],[[],22],[[],22],[[[2,[4]],24,31,32,33,34,35,[2,[36]],[2,[4]]],[[9,[7]]]],[[24,19],[[9,[7]]]],[[24,[2,[4]]],[[9,[7]]]],[[24,[2,[4]]],[[9,[7]]]],[[]],[[],14],[[]],[[]],[37,37],[[],37],[[],37],[[[38,[7]],[2,[4]],24,31,32,33,34,35,[2,[36]],[2,[4]]],18],0,[[[38,[7]],24,19],18],0,[[[38,[7]],24,[2,[4]]],18],0,[[],[[2,[39]]]],[[[38,[7]],24,[2,[4]]],40],0,[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],[[2,[4,5]]]],[[],41],[[],41],[[],41],[[],41],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,[[44,[43]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[]],[[]],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[],12],[[]],[[[26,[5]]],[[26,[3,5]]]],[27,[[27,[3]]]],[28,[[28,[3]]]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],11],[[],11],[[],41],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Vec"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Pallet"],[8,"Config"],[4,"Event"],[4,"Call"],[4,"DispatchError"],[4,"Result"],[15,"usize"],[3,"CrateVersion"],[3,"StorageVersion"],[3,"Error"],[4,"Error"],[15,"u32"],[6,"DispatchResultWithPostInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"DispatchInfo"],[6,"ChainId"],[4,"Option"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"RuntimeDbWeight"],[15,"u64"],[3,"GatewayABIConfig"],[4,"GatewayVendor"],[4,"GatewayType"],[3,"GatewayGenesisConfig"],[3,"GatewaySysProps"],[6,"AllowedSideEffect"],[6,"Weight"],[6,"OriginFor"],[3,"StorageInfo"],[6,"DispatchResult"],[3,"TypeId"],[3,"Type"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[13,"register_gateway"],[13,"submit_headers"],[13,"set_owner"],[13,"set_operational"],[13,"GatewayRegistered"],[13,"SetOwner"],[13,"SetOperational"],[13,"HeaderSubmitted"],[3,"SubstrateWeight"],[8,"WeightInfo"]]},\
"pallet_portal_rpc":{"doc":"RPC interface for the Portal pallet.","t":[3,8,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Portal","PortalApi","PortalApiClient","PortalClient","PortalRuntimeApi","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","gen_client","get_latest_finalized_header","get_latest_finalized_header","get_latest_finalized_header","get_latest_finalized_header_with_context","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","to_delegate","to_delegate","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Client","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from","from_mut","from_mut","from_ref","from_ref","get_latest_finalized_header","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_portal_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_portal_rpc::gen_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct that implements the <code>PortalApi</code>.","","The Client.","The Client.","The API to interact with pallet XDNS","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The generated client module.","Returns latest finalized header of a gateway if available","Returns hash of latest finalized header","","Returns hash of latest finalized header","","Calls <code>U::from(self)</code>.","","","","","","Create new <code>Portal</code> with the given reference to the client.","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","","","","","","","The Client.","","","","","","","","","","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns latest finalized header of a gateway if available","","Calls <code>U::from(self)</code>.","","","","","","Creates a new <code>Client</code>.","","","","","","",""],"i":[0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,0,25,26,12,26,12,12,12,12,12,12,12,12,25,25,12,12,12,12,12,12,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22],"f":[0,0,0,0,0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],0,[3,[[6,[[5,[4]]]]]],[7,[[11,[[9,[[5,[4,8]]]],10]]]],[[12,3],[[6,[[5,[4]]]]]],[[7,13],[[11,[[9,[[5,[4,8]]]],10]]]],[[],2],[[]],[[[14,[8]]],[[14,[1,8]]]],[15,[[15,[1]]]],[16,[[16,[1]]]],[[]],[[]],[15,12],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],11],[[],11],[[],19],[[]],[[]],[[]],0,[20],[[],1],[[],1],[[]],[[]],[[[22,[21]]],[[22,[21]]]],[[]],[2],[2],[2],[[]],[23,22],[[]],[[]],[[]],[[]],[[22,3],24],[[],2],[[]],[[[14,[8]]],[[14,[1,8]]]],[15,[[15,[1]]]],[16,[[16,[1]]]],[[]],[[]],[23,22],[[]],[[],11],[[],11],[[],19],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[6,"ChainId"],[15,"u8"],[3,"Vec"],[6,"Result"],[4,"BlockId"],[3,"Global"],[4,"Option"],[4,"ApiError"],[4,"Result"],[3,"Portal"],[4,"ExecutionContext"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Metadata"],[3,"IoDelegate"],[3,"TypeId"],[3,"Private"],[8,"Clone"],[3,"Client"],[3,"RpcChannel"],[8,"Future"],[8,"PortalApi"],[8,"PortalRuntimeApi"]]},\
"pallet_portal_rpc_runtime_api":{"doc":"Runtime API definition required by Portal RPC extensions.","t":[6,8,11,11],"n":["ChainId","PortalRuntimeApi","get_latest_finalized_header","get_latest_finalized_header_with_context"],"q":["pallet_portal_rpc_runtime_api","","",""],"d":["","The API to interact with pallet XDNS","Returns hash of latest finalized header","Returns hash of latest finalized header"],"i":[0,0,9,9],"f":[0,0,[[1,2],[[7,[[5,[[4,[3]]]],6]]]],[[1,8,2],[[7,[[5,[[4,[3]]]],6]]]]],"p":[[4,"BlockId"],[6,"ChainId"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"ApiError"],[4,"Result"],[4,"ExecutionContext"],[8,"PortalRuntimeApi"]]},\
"pallet_xdns":{"doc":"X-DNS Pallet","t":[13,13,13,6,13,13,13,13,13,13,6,3,3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,6,6,8,13,13,13,13,13,4,13,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,10,11,11,11,10,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,16,4,8,6,4,16,4,16,3,6,13,3,13,13,6,13,16,6,13,13,13,13,13,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11],"n":["Address","Bool","Bytes","ChainId","Contract","Crypto","DynamicAddress","DynamicBytes","Enum","Ethereum","EventSignature","GatewayABIConfig","GatewayGenesisConfig","GatewayType","GatewayVendor","Hasher","Int","Kusama","Mapping","OnCircuit","Option","OptionalInsurance","OptionalReward","Polkadot","ProgrammableExternal","ProgrammableInternal","Ref","Rococo","SideEffectId","SideEffectName","SideEffectProtocol","Slice","StorageRef","String","Struct","TxOnly","Type","Uint","Value","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","address_length","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_length","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","crypto","decimals","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval_abi","extrinsics_version","fetch_nonce","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","get_arguments_2_state_mapper","get_arguments_abi","get_confirming_events","get_escrowed_events","get_hash","get_hash","get_id","get_name","get_reversible_commit","get_reversible_revert","hash","hash","hash_size","hasher","identity","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","modules_encoded","pallet","partial_cmp","populate_state","serialize","serialize","serialize","serialize","serialize","size_of","structs","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_args","value_type_size","vzip","vzip","vzip","vzip","vzip","weights","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","Balances","Call","Config","CustomSideEffects","Error","Escrowed","Event","Event","GenesisConfig","Module","NoParachainInfoFound","Pallet","SideEffectInterfaceAlreadyExists","SideEffectInterfaceNotFound","StandardSideEffects","UnknownXdnsRecord","WeightInfo","XDNSRegistry","XdnsRecordAlreadyExists","XdnsRecordNotFound","XdnsRecordPurged","XdnsRecordStored","XdnsRecordUpdated","__clone_box","__clone_box","__clone_box","accumulate","add_new_xdns_record","add_side_effect","add_side_effect","allowed_side_effects","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fetch_records","fetch_side_effect_interface","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_abi","get_call_name","get_call_names","get_dispatch_info","get_gateway_para_id","get_gateway_security_coordinates","get_gateway_type_unsafe","get_gateway_value_unsigned_type_unsafe","get_gateway_vendor","identity","identity","identity","index","init","init","init","init","init","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","known_xdns_records","migrate","module_name","name","new_call_variant_add_side_effect","new_call_variant_purge_xdns_record","new_call_variant_update_ttl","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","purge_xdns_record","purge_xdns_record","serialize","side_effect_registry","standard_side_effects","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_gateway_ttl","update_ttl","update_ttl","vzip","vzip","vzip","vzip","vzip","with_weight","xdns_registry","argument_abi","argument_to_state_mapper","commit_events","confirm_events","escrowed_events","gateway_id","id","last_finalized","name","requester","revert_events","xdns_record_id","0","0","0","1","SubstrateWeight","WeightInfo","add_new_xdns_record","add_new_xdns_record","as_any","as_any_mut","best_available","best_available","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","purge_xdns_record","purge_xdns_record","try_from","try_into","type_id","unchecked_into","unique_saturated_into","update_ttl","update_ttl","vzip"],"q":["pallet_xdnspallet_xdns::GatewayType","","","","pallet_xdns::Type","","","","","","","","","","","","","","pallet_xdns::palletpallet_xdns::pallet::Call","","","","","","","","","","","","pallet_xdns::pallet::Event","","","","pallet_xdns::weights","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","where u8 is bytes length","","","","","","","","","Describe ABI configuration for a gateway so that it’s …","","","","","","","","","","","","","","","","","","","","DynamicBytes and String are lowered to a vector.","","","","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","There is no way to declare value in Solidity (should there …","","","","","","address length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","Checks that the encoded argument has the same length as …","","","","","","","","","","","","","","","","cryptography algorithm","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval assumes encoded_val is bytes Vector encoded with SCALE","eval assumes encoded_val is bytes Vector encoded with SCALE","Extrinsics version","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Genesis hash - block id of the genesis block use to …","","","","","","","","","","","","","hash size in bytes","hashing algorithm","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SCALE-encoded modules following the format of selected …","The module that hosts all the FRAME types needed to add …","","","","","","","","Calculate how much memory we expect this type to use when …","value length in bytes. ToDo: move as part of metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","","","","","Autogenerated weights for pallet_xdns","","","","","","","","","","","","","","","","","","","A type that provides inspection and mutation to some …","Contains one variant per dispatchable that can be called …","Configuration trait of this pallet.","","Custom dispatch errors of this pallet.","A type that manages escrow, and therefore balances","The event emitted by this pallet.","The overarching event type.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","the xdns entry does not contain parachain information","The pallet implementing the on-chain logic.","SideEffect already stored","SideEffect interface was not found in storage","","Access of unknown xdns_record","Type representing the weight of this pallet","The pre-validated composable xdns_records on-chain …","Stored xdns_record has already been added before","Xdns Record not found","[requester, xdns_record_id]","[xdns_record_id]","[xdns_record_id]","","","","","","","","returns a mapping of all allowed side_effects of a gateway.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches all known XDNS records","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","returns the gateway vendor of a gateway if its available","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>add_side_effect</code>.","Create a call with the variant <code>purge_xdns_record</code>.","Create a call with the variant <code>update_ttl</code>.","","","","","","","","","","","Removes a xdns_record from the onchain registry. Root only …","Removes a xdns_record from the onchain registry. Root only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the last_finalized field for an xdns_record from …","Updates the last_finalized field for an xdns_record from …","","","","","","","The pre-validated composable xdns_records on-chain …","","","","","","","","","","","","","","","","","Weights for pallet_xdns using the Substrate node and …","Weight functions needed for pallet_xdns.","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[6,6,6,0,6,6,6,6,6,12,0,0,0,0,0,6,6,12,6,11,6,6,6,12,11,11,6,12,0,0,0,6,6,6,6,11,0,6,6,6,8,11,12,13,8,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,8,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,11,8,8,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,6,13,11,6,8,11,12,13,6,8,11,12,13,6,6,8,8,11,11,12,12,13,13,6,6,8,8,11,11,12,12,13,13,13,40,40,40,40,6,8,40,40,40,40,6,8,8,8,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,8,11,12,13,13,0,11,40,6,8,11,12,13,6,8,6,8,11,12,13,6,8,11,12,13,6,6,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,6,8,11,12,13,40,8,6,8,11,12,13,0,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,72,76,30,0,0,0,0,30,0,30,0,0,50,0,50,50,0,50,30,0,50,50,46,46,46,45,46,47,45,45,45,47,45,45,46,50,42,47,45,46,50,42,47,46,50,47,46,50,47,46,50,47,45,46,50,42,47,45,46,50,42,47,42,42,45,46,47,45,46,47,45,45,45,46,50,47,46,50,47,46,50,47,46,50,47,42,45,46,50,42,47,45,46,50,42,47,42,47,45,46,50,42,47,46,50,47,45,46,47,45,46,47,45,45,45,46,50,47,45,46,50,42,47,45,45,46,46,50,50,42,42,47,47,45,45,46,46,50,50,42,42,47,47,45,47,47,47,45,45,45,45,45,46,50,47,45,45,46,50,42,47,45,45,46,50,42,47,45,46,50,42,47,45,46,50,42,47,45,46,50,42,47,45,46,50,42,47,45,46,50,42,47,42,45,45,45,47,47,47,45,45,45,45,45,45,45,45,45,45,45,47,42,45,42,45,46,50,47,45,46,47,45,46,50,42,47,45,46,50,42,47,0,0,46,50,47,46,50,47,46,50,47,45,46,50,42,47,46,50,47,45,46,50,42,47,45,46,50,42,47,45,45,47,45,46,50,42,47,50,45,78,78,78,78,78,79,78,79,78,80,78,80,81,82,83,82,0,0,84,85,85,85,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,84,85,85,85,85,85,85,84,85,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7,8],[[10,[9]]]],[[]],[[]],[[]],[[]],[6,6],[8,8],[11,11],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[11,11],14],0,0,[[],[[10,[6,15]]]],[[],[[10,[8,15]]]],[[],[[10,[11,15]]]],[[],[[10,[12,15]]]],[[],[[10,[13,15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[[],8],[[],11],[[],12],[[],13],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[],[[10,[6]]]],[[],[[10,[8]]]],[[],[[10,[11]]]],[[],[[10,[12]]]],[[],[[10,[13]]]],[7],[7],[7],[7],[7],[6],[8],[11],[12],[13],[[6,6],17],[[8,8],17],[[11,11],17],[[12,12],17],[[13,13],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[6,[5,[3,4]]],[[10,[[18,[2,4]],9]]]],[[6,[5,[3,4]],8],[[10,[[5,[3,4]],9]]]],0,[11,16],[[6,19],[[10,[20]]]],[[8,19],[[10,[20]]]],[[11,19],[[10,[20]]]],[[12,19],[[10,[20]]]],[[13,19],[[10,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[[5,[3,4]],4]]]],[[],[[5,[6,4]]]],[[],[[5,[[5,[3,4]],4]]]],[[],[[5,[[5,[3,4]],4]]]],[[],21],[[],21],[[]],[[],[[5,[3,4]]]],[[],[[5,[[5,[3,4]],4]]]],[[],[[5,[[5,[3,4]],4]]]],[6],[8],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],0,0,[[11,11],[[24,[14]]]],[[[5,[[5,[3,4]],4]],25,[24,[[5,[3,4]]]]],[[10,[9]]]],[6,10],[8,10],[11,10],[12,10],[13,10],[[6,8],[[10,[7,9]]]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[6,26],[6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],[[29,[28]]]],[[],[[29,[28]]]],[[],[[29,[28]]]],[[],[[29,[28]]]],[[],[[29,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[5,[3,4]],4]],8,25,[24,[[5,[3,4]]]]],[[10,[9]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[5],[[[31,[30]],[5,[3]],32,[24,[33]],8,12,11,13,34,[5,[3]],[5,[35]]],36],[[[31,[30]],37,[5,[6]],[5,[38]],[5,[38]],[5,[38]],[5,[38]],[5,[38]]],39],0,[32,[[41,[[18,[40]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[30]]]],[[[42,[30]],43],[[10,[44]]]],[45,45],[[[46,[30]]],[[46,[30]]]],[[[47,[30]]],[[47,[30]]]],[[]],[[]],[[]],[[],7],[[],48],[[],49],[[],[[10,[[46,[30]],15]]]],[[],[[10,[50,15]]]],[[],[[10,[[47,[30]],15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[[],[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[16,[[10,[15]]]],[[],[[42,[30]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[],[[10,[[42,[30]]]]]],[[[47,[30]]],39],[7],[7],[7],[7],[7],[[[46,[30]]]],[50],[[[47,[30]]]],[[45,45],17],[[[46,[30]],[46,[30]]],17],[[[47,[30]],[47,[30]]],17],[[],17],[[],17],[[],17],[[],[[5,[51]]]],[[],[[10,[[18,[40]],52]]]],[[45,19],53],[[[46,[30]],19],53],[[[50,[30]],19],53],[[[47,[30]],19],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[10,[8,52]]]],[[[47,[30]]],9],[[]],[[[47,[30]]],54],[32,[[10,[16,52]]]],[32,[[10,[55,52]]]],[32,11],[32,6],[32,[[10,[12,52]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[[[18,[4]]],[[18,[2,4]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[56,21],[[],9],[[],9],[[37,[5,[6]],[5,[38]],[5,[38]],[5,[38]],[5,[38]],[5,[38]]],[[47,[30]]]],[[],[[47,[30]]]],[[32,21],[[47,[30]]]],[[]],[[]],[[],49],[[]],[[]],[[]],[57,57],[[],57],[[],57],[[],57],[[[31,[30]]],39],0,[[[42,[30]]],10],[[],[[24,[58]]]],0,[[],[[5,[59]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,21],39],[[[31,[30]],32,21],39],0,[[]],[[]],[[]],[[]],[[]],[21,[[61,[60]]]],[[],[[24,[51]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],57],[[],57],[[],2],[[],2],[[],57],[[],57],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[],7],[[]],[[[18,[4]]],[[18,[2,4]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[[]],[[]],[[],57],[[],57],[[],10],[[],10],[[],27],[[]],[[]],[[],57],[[],57],[[]]],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"Type"],[15,"usize"],[3,"GatewayABIConfig"],[15,"str"],[4,"Result"],[4,"GatewayType"],[4,"GatewayVendor"],[3,"GatewayGenesisConfig"],[4,"Ordering"],[3,"Error"],[15,"u32"],[15,"bool"],[3,"Box"],[3,"Formatter"],[3,"Error"],[15,"u64"],[3,"Arc"],[3,"Rc"],[4,"Option"],[3,"LocalState"],[4,"RuntimeString"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"Config"],[6,"OriginFor"],[6,"ChainId"],[3,"Parachain"],[3,"GatewaySysProps"],[6,"AllowedSideEffect"],[6,"DispatchResult"],[6,"SideEffectName"],[6,"EventSignature"],[6,"DispatchResultWithPostInfo"],[8,"SideEffectProtocol"],[3,"BTreeMap"],[3,"GenesisConfig"],[3,"Storage"],[3,"String"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"StorageVersion"],[4,"Error"],[3,"XdnsRecord"],[4,"DispatchError"],[6,"Result"],[3,"DispatchInfo"],[6,"Bytes"],[3,"RuntimeDbWeight"],[6,"Weight"],[3,"SideEffectInterface"],[3,"StorageInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[13,"ProgrammableInternal"],[13,"ProgrammableExternal"],[13,"TxOnly"],[13,"OnCircuit"],[13,"Address"],[13,"Int"],[13,"Uint"],[13,"Bytes"],[13,"Enum"],[13,"Struct"],[13,"Mapping"],[13,"Ref"],[13,"Option"],[13,"StorageRef"],[13,"Hasher"],[13,"Crypto"],[13,"add_side_effect"],[13,"update_ttl"],[13,"purge_xdns_record"],[13,"XdnsRecordStored"],[13,"XdnsRecordPurged"],[13,"XdnsRecordUpdated"],[8,"WeightInfo"],[3,"SubstrateWeight"]]},\
"pallet_xdns_rpc":{"doc":"RPC interface for the XDNS pallet.","t":[3,8,8,8,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Xdns","XdnsApiClient","XdnsApiServer","XdnsRuntimeApi","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fetch_abi","fetch_abi","fetch_abi","fetch_abi","fetch_abi_with_context","fetch_records","fetch_records","fetch_records","fetch_records","fetch_records_with_context","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_xdns_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct that implements the <code>XdnsApiServer</code>.","Client implementation for the <code>XdnsApi</code> RPC API.","Server trait implementation for the <code>XdnsApi</code> RPC API.","The API to interact with pallet XDNS","","","","","","","","","","Returns the GatewayABIConfig for a given ChainId","","Returns the GatewayABIConfig for a given ChainId","Returns all known XDNS records","","Returns metadata for all known Blockchains","Returns all known XDNS records","Returns metadata for all known Blockchains","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Collects all the methods and subscriptions defined in the …","Create new <code>Xdns</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,6,6,6,6,6,6,6,21,6,22,23,22,21,6,22,23,22,6,6,6,6,6,6,6,6,6,6,6,6,21,6,6,6,6,6,6,6],"f":[0,0,0,0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[3,[[5,[4]]]],[[6,3],[[5,[4]]]],[7,[[10,[[8,[4]],9]]]],[3,[[13,[[12,[11]]]]]],[[7,14],[[10,[[8,[4]],9]]]],[[],[[5,[15]]]],[6,[[5,[15]]]],[7,[[10,[15,9]]]],[[],[[13,[[12,[11]]]]]],[[7,14],[[10,[15,9]]]],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[12,[16]]],[[12,[1,16]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[[]],[[]],[[],19],[17,6],[[],10],[[],10],[[],20],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[6,"ChainId"],[3,"GatewayABIConfig"],[6,"RpcResult"],[3,"Xdns"],[4,"BlockId"],[4,"Option"],[4,"ApiError"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"ExecutionContext"],[3,"FetchXdnsRecordsResponse"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"RpcModule"],[3,"TypeId"],[8,"XdnsApiServer"],[8,"XdnsRuntimeApi"],[8,"XdnsApiClient"]]},\
"pallet_xdns_rpc_runtime_api":{"doc":"Runtime API definition required by XDNS RPC extensions.","t":[6,3,3,8,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12],"n":["ChainId","FetchXdnsRecordsResponse","GatewayABIConfig","XdnsRuntimeApi","__clone_box","__clone_box","address_length","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","crypto","decimals","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","fetch_abi","fetch_abi_with_context","fetch_records","fetch_records_with_context","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_hash","hash","hash_size","hasher","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","serialize","serialize","structs","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","value_type_size","vzip","vzip","xdns_records"],"q":["pallet_xdns_rpc_runtime_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The object with XdnsRecords as returned by the RPC endpoint","Describe ABI configuration for a gateway so that it’s …","The API to interact with pallet XDNS","","","address length in bytes","","","","","","","","","","","block number type in bytes","","","","","","","","","","cryptography algorithm","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","Returns the GatewayABIConfig for a given ChainId","Returns the GatewayABIConfig for a given ChainId","Returns metadata for all known Blockchains","Returns metadata for all known Blockchains","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","hash size in bytes","hashing algorithm","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","value length in bytes. ToDo: move as part of metadata.","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","",""],"i":[0,0,0,0,6,7,6,6,7,6,7,6,7,6,7,6,7,6,6,7,6,7,6,6,7,6,7,6,6,6,7,6,7,6,7,6,7,6,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,27,27,27,27,6,7,6,7,6,6,7,7,6,6,7,7,6,6,6,6,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,6,7,6,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,7,6,6,7,7],"f":[0,0,0,0,[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[6,6],[7,7],[[]],[[]],0,0,[[],[[9,[6,8]]]],[[],[[9,[7,8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[10,[[9,[8]]]],[[],6],[11],[11],[11],[11],[[],[[9,[6]]]],[[],[[9,[7]]]],[11],[11],[7,[[5,[3,4]]]],[6],[7],[[6,6],12],[[7,7],12],[[],12],[[],12],[[13,14],[[9,[[15,[6]],16]]]],[[13,17,14],[[9,[[15,[6]],16]]]],[13,[[9,[7,16]]]],[[13,17],[[9,[7,16]]]],[[6,18],[[9,[19]]]],[[7,18],[[9,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[6],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],11],[[],11],[[]],[[]],[[[21,[4]]],[[21,[2,4]]]],[[[21,[4]]],[[21,[2,4]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[[]],[[]],[[]],[[]],[[],12],[6,9],[7,9],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],24],[[],24],[[],[[26,[25]]]],[[],[[26,[25]]]],[[]],[[]],[[]],[[]],[7],0,[[]],[[]],0],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"GatewayABIConfig"],[3,"FetchXdnsRecordsResponse"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[15,"bool"],[4,"BlockId"],[6,"ChainId"],[4,"Option"],[4,"ApiError"],[4,"ExecutionContext"],[3,"Formatter"],[3,"Error"],[15,"u64"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[8,"XdnsRuntimeApi"]]},\
"relay_substrate_client":{"doc":"Tools to interact with (Open) Ethereum node using RPC …","t":[18,13,16,16,16,6,8,16,8,16,8,8,3,13,3,13,4,16,6,16,16,6,6,16,13,6,13,18,16,6,13,6,13,16,16,13,3,8,13,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,10,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,12,11,12,11,11,11,0,11,11,12,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,5,5,10,11,10,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AVERAGE_BLOCK_INTERVAL","AccountDoesNotExist","AccountId","AccountKeyPair","BlockNumber","BlockNumberOf","BlockWithJustification","Call","Chain","Chain","ChainBase","ChainWithBalances","Client","ClientNotSynced","ConnectionParams","Custom","Error","Hash","HashOf","Hasher","Header","HeaderIdOf","HeaderOf","Index","Io","JustificationsSubscription","MissingMandatoryCodeEntry","NAME","NativeBalance","OpaqueGrandpaAuthoritiesSet","ResponseParseFailed","Result","RpcError","SignedBlock","SignedTransaction","StorageProofError","SyncHeader","TransactionSignScheme","UninitializedBridgePallet","__clone_box","__clone_box","__clone_box","account_info_storage_key","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_finalized_header_hash","best_header","block_hash_by_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","ensure_synced","eq","equivalent","finality_source","fmt","fmt","fmt","fmt","fmt","free_native_balance","free_native_balance","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","genesis_hash","get_block","grandpa_authorities_set","guard","header","header_by_hash","header_by_number","headers_source","host","id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_connection_error","is_mandatory","justification","metrics","new","next_account_index","number","params","parent_id","port","prove_storage","provide","reconnect","rpc","runtime_version","runtime_version","secure","sign_transaction","source","state_call","storage_value","submit_signed_extrinsic","submit_signed_extrinsic_lock","submit_unsigned_extrinsic","subscribe_justifications","to_owned","to_owned","to_owned","to_string","try_connect","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","0","0","0","0","0","0","FinalitySource","RequiredHeaderNumberRef","__clone_box","as_any","as_any_mut","best_finalized_block_number","borrow","borrow_mut","client","clone","clone_into","deref","deref_mut","drop","finality_proofs","from","from_mut","from_mut","from_ref","from_ref","header_and_finality_proof","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","on_chain_best_finalized_block_number","reconnect","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Environment","abort","abort_on_spec_version_change","abort_when_account_balance_decreased","free_native_balance","now","runtime_version","sleep","HeadersSource","__clone_box","as_any","as_any_mut","best_block_number","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","header_by_hash","header_by_number","header_completion","header_extra","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","reconnect","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","FloatStorageValueMetric","StorageProofOverheadMetric","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","new","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update","update","update_interval","update_interval","vzip","vzip","AuthorSubmitExtrinsic","ChainGetBlock","ChainGetBlockHash","ChainGetFinalizedHead","ChainGetHeader","StateCall","StateGetStorage","StateProveStorage","StateRuntimeVersion","Substrate","SystemAccountNextIndex","SystemHealth","_0","_1","_2","_3","_4","_5","_6","_7","_8","as_any","as_any_mut","author_submit_extrinsic","borrow","borrow_mut","chain_get_block","chain_get_block_hash","chain_get_finalized_head","chain_get_header","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","state_call","state_get_storage","state_prove_storage","state_runtime_version","system_account_next_index","system_health","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","0","0","0","0","0","0","0","0","0","account_id","at_block","block_hash","block_hash","block_number","data","extrinsic","hash","key","keys","method"],"q":["relay_substrate_clientrelay_substrate_client::Error","","","","","","relay_substrate_client::finality_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","relay_substrate_client::guard","","","","","","","","relay_substrate_client::headers_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","relay_substrate_client::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","relay_substrate_client::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","relay_substrate_client::rpc::Substrate","","","","","","","","","","","","","","","","","","",""],"d":["Average block interval.","Account does not exist on the chain.","The user account identifier type for the runtime.","Type of key pairs used to sign transactions.","A type that fulfills the abstract idea of what a Substrate …","Block number used by the chain.","Block with justification.","The aggregated <code>Call</code> type.","Substrate-based chain from minimal relay-client point of …","Chain that this scheme is to be used.","Minimal Substrate-based chain representation that may be …","Substrate-based chain with …","Substrate client type.","The client we’re connected to is not synced, so we can’…","Substrate-over-websocket connection params.","Custom logic error.","Errors that can occur only when interacting with a …","A type that fulfills the abstract idea of what a Substrate …","Hash type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","A type that fulfills the abstract idea of what a Substrate …","Header id used by the chain.","Header type used by the chain.","Index of a transaction used by the chain.","IO error.","Opaque justifications subscription type.","Runtime storage is missing mandatory “:code:” entry.","Chain name.","Balance of an account in native tokens.","Opaque GRANDPA authorities set.","The response from the server could not be SCALE decoded.","Result type used by Substrate client.","An error that can occur when making a request to an …","Block type.","Signed transaction.","An error has happened when we have tried to parse storage …","Generic wrapper for <code>sp_runtime::traits::Header</code> based …","Substrate-based chain transactions signing scheme.","The Substrate bridge pallet has not yet been initialized.","","","","Return runtime storage key for getting …","","","","","","","","","Return hash of the best finalized block.","Returns the best Substrate header.","Get a Substrate block hash by its number.","","","","","","","","","Substrate RPC client.","","","","","","","","","","","","","","","","","","","","","Returns true if client is connected to at least one peer …","","","Default generic implementation of finality source for …","","","","","","","Return native tokens balance of the account.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Return hash of the genesis block.","Genesis block hash.","Get a Substrate block from its hash.","Get the GRANDPA authority set at given block.","Pallet provides a set of guard functions that are running …","Return block header.","Get a Substrate header by its hash.","Get a Substrate header by its number.","Default generic implementation of headers source for basic …","Websocket server hostname.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Extracts wrapped header from self.","","","","","","","","","","","Return block justification, if known.","Contains several Substrate-specific metrics that may be …","Returns client that is able to call RPCs on Substrate node …","Get the nonce of the given Substrate account.","","Client connection params.","","Websocket server TCP port.","Returns storage proof of given storage keys.","","Reopen client connection.","The most generic Substrate node RPC interface.","Return runtime version.","","Use secure websocket connection.","Create transaction for given runtime call, signed by given …","","Execute runtime call at given block.","Read value from runtime storage.","Submit an extrinsic signed by given account.","If several tasks are submitting their transactions …","Submit unsigned extrinsic for inclusion in a block.","Return new justifications stream.","","","","","Try to connect to Substrate node over websocket. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Substrate node as finality source.","Shared updatable reference to the maximal header number …","","","","","","","Returns reference to the underlying RPC client.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","Create new headers source using given client.","Returns best finalized block number.","","","","","","","","","Guards environment.","Abort current process. Called when guard condition check …","Abort when runtime spec version is different from …","Abort if, during a 24 hours, free balance of given account …","Return free native balance of the account on the chain.","Return current time.","Return current runtime version.","Sleep given amount of time.","Substrate node as headers source.","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","","","","","","Create new headers source using given client.","","","","","","","","","Metric that represents fixed-point runtime storage value …","Metric that represents extra size of storage proof as …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create new metric.","Create new metric instance with given name and help.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,15,4,66,67,0,0,4,0,66,0,0,0,15,0,15,0,67,0,67,67,0,0,4,15,0,15,4,17,0,15,0,15,4,66,15,0,0,15,5,8,9,17,5,15,8,9,5,15,8,9,5,5,5,5,15,8,9,5,15,8,9,5,5,8,9,5,8,9,9,5,15,8,8,9,5,15,8,9,5,15,8,9,5,8,8,0,5,15,15,8,9,5,5,5,15,15,15,15,8,8,8,9,5,5,15,15,8,8,9,9,5,5,15,15,8,8,9,9,5,5,5,5,0,68,5,5,0,9,8,5,15,8,9,5,15,8,9,5,15,8,9,5,15,8,9,5,15,8,9,8,5,15,8,9,5,15,8,9,15,8,68,0,5,5,8,5,8,9,5,15,5,0,5,5,9,66,15,5,5,5,5,5,5,5,8,9,15,5,5,15,8,9,5,15,8,9,5,15,8,9,5,15,8,9,5,15,8,9,5,15,8,9,69,70,71,72,73,74,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,48,0,0,48,48,48,48,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,56,57,57,56,56,57,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,75,75,75,75,75,75,75,75,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,86,90,91,92,91,86],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[[5,[4]]],6],[[[5,[4]]],6],[[[5,[4]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[5,[4]]],[[5,[4]]]],[[[8,[7]]],[[8,[7]]]],[9,9],[[]],[[]],[[]],[[],9],[10],[10],[10],[8],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[[5,[4]]],6],[[[8,[11]],8],12],[[],12],0,[[[5,[4]],13],14],[[15,13],14],[[15,13],14],[[[8,[16]],13],14],[[9,13],14],[[[5,[17]]],[[20,[[19,[18]]]]]],[[[5,[4]]],6],[[]],[[]],[21,15],[22,15],[23,15],[24],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]]],0,[[[5,[4]],25],6],[[[5,[4]]],[[6,[26]]]],0,[[]],[[[5,[4]]],6],[[[5,[4]]],6],0,0,[[[8,[27]]],28],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[[19,[29]]],[[19,[3,29]]]],[[[19,[29]]],[[19,[3,29]]]],[[[19,[29]]],[[19,[3,29]]]],[[[19,[29]]],[[19,[3,29]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[31,[[31,[3]]]],[31,[[31,[3]]]],[31,[[31,[3]]]],[31,[[31,[3]]]],[8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,12],[[[8,[27]]],12],[[],[[25,[32]]]],0,[9,[[5,[4]]]],[[[5,[4]]],6],[[[8,[27]]]],0,[[[8,[27]]],28],0,[[[5,[4]],[33,[2]]],[[6,[34]]]],[35],[[[5,[4]]],6],0,[[[5,[4]]],[[6,[36]]]],[[[5,[17]]],[[20,[[19,[18]]]]]],0,[[]],[15,[[25,[37]]]],[[[5,[4]],38,39,25],[[6,[39]]]],[[[5,[4]],2],[[6,[[25,[40]]]]]],[[[5,[4]],41],6],0,[[[5,[4]],39],6],[[[5,[4]]],[[6,[42]]]],[[]],[[]],[[]],[[],38],[9,[[6,[[5,[4]]]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[],3],[[],3],[45,[[20,[[19,[18]]]]]],[[]],[[]],[[[45,[4]]],5],[[[45,[4]]],[[45,[4]]]],[[]],[10],[10],[10],[45,[[20,[[19,[18]]]]]],[[]],[[]],[[]],[[]],[[]],[45,[[20,[[19,[18]]]]]],[[],10],[[]],[[[19,[29]]],[[19,[3,29]]]],[30,[[30,[3]]]],[31,[[31,[3]]]],[[]],[[]],[[[5,[4]],[25,[[46,[4]]]]],[[45,[4]]]],[[[45,[4]]],[[43,[15]]]],[[[45,[4,47]]],[[20,[[19,[18]]]]]],[[]],[[],43],[[],43],[[],44],[[]],[[]],[[]],0,[[],[[20,[[19,[18]]]]]],[[[48,[17]],49]],[[[48,[17]]]],[[],[[20,[[19,[18]]]]]],[[],50],[[],[[20,[[19,[18]]]]]],[51,[[20,[[19,[18]]]]]],0,[1],[[],3],[[],3],[52,[[20,[[19,[18]]]]]],[[]],[[]],[[[52,[4]]],[[52,[4]]]],[[]],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[52,[[20,[[19,[18]]]]]],[52,[[20,[[19,[18]]]]]],[[52,53],[[20,[[19,[18]]]]]],[[52,53,54],[[20,[[19,[18]]]]]],[[],10],[[]],[[[19,[29]]],[[19,[3,29]]]],[30,[[30,[3]]]],[31,[[31,[3]]]],[[]],[[]],[[[5,[4]]],[[52,[4]]]],[[[52,[4,55]]],[[20,[[19,[18]]]]]],[[]],[[],43],[[],43],[[],44],[[]],[[]],[[]],0,0,[1],[1],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[[56,[[0,[7,4]],[0,[7,7]]]]],[[56,[[0,[7,4]],[0,[7,7]]]]]],[[[57,[4]]],[[57,[4]]]],[[]],[[]],[10],[10],[10],[10],[10],[10],[[[56,[[0,[16,4]],[0,[16,7]]]],13],14],[[[57,[[0,[16,4]]]],13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[]],[[]],[[[19,[29]]],[[19,[3,29]]]],[[[19,[29]]],[[19,[3,29]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[31,[[31,[3]]]],[31,[[31,[3]]]],[[]],[[]],[[]],[[]],[[58,[25,[59]],[5,[4]],2,[25,[[0,[40,60]]]],38,38],[[43,[[56,[4,[0,[40,60]]]],61]]]],[[58,[25,[59]],[5,[4]],38,38],[[43,[[57,[4]],61]]]],[[]],[[]],[[],43],[[],43],[[],43],[[],43],[[],44],[[],44],[[]],[[]],[[]],[[]],[[[56,[4]]],[[20,[[19,[18]]]]]],[[[57,[4]]],[[20,[[19,[18]]]]]],[[[56,[4]]],51],[[[57,[4]]],51],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[[62,[39]]],[[43,[22]]]],[[]],[[]],[[[62,[25]]],[[43,[22]]]],[[[62,[25]]],[[43,[22]]]],[[],[[43,[22]]]],[[[62,[25]]],[[43,[22]]]],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[],10],[[]],[[[19,[29]]],[[19,[3,29]]]],[30,[[30,[3]]]],[31,[[31,[3]]]],[[]],[[]],[[[62,[38]],[62,[39]],[62,[25]]],[[43,[39,22]]]],[[[62,[2]]],[[43,[[25,[63]],22]]]],[[[62,[[33,[2]]]],[62,[25]]],[[43,[64,22]]]],[[],[[43,[36,22]]]],[62,[[43,[22]]]],[[],[[43,[65,22]]]],[[],43],[[],43],[[],44],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[3,"StorageKey"],[8,"Any"],[8,"Chain"],[3,"Client"],[6,"Result"],[8,"Clone"],[3,"SyncHeader"],[3,"ConnectionParams"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[8,"Debug"],[8,"ChainWithBalances"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"JoinError"],[4,"Error"],[3,"Error"],[15,"never"],[4,"Option"],[6,"OpaqueGrandpaAuthoritiesSet"],[8,"Header"],[3,"HeaderId"],[3,"Global"],[3,"Arc"],[3,"Rc"],[6,"EncodedJustification"],[3,"Vec"],[3,"StorageProof"],[3,"Demand"],[3,"RuntimeVersion"],[8,"Error"],[3,"String"],[3,"Bytes"],[8,"Decode"],[8,"FnOnce"],[6,"JustificationsSubscription"],[4,"Result"],[3,"TypeId"],[3,"FinalitySource"],[6,"RequiredHeaderNumberRef"],[8,"FinalitySyncPipeline"],[8,"Environment"],[15,"u32"],[3,"Instant"],[3,"Duration"],[3,"HeadersSource"],[6,"HeaderIdOf"],[3,"QueuedHeader"],[8,"HeadersSyncPipeline"],[3,"FloatStorageValueMetric"],[3,"StorageProofOverheadMetric"],[3,"Registry"],[15,"str"],[8,"FixedPointNumber"],[4,"Error"],[8,"Into"],[3,"StorageData"],[3,"ReadProof"],[3,"Health"],[8,"TransactionSignScheme"],[8,"ChainBase"],[8,"BlockWithJustification"],[13,"Io"],[13,"RpcError"],[13,"ResponseParseFailed"],[13,"ClientNotSynced"],[13,"StorageProofError"],[13,"Custom"],[4,"Substrate"],[13,"_0"],[13,"_1"],[13,"_2"],[13,"_3"],[13,"_4"],[13,"_5"],[13,"_6"],[13,"_7"],[13,"_8"],[13,"SystemAccountNextIndex"],[13,"StateCall"],[13,"ChainGetHeader"],[13,"ChainGetBlock"],[13,"ChainGetBlockHash"],[13,"AuthorSubmitExtrinsic"],[13,"StateProveStorage"],[13,"StateGetStorage"]]},\
"relay_utils":{"doc":"Utilities used by different relays.","t":[12,12,8,13,17,13,13,13,4,3,17,8,13,4,13,4,13,13,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,0,5,11,11,11,11,10,11,11,0,11,5,0,2,2,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,13,8,8,3,6,3,3,3,6,3,13,13,8,3,3,13,3,4,3,8,16,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,12,10,11,11,11,11,11,11,11,11,11,12,11,5,11,12,11,10,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,16,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11],"n":["0","1","BlockNumberBase","Both","CONNECTION_ERROR_DELAY","Connection","ConnectionFailed","Failed","FailedClient","HeaderId","MAX_BACKOFF_INTERVAL","MaybeConnectionError","NonConnection","ProcessFutureResult","Source","StringifiedMaybeConnectionError","Success","Target","bail_on_arg_error","bail_on_error","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fail_if_connection_error","fmt","fmt","fmt","fmt","format_ids","from","from","from","from","get_hash","hash","init","init","init","init","initialize","interval","into","into","into","into","is_connection_error","is_connection_error","is_ok","metrics","new","process_future_result","relay_loop","relay_loop","relay_metrics","retry_backoff","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","initialize_logger","initialize_relay","AlreadyReg","Atomic","Collector","Counter","CounterVec","F64","FloatJsonValueMetric","Gauge","GaugeVec","GlobalMetrics","InconsistentCardinality","Io","Metrics","MetricsAddress","MetricsParams","Msg","Opts","PrometheusError","Registry","StandaloneMetrics","T","U64","add","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","collect","collect","const_label","const_labels","const_labels","dec","dec_by","dec_by","dec_by","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","desc","desc","describe","disable","disabled","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fq_name","from","from","from","from","from","from","from","from","from","from","from","from","from","gather","get","get","get","get","get","help","host","inc","inc","inc_by","inc_by","inc_by","inc_by","inc_by_with_ordering","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","local","metric","metric","metric_name","metrics_prefix","metrics_prefix","name","namespace","namespace","new","new","new","new","new","new","new","new","new","new_custom","port","provide","register","register","registry","reset","set","set","set","set","set_gauge_value","source","spawn","sub","subsystem","subsystem","swap","swap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister","update","update","update","update_interval","update_interval","update_interval","variable_label","variable_labels","variable_labels","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_opts","with_opts","0","0","expect","got","Client","Error","Loop","LoopMetrics","RECONNECT_DELAY","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","expose","from","from","init","init","into","into","into_params","loop_metric","reconnect","reconnect_delay","reconnect_failed_client","relay_loop","relay_metrics","run","standalone_metric","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_metrics"],"q":["relay_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","relay_utils::StringifiedMaybeConnectionError","","relay_utils::initialize","","relay_utils::metricsrelay_utils::metrics::PrometheusError","","","","relay_utils::relay_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Block number traits shared by all chains that relay is …","Both clients are failing, or we just encountered some …","Delay after connection-related error happened before we’…","The error is connection-related error.","Future has failed with connection error.","Future has failed with non-connection error.","Which client has caused error.","Ethereum header Id.","Max delay after connection-unrelated error happened before …","Error type that can signal connection errors.","The error is connection-unrelated error.","Future process result.","It is the source client who has caused error.","Stringified error that may be either connection-related or …","Future has been processed successfully.","It is the target client who has caused error.","Macro that returns (client, Err(error)) tuple from …","Macro that returns (client, Err(error)) tuple from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns Ok(true) if future has succeeded. Returns …","","","","","Compact format of IDs vector.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Relayer initialization functions.","Stream that emits item every <code>timeout_ms</code> milliseconds.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if error (maybe) represents connection error.","","Returns true if result is Success.","","Create new stringified connection error.","Process result of the future from a client.","","","","Exponential backoff for connection-unrelated errors …","","","","","","","","","","","","","","","","","","","","","","","Initialize Relay logger instance.","Initialize relay environment.","A duplicate metric collector has already been registered.","An interface for atomics. Used to generically model float …","An interface for collecting metrics.","The underlying implementation for <code>Counter</code> and <code>IntCounter</code>.","The underlying implementation for <code>CounterVec</code> and …","A atomic float.","Metric that represents float value received from HTTP …","The underlying implementation for <code>Gauge</code> and <code>IntGauge</code>.","The underlying implementation for <code>GaugeVec</code> and <code>IntGaugeVec</code>.","Global Prometheus metrics.","The label cardinality was inconsistent.","An error containing a <code>std::io::Error</code>.","Metrics API.","Unparsed address that needs to be used to expose …","Prometheus endpoint MetricsParams.","An error message which is only a string.","A struct that bundles the options for creating most <code>Metric</code> …","The error types for prometheus.","A struct for registering Prometheus collectors, collecting …","Standalone metrics API.","The numeric type associated with this atomic.","A atomic unsigned integer.","Add the given value to the gauge. (The value can be …","Interface and TCP port to be used when exposing Prometheus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collect metrics.","","","<code>const_label</code> adds a const label.","<code>const_labels</code> sets the const labels.","const_labels are used to attach fixed labels to this …","Decrease the gauge by 1.","Decrement the value by a given amount.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return descriptors for metrics.","","","","Do not expose metrics.","Creates metrics params so that metrics are not exposed.","","","","","","","","","","","","","","","","","","","","","","","","<code>fq_name</code> returns the fq_name.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>gather</code> calls the Collect method of the registered …","Get the value.","","","Return the counter value.","Return the gauge value.","help provides information about this metric. Mandatory!","Serve HTTP requests at given host.","Increase the counter by 1.","Increase the gauge by 1.","Increment the value by a given amount.","","","Increase the given value to the counter.","Increment the value by a given amount with the provided …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a <code>GenericLocalCounter</code> for single thread usage.","","","Returns metric name optionally prefixed with given prefix.","Set prefix to use in metric names.","Prefix that must be used in metric names.","namespace, subsystem, and name are components of the …","<code>namespace</code> sets the namespace.","namespace, subsystem, and name are components of the …","Create a new atomic value.","Create new metric instance with given name and help.","Create and register global metrics.","","","Create a <code>GenericCounter</code> with the <code>name</code> and <code>help</code> arguments.","Create a <code>GenericGauge</code> with the <code>name</code> and <code>help</code> arguments.","<code>new</code> creates the Opts with the <code>name</code> and <code>help</code> arguments.","<code>new</code> creates a Registry.","Create a new registry, with optional custom prefix and …","Serve HTTP requests at given port.","","","<code>register</code> registers a new <code>Collector</code> to be included in …","Metrics registry. May be <code>Some(_)</code> if several components …","Restart the counter, resetting its value back to 0.","Set the value to the provided value.","","","Set the gauge to an arbitrary value.","Set value of gauge metric.","","Spawn the self update task that will keep update metric …","Subtract the given value from the gauge. (The value can be …","<code>subsystem</code> sets the sub system.","namespace, subsystem, and name are components of the …","Store the value, returning the previous value.","Stores a value into the atomic integer, returning the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>unregister</code> unregisters the <code>Collector</code> that equals the …","Update metric values.","","","Metrics update interval.","","","<code>variable_label</code> adds a variable label.","<code>variable_labels</code> sets the variable labels.","variable_labels contains names of labels for which the …","","","","","","","","","","","","Create a <code>GenericCounter</code> with the <code>opts</code> options.","Create a <code>GenericGauge</code> with the <code>opts</code> options.","","","The expected number of labels.","The actual number of labels.","Basic blockchain client from relay perspective.","Type of error this clients returns.","Generic relay loop.","Relay loop metrics builder.","Default pause between reconnect attempts.","","","","","","","","","","","Expose metrics using address passed at creation.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into <code>MetricsParams</code> structure so that metrics …","Add relay loop metrics.","Try to reconnect to source node.","Customize delay between reconnect attempts.","Deal with the client who has returned connection error.","Returns generic loop that may be customized and started.","Returns generic relay loop metrics that may be customized …","Run relay loop.","Add standalone metrics.","","","","","","","","","Start building loop metrics using given prefix."],"i":[2,2,0,3,0,13,4,4,0,0,0,0,13,0,3,0,4,3,0,0,2,13,3,4,2,13,3,4,2,3,4,2,3,4,2,2,13,3,4,2,13,3,4,2,13,3,4,2,3,2,3,4,2,13,3,4,0,2,13,3,4,2,2,2,13,3,4,0,0,2,13,3,4,57,13,4,0,13,0,0,0,0,0,2,3,4,13,2,13,3,4,2,13,3,4,2,13,3,4,2,13,3,4,58,59,0,0,40,0,0,0,0,0,0,0,0,0,40,40,0,0,0,40,0,0,0,0,60,0,24,28,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,29,24,30,31,25,26,27,28,29,24,30,31,49,29,24,30,30,30,24,60,37,38,27,31,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,24,30,31,49,29,24,30,28,28,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,40,24,30,31,30,25,26,27,28,28,37,38,29,40,40,24,30,31,31,60,37,38,29,24,30,27,29,24,60,37,38,29,38,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,24,30,31,29,29,24,0,28,28,30,30,30,60,25,26,37,38,29,24,30,31,31,27,40,0,31,28,29,60,37,38,24,0,40,61,24,30,30,37,38,25,26,27,28,29,24,30,31,40,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,24,30,31,25,26,27,28,37,38,29,40,24,30,31,31,61,25,26,61,25,26,30,30,30,25,26,27,28,37,38,29,40,24,30,31,29,24,62,63,64,64,0,65,0,0,0,55,54,55,54,55,54,55,54,55,54,54,55,54,55,54,55,54,54,54,65,55,0,0,0,55,54,55,54,55,54,55,54,55,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1,1]]],[[2,[1,1]]]],[3,3],[4,4],[[]],[[]],[[]],[[],[[2,[5,5]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[2,[7,7]],2],8],[[3,3],8],[[],8],[[],8],[[4,3],[[9,[8,3]]]],[[[2,[10,10]],11],12],[[13,11],12],[[3,11],12],[[4,11],12],[14,15],[[]],[[]],[[]],[[]],[[],16],[[[2,[17,17]]]],[[],6],[[],6],[[],6],[[],6],0,[18,19],[[]],[[]],[[]],[[]],[[],8],[13,8],[4,8],0,[[8,15],13],[[9,20,21,22,21,21],4],0,0,0,[[],20],[[]],[[]],[[]],[13,15],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],0,0,[8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[26,26],[27,27],[28,28],[29,29],[24,24],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[34,[32,33]]]],[29,[[34,[32,33]]]],[24,[[34,[32,33]]]],[30,30],[[30,[36,[15,15,35]]],30],0,[24],[[]],[37],[38],[[],27],[[],31],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[34,[39,33]]]],[29,[[34,[39,33]]]],[24,[[34,[39,33]]]],[30,[[9,[39,40]]]],[28,28],[[],28],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[25,11],12],[[26,11],12],[[27,11],12],[[28,11],12],[[37,11],[[9,[41]]]],[[38,11],[[9,[41]]]],[[29,11],[[9,[41]]]],[[40,11],[[9,[41]]]],[[40,11],[[9,[41]]]],[[24,11],[[9,[41]]]],[[30,11],[[9,[41]]]],[[31,11],[[9,[41]]]],[30,15],[[]],[[]],[[]],[[[42,[27]]],28],[[]],[[]],[[]],[[]],[[]],[43,40],[[]],[[]],[[]],[31,[[34,[32,33]]]],[[]],[37],[38],[29],[24],0,0,[29],[24],[[]],[37],[38],[29],[[38,16,44]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,45],[29,46],[24,46],[[[42,[47]],47],15],[[28,15],28],0,0,[30,30],0,[[]],[[31,[42,[47]],15,15,15,15],[[9,[25,40]]]],[[31,[42,[47]]],[[9,[26,40]]]],[[],37],[[],38],[[],[[9,[29,40]]]],[[],[[9,[24,40]]]],[[],30],[[],31],[[[42,[15]],[42,[[36,[15,15,35]]]]],[[9,[31,40]]]],0,[48],[31,[[9,[40]]]],[[31,[50,[49,33]]],[[9,[40]]]],0,[29],[[]],[37],[38],[24],[[24,[9,[[42,[[0,[5,10]]]],10]]]],[40,[[42,[51]]]],[[]],[24],[30,30],0,[[37,52,44],52],[[38,16,44],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[31,[50,[49,33]]],[[9,[40]]]],[[],[[22,[[50,[53]]]]]],[25,[[22,[[50,[53]]]]]],[26,[[22,[[50,[53]]]]]],[[],18],[25,18],[26,18],[30,30],[[30,[34,[15,33]]],30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,[[9,[29,40]]]],[30,[[9,[24,40]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[54,[[9,[55,15]]]],[[]],[[]],[[],6],[[],6],[[]],[[]],[54,28],[[54,21],[[9,[[54,[56]],15]]]],[[],[[22,[[50,[53]]]]]],[[55,18],55],[[3,18]],[[],55],[[[42,[15]],28],54],[[55,15],[[9,[15]]]],[[54,21],[[9,[54,15]]]],[[],9],[[],9],[[],9],[[],9],[[],23],[[],23],[[]],[[]],[[55,[42,[15]],28],54]],"p":[[8,"Clone"],[3,"HeaderId"],[4,"FailedClient"],[4,"ProcessFutureResult"],[8,"Default"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"StringifiedMaybeConnectionError"],[8,"ExactSizeIterator"],[3,"String"],[15,"u64"],[8,"Hash"],[3,"Duration"],[8,"Stream"],[6,"ExponentialBackoff"],[8,"FnOnce"],[3,"Pin"],[3,"TypeId"],[3,"Gauge"],[3,"FloatJsonValueMetric"],[3,"GlobalMetrics"],[3,"MetricsAddress"],[3,"MetricsParams"],[3,"Counter"],[3,"Opts"],[3,"Registry"],[3,"MetricFamily"],[3,"Global"],[3,"Vec"],[3,"RandomState"],[3,"HashMap"],[3,"F64"],[3,"U64"],[3,"Desc"],[4,"PrometheusError"],[3,"Error"],[4,"Option"],[3,"Error"],[4,"Ordering"],[3,"GenericLocalCounter"],[3,"Metric"],[15,"str"],[3,"Demand"],[8,"Collector"],[3,"Box"],[8,"Error"],[15,"f64"],[8,"Future"],[3,"LoopMetrics"],[3,"Loop"],[8,"Metrics"],[8,"MaybeConnectionError"],[13,"Connection"],[13,"NonConnection"],[8,"Atomic"],[8,"StandaloneMetrics"],[13,"Msg"],[13,"Io"],[13,"InconsistentCardinality"],[8,"Client"]]},\
"snowbridge_core":{"doc":"Core","t":[2,2,2,8,8,2,2,8,2,2,8,10,0,10,10,0,10,0,10,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,4,13,13,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["ChannelId","ERC721TokenData","Message","MessageCommitment","MessageDispatch","MessageId","MessageNonce","OutboundRouter","Proof","TokenInfo","Verifier","add","assets","dispatch","initialize_storage","nft","submit","types","verify","RemoteParachain","XcmReserveTransfer","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","fee","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","para_id","partial_cmp","reserve_transfer","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","ERC721TokenData","Nft","TokenInfo","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","burn","clone","clone","clone_into","clone_into","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_token_data","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_owner","metadata","mint","owner","serialize","to_keyed_vec","to_keyed_vec","to_owned","to_owned","token_contract","token_id","transfer","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","AuxiliaryDigestItem","Basic","ChannelId","Commitment","Incentivized","Message","MessageId","MessageNonce","Proof","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_hash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_enum_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","new","nonce","proof","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_index","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","0","1"],"q":["snowbridge_core","","","","","","","","","","","","","","","","","","","snowbridge_core::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_core::nft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_core::typessnowbridge_core::types::AuxiliaryDigestItem",""],"d":["","","","Add a message to a commitment","Dispatch a message","","","Outbound submission for applications","","","A trait for verifying messages.","","","","","","","Types for representing messages","","Represents a remote parachain by id with a fee that will …","","","","","","","","","","","","","","","","","","","","","","","The fee required for XCM execution.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","The parachain id.","","","","","","","","","","","","","","","","","","Token info","","","","","","","","","","","","","","","","","","","","","","Token Properties","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Token metadata","","Token owner","","","","","","The ERC721 smart contract on Ethereum","The ERC721 token id","","","","","","","","","","","","","","","","","","","","","","Auxiliary <code>DigestItem</code> to include in header digest.","","","A batch of messages has been committed.","","A message relayed from Ethereum.","","","Verification input for the message verifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The raw message data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input to the message verifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,40,0,41,42,0,43,0,42,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,44,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,45,33,34,33,34,33,33,34,33,34,33,34,33,34,33,34,33,34,34,33,34,33,34,33,34,33,34,33,34,33,34,33,33,34,34,33,33,34,34,45,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,45,33,45,33,34,33,34,33,34,34,34,45,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,0,1,0,38,1,0,0,0,0,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,37,36,1,11,37,38,36,1,11,37,38,36,36,1,11,37,38,36,1,11,37,38,11,37,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,36,1,1,11,11,37,37,38,38,36,36,1,1,11,11,37,37,38,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,1,36,1,11,37,38,36,1,11,37,38,36,36,11,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,37,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,36,1,11,37,38,46,46],"f":[0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],0,[2],[[[6,[5]],7,8],[[10,[9]]]],0,[[1,2],4],0,[11,[[10,[12,13]]]],0,0,[14],[[],15],[[],15],[[]],[[],[[6,[8,16]]]],[[]],[[]],[[]],[17,17],[[]],[[],[[10,[17,18]]]],[[],[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[20],[20],[[],[[10,[17]]]],[20],[17],[[17,17],21],[[],21],0,[[17,22],23],[[]],[[]],[[]],[[]],[[]],[[],[[6,[8,16]]]],[[],20],[[]],[[[24,[16]]],[[24,[15,16]]]],[25,[[25,[15]]]],[26,[[26,[15]]]],[[]],[[]],0,[[17,17],[[28,[27]]]],[[29,29,17],4],[17,10],[[],[[6,[8,16]]]],[[]],[[],10],[[],10],[[]],[[]],[[],[[6,[8,16]]]],[[],30],[[],31],[[]],[[]],[[]],0,0,0,[14],[14],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[[33,[32,32]]],[[33,[32,32]]]],[34,34],[[]],[[]],0,[[],[[10,[33,18]]]],[[],[[10,[34,18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[20],[20],[20],[20],[[],[[10,[34]]]],[20],[20],[33],[34],[[[33,[35,35]],33],21],[[34,34],21],[[],21],[[],21],[[33,22],23],[[34,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[28,[33]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],20],[[],20],[[]],[[]],[[[24,[16]]],[[24,[15,16]]]],[[[24,[16]]],[[24,[15,16]]]],[25,[[25,[15]]]],[25,[[25,[15]]]],[26,[[26,[15]]]],[26,[[26,[15]]]],[[]],[[]],[[]],[[]],[[],21],0,[[[6,[8]]],[[10,[13]]]],0,[34,10],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[]],[[]],0,0,[[],4],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[14],[14],[14],[14],[14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[36,36],[1,1],[11,11],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[10,[36,18]]]],[[],[[10,[1,18]]]],[[],[[10,[11,18]]]],[[],[[10,[37,18]]]],[[],[[10,[38,18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[19,[[10,[18]]]],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[36],[1],[11],[37],[38],[[36,36],21],[[1,1],21],[[11,11],21],[[37,37],21],[[38,38],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[36,22],23],[[1,22],23],[[11,22],23],[[37,22],23],[[38,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[38,39],[[]],[[[24,[16]]],[[24,[15,16]]]],[[[24,[16]]],[[24,[15,16]]]],[[[24,[16]]],[[24,[15,16]]]],[[[24,[16]]],[[24,[15,16]]]],[[[24,[16]]],[[24,[15,16]]]],[25,[[25,[15]]]],[25,[[25,[15]]]],[25,[[25,[15]]]],[25,[[25,[15]]]],[25,[[25,[15]]]],[26,[[26,[15]]]],[26,[[26,[15]]]],[26,[[26,[15]]]],[26,[[26,[15]]]],[26,[[26,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,3],36],0,0,[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],[[],[[6,[8,16]]]],0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0],"p":[[4,"ChannelId"],[3,"H160"],[15,"u64"],[6,"DispatchResult"],[3,"Header"],[3,"Vec"],[3,"U256"],[15,"u8"],[15,"str"],[4,"Result"],[3,"Message"],[3,"Log"],[4,"DispatchError"],[3,"Private"],[8,"Any"],[3,"Global"],[3,"RemoteParachain"],[3,"Error"],[15,"u32"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Ordering"],[4,"Option"],[15,"u128"],[3,"TypeId"],[3,"Type"],[8,"Clone"],[3,"TokenInfo"],[3,"ERC721TokenData"],[8,"PartialEq"],[3,"MessageId"],[3,"Proof"],[4,"AuxiliaryDigestItem"],[4,"DigestItem"],[8,"MessageCommitment"],[8,"MessageDispatch"],[8,"Verifier"],[8,"OutboundRouter"],[8,"XcmReserveTransfer"],[8,"Nft"],[13,"Commitment"]]},\
"snowbridge_ethereum":{"doc":"","tn":["0","0","0","0","Address","Bloom","DecodeError","H160","H256","H64","Header","HeaderId","InvalidABI","InvalidPayload","InvalidRLP","Log","MAX","Receipt","U256","__clone_box","__clone_box","__clone_box","__clone_box","abs_diff","add","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bits","as_bits","as_bits","as_bits","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_bytes","as_bytes","as_bytes","as_bytes_mut","as_bytes_mut","as_bytes_mut","as_fixed_bytes","as_fixed_bytes","as_fixed_bytes","as_fixed_bytes_mut","as_fixed_bytes_mut","as_fixed_bytes_mut","as_mut","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","as_slice_of","as_u128","as_u32","as_u64","as_usize","assign_from_slice","assign_from_slice","assign_from_slice","bit","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","check_equal","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_sub","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","constant_size","constant_size","constant_size","covers","covers","covers","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","difficulty","div","div","div_assign","div_mod","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","ethashdata","ethashproof","exp10","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_big_endian","from_dec_str","from_ffi_value","from_ffi_value","from_inner","from_inner","from_little_endian","from_low_u64_be","from_low_u64_be","from_low_u64_be","from_low_u64_le","from_low_u64_le","from_low_u64_le","from_low_u64_ne","from_low_u64_ne","from_low_u64_ne","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice","from_slice","from_str","from_str","from_str","from_str","from_str_radix","from_uint","from_uint","full_mul","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","header","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","init","inner","inner","integer_sqrt","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_ffi_value","into_ffi_value","into_inner","into_inner","into_uint","into_uint","is_clear","is_clear","is_clear","is_clear","is_zero","is_zero","is_zero","is_zero","leading_zeros","len_bytes","len_bytes","len_bytes","log","low_u128","low_u32","low_u64","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","not","one","overflowing_add","overflowing_mul","overflowing_neg","overflowing_pow","overflowing_sub","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pow","pretty","pretty","pretty","random","random","random","random_using","random_using","random_using","randomize","randomize","randomize","randomize_using","randomize_using","randomize_using","receipt","rem","rem","rem_assign","repeat_byte","repeat_byte","repeat_byte","rlp_append","rlp_append","rlp_append","rlp_append","saturating_add","saturating_mul","saturating_sub","serialize","serialize","serialize","serialize","shl","shl","shl_assign","shr","shr","shr_assign","size_of","size_of","size_of","sub","sub","sub_assign","to_big_endian","to_fixed_bytes","to_fixed_bytes","to_fixed_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_little_endian","to_low_u64_be","to_low_u64_be","to_low_u64_be","to_low_u64_le","to_low_u64_le","to_low_u64_le","to_low_u64_ne","to_low_u64_ne","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trailing_zeros","try_as_bits","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","zero","zero","zero","zero","0","0","BombDelay","Byzantium","Constantinople","DifficultyConfig","London","MuirGlacier","__clone_box","as_any","as_any","as_any_mut","as_any_mut","bomb_delay","borrow","borrow","borrow_mut","borrow_mut","byzantium_fork_block","calc_difficulty","clone","clone_into","constantinople_fork_block","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","london_fork_block","mainnet","muir_glacier_fork_block","ropsten","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","DAGS_MERKLE_ROOTS","DAGS_START_EPOCH","DAGS_MERKLE_ROOTS","DAGS_START_EPOCH","DoubleNodeWithMerkleProof","EpochOutOfRange","Error","EthashCache","EthashProver","InvalidMerkleProof","UnexpectedNumberOfNodes","__clone_box","__clone_box","apply_merkle_proof","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","dag_nodes","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_values","get","hashimoto_light","hashimoto_merkle","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_clear","new","new","proof","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","with_generator","with_hashimoto_light","Bloom","Header","HeaderId","__clone_box","__clone_box","__clone_box","apply_merkle_proof","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","author","base_fee","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_receipt_proof","clear","clone","clone","clone","clone_into","clone_into","clone_into","compute_hash","compute_partial_hash","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","difficulty","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","extra_data","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","gas_limit","gas_used","has_ommers","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_clear","logs_bloom","mix_hash","nonce","number","number","ommers_hash","parent_hash","receipts_root","seal","serialize","serialize","state_root","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transactions_root","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","Log","__clone_box","address","as_any","as_any_mut","borrow","borrow_mut","clear","clone","clone_into","data","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","equivalent","fmt","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","is_clear","to_keyed_vec","to_owned","topics","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Receipt","__clone_box","as_any","as_any_mut","bloom","borrow","borrow_mut","clone","clone_into","contains_log","cumulative_gas_used","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","fmt","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","logs","post_state_or_status","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","vzip"],"q":["snowbridge_ethereum","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_ethereum::DecodeError","","snowbridge_ethereum::difficulty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_ethereum::ethashdata","","snowbridge_ethereum::ethashproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_ethereum::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_ethereum::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snowbridge_ethereum::receipt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Fixed-size uninterpreted hash type with 20 bytes (160 …","Fixed-size uninterpreted hash type with 32 bytes (256 …","","","","","","","","Maximum value.","","Little-endian large integer type 256-bit unsigned integer.","","","","","Computes the absolute difference between self and other.","","","","","","","","","","","","","","","","","","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a byte slice containing the entire fixed hash.","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a mutable byte slice containing the entire fixed …","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","","","","","","","","Returns a mutable raw pointer to the value.","Returns a mutable raw pointer to the value.","Returns a mutable raw pointer to the value.","","","","Returns a constant raw pointer to the value.","Returns a constant raw pointer to the value.","Returns a constant raw pointer to the value.","","","","","","","","Conversion to u128 with overflow checking","Conversion to u32 with overflow checking","Conversion to u64 with overflow checking","Conversion to usize with overflow checking","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Return if specific bit is set.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the least number of bits needed to represent the …","","","","","","","","","","","","","","","","","","","","","","","","Return specific byte.","","Checked addition. Returns <code>None</code> if overflow occurred.","Checked division. Returns <code>None</code> if <code>other == 0</code>.","Checked multiplication. Returns <code>None</code> if overflow occurred.","Checked negation. Returns <code>None</code> unless <code>self == 0</code>.","Checked exponentiation. Returns <code>None</code> if overflow occurred.","Checked modulus. Returns <code>None</code> if <code>other == 0</code>.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pair <code>(self / other, self % other)</code>.","","","","","","","","","","","","","","","","","","","","","","Create <code>10**n</code> as this type.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","Constructs a hash type from the given bytes array of fixed …","","Returns the argument unchanged.","","Constructs a hash type from the given reference to the …","","Constructs a hash type from the given reference to the …","Constructs a hash type from the given bytes array of fixed …","","Returns the argument unchanged.","Converts from big endian representation bytes in memory.","Convert from a decimal string.","","","","","Converts from little endian representation bytes in memory.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Create a new fixed-hash from the given slice <code>src</code>.","Create a new fixed-hash from the given slice <code>src</code>.","Create a new fixed-hash from the given slice <code>src</code>.","Creates a hash type instance from the given string.","","Creates a hash type instance from the given string.","Creates a hash type instance from the given string.","Converts a string slice in a given base to an integer. …","","","Multiplies two 256-bit integers to produce full 512-bit …","","","","","","","","","","","","","","","","","","","","","","","Compute the highest <code>n</code> such that <code>n * n &lt;= self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if no bits are set.","Whether this is zero.","Returns <code>true</code> if no bits are set.","Returns <code>true</code> if no bits are set.","Returns the number of leading zeros in the binary …","Returns the size of this hash in bytes.","Returns the size of this hash in bytes.","Returns the size of this hash in bytes.","","Low 2 words (u128)","Conversion to u32","Low word (u64)","","","","","The maximum value which can be inhabited by this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One (multiplicative identity) of this type.","Addition which overflows and returns a flag if it does.","Multiply with overflow, returning a flag if it does.","Negation with overflow.","Fast exponentiation by squaring. Returns result and …","Subtraction which underflows and returns a flag if it does.","","","","","Fast exponentiation by squaring …","","","","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Create a new hash with cryptographically random content …","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","Assign <code>self</code> to a cryptographically random value using the …","Assign <code>self</code> to a cryptographically random value using the …","","","","","Returns a new fixed hash where all bits are set to the …","Returns a new fixed hash where all bits are set to the …","Returns a new fixed hash where all bits are set to the …","","","","","Addition which saturates at the maximum value (Self::MAX).","Multiplication which saturates at the maximum value..","Subtraction which saturates at zero.","","","","","","","","","","","","","","","","","Write to the slice in big-endian format.","Returns the inner bytes array.","Returns the inner bytes array.","Returns the inner bytes array.","","","","","Write to the slice in little-endian format.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","Returns the lowest 8 bytes interpreted as native-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","","","Returns the number of trailing zeros in the binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new zero-initialized fixed hash.","Zero (additive identity) of this type.","Returns a new zero-initialized fixed hash.","Returns a new zero-initialized fixed hash.","","","","","","Describes when hard forks occurred that affect difficulty …","","","","","","","","","","","","","","This difficulty calculation follows Byzantium rules …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around ethash::make_cache with LRU caching. Use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For tests to override the cache data generator","","Logs bloom.","An Ethereum block header.","Complete block header id.","","","","","","","","","","","Block author.","","","","","","","","","","","","","","","","Compute hash of this header (keccak of the RLP with seal).","Compute hash of the truncated header i.e. excluding seal.","","","","","","","","","","","","","","","","","","","","","","","","","Block difficulty.","","","","","","","","","","","","Block extra data.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Block gas limit.","Gas used for contracts execution.","","Header hash.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Block bloom.","","","Header number.","Block number.","Block ommers hash.","Parent block hash.","Block receipts root.","Vector of post-RLP-encoded fields.","","","State root.","Block timestamp.","","","","","","","Transactions root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We need to implement rlp::Decodable manually as the derive …","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[5,2,6,7,0,0,0,0,0,0,0,0,23,23,23,0,2,0,0,5,2,6,7,2,2,2,2,5,23,2,6,7,5,23,2,6,7,5,2,6,7,5,2,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,2,6,7,5,6,7,2,2,2,2,5,6,7,2,5,5,2,6,6,7,7,5,5,6,6,7,7,5,5,2,6,6,7,7,5,5,6,6,7,7,2,5,5,2,6,6,7,7,5,5,6,6,7,7,5,23,2,6,7,5,23,2,6,7,2,7,2,2,2,2,2,2,2,5,2,6,7,5,2,6,7,5,2,6,7,5,2,6,7,2,6,7,5,6,7,5,5,2,2,6,6,7,7,5,2,6,7,5,2,6,7,5,2,6,7,5,2,6,7,5,23,2,6,7,5,23,2,6,7,5,2,6,7,0,2,2,2,2,5,23,2,6,7,5,6,7,5,6,7,5,2,6,7,5,2,6,7,0,0,2,5,5,5,5,23,2,2,2,2,6,6,6,6,7,7,7,7,5,5,5,5,23,23,23,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,6,6,6,6,7,7,7,7,7,7,7,2,2,6,7,6,7,2,5,6,7,5,6,7,5,6,7,5,23,2,6,7,5,23,2,6,7,5,6,7,5,2,6,7,2,5,7,2,5,2,6,7,5,2,6,7,0,5,6,7,5,6,7,5,23,2,6,7,6,7,2,5,23,2,6,7,5,23,2,6,7,5,23,2,6,7,5,23,2,6,7,6,7,6,7,5,7,5,2,6,7,5,2,6,7,2,5,6,7,0,2,2,2,5,2,6,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,6,7,2,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,0,2,2,2,5,6,7,5,2,6,7,2,2,2,5,2,6,7,2,2,2,2,2,2,2,6,7,2,2,2,2,5,6,7,5,2,6,7,2,5,6,7,5,6,7,5,6,7,5,2,6,7,5,2,6,7,2,5,2,6,7,5,6,7,5,23,2,2,2,6,7,5,23,2,6,7,5,23,2,6,7,5,2,6,7,5,23,2,6,7,5,23,2,6,7,5,2,6,7,5,23,2,6,7,5,2,6,7,70,71,0,58,58,0,58,58,57,58,57,58,57,57,58,57,58,57,57,0,57,57,57,57,57,57,57,58,57,58,57,58,57,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,57,57,57,57,57,57,58,57,58,57,58,57,57,58,57,58,57,58,57,0,0,0,0,0,62,0,0,0,62,62,60,62,60,63,64,60,62,63,64,60,62,63,64,60,62,63,64,60,62,60,60,62,60,62,60,60,60,60,60,60,63,64,60,62,63,64,60,62,63,64,60,62,60,60,62,60,62,60,62,63,64,60,62,63,64,60,62,63,64,60,62,60,63,64,64,63,64,60,62,63,64,60,62,63,64,60,62,63,64,60,62,63,64,60,62,60,63,64,60,60,60,62,63,64,60,62,63,64,60,62,63,64,60,62,60,63,64,60,62,63,64,60,62,63,64,60,62,63,64,0,0,0,66,59,67,59,66,59,67,66,59,67,59,59,66,59,67,66,59,67,59,66,66,59,67,66,59,67,59,59,66,59,67,67,66,59,67,66,59,67,66,59,67,66,59,67,66,59,67,66,59,67,59,67,59,66,59,67,67,66,59,67,66,59,67,66,59,66,59,67,66,59,67,67,66,59,67,66,59,67,59,59,59,66,66,59,67,66,59,67,66,59,67,66,59,67,66,59,67,66,59,59,59,66,59,59,59,59,59,59,67,59,59,66,59,67,66,59,67,59,66,59,67,66,59,67,66,59,67,66,59,67,66,59,67,66,59,67,67,66,59,67,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[2,2],2],[2,2],[2,2],[[2,2]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[5],[6],[7],[5],[6],[7],[5],[6],[7],[5],[6],[7],[5],[6],[7],[[],4],[[],4],[[],4],[[]],[[]],[[]],[5,8],[6,8],[7,8],[[],[[10,[9]]]],[[],[[10,[9]]]],[[],[[10,[9]]]],[5,8],[6,8],[7,8],[5],[2],[6],[7],[[],[[10,[9]]]],[[],[[10,[9]]]],[[],[[10,[9]]]],[2,11],[2,12],[2,13],[2,14],[5],[6],[7],[[2,14],15],[[5,5]],[[5,5]],[[2,2],2],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[[5,5]],[[5,5]],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[[5,5]],[[5,5]],[[2,2],2],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[[5,5]],[[5,5]],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[2,14],[[5,5]],[[5,5]],[[2,2],2],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[[5,5]],[[5,5]],[[6,6]],[[6,6]],[[7,7]],[[7,7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,14],8],[[7,7]],[[2,2],[[16,[2]]]],[[2,2],[[16,[2]]]],[[2,2],[[16,[2]]]],[2,[[16,[2]]]],[[2,2],[[16,[2]]]],[[2,2],[[16,[2]]]],[[2,2],[[16,[2]]]],[[]],[[]],[[]],[[]],[5,5],[2,2],[6,6],[7,7],[[]],[[]],[[]],[[]],[[5,5],17],[[2,2],17],[[6,6],17],[[7,7],17],[[],[[16,[14]]]],[[],[[16,[14]]]],[[],[[16,[14]]]],[[5,5],15],[[6,6],15],[[7,7],15],[[],[[10,[5,18]]]],[19,[[10,[5,20]]]],[19,[[10,[2,20]]]],[[],[[10,[2,18]]]],[19,[[10,[6,20]]]],[[],[[10,[6,18]]]],[19,[[10,[7,20]]]],[[],[[10,[7,18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[[],5],[[],2],[[],6],[[],7],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[10,[5]]]],[[],[[10,[2]]]],[[],[[10,[6]]]],[[],[[10,[7]]]],0,[2,2],[2,2],[2],[[2,2]],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],15],[[2,2],15],[[6,6],15],[[7,7],15],[[],15],[[],15],[[],15],[[],15],0,0,[14,2],[[5,21],[[10,[22]]]],[[5,21],[[10,[22]]]],[[5,21],[[10,[22]]]],[[5,21],[[10,[22]]]],[[23,21],24],[[2,21],[[10,[22]]]],[[2,21],[[10,[22]]]],[[2,21],[[10,[22]]]],[[2,21],[[10,[22]]]],[[6,21],[[10,[22]]]],[[6,21],[[10,[22]]]],[[6,21],[[10,[22]]]],[[6,21],[[10,[22]]]],[[7,21],[[10,[22]]]],[[7,21],[[10,[22]]]],[[7,21],[[10,[22]]]],[[7,21],[[10,[22]]]],[[]],[[],5],[[],5],[[],5],[20,23],[25,23],[[]],[26,2],[2,2],[27,2],[28,2],[12,2],[29,2],[30,2],[13,2],[14,2],[8,2],[11,2],[31,2],[32,2],[[]],[[],2],[33,2],[[],2],[[],2],[34,2],[[],6],[[],6],[[],6],[7,6],[[]],[35,7],[[],7],[6,7],[[],7],[[],7],[36,7],[[]],[[],2],[29,[[10,[2,37]]]],[38,[[10,[39]]]],[38,[[10,[39]]]],[[],6],[[],7],[[],2],[13,5],[13,6],[13,7],[13,5],[13,6],[13,7],[13,5],[13,6],[13,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],6],[[],7],[29,[[10,[5,40]]]],[29,[[10,[2]]]],[29,[[10,[6,40]]]],[29,[[10,[7,40]]]],[[29,12],[[10,[2,41]]]],[42,5],[2,7],[[2,2],43],[[],13],[[],13],[[],13],[[],13],[5],[2],[6],[7],0,[5],[6],[7],[5],[6],[7],[[],14],[[],14],[[],14],[[],14],[[],14],[6],[7],[2,2],[[]],[[]],[[]],[[]],[[]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[38,[[10,[39]]]],[38,[[10,[39]]]],[6],[7],[5,42],[7,2],[[],15],[[],15],[[],15],[[],15],[5,15],[2,15],[6,15],[7,15],[2,12],[[],14],[[],14],[[],14],0,[2,11],[2,12],[2,13],[[],14],[[],14],[[],14],[[],14],[[],2],[[2,2],2],[[2,2],2],[[2,28],2],[[2,27],2],[[2,8],2],[[2,27],2],[[2,33],2],[[2,13],2],[[2,13],2],[[2,31],2],[[2,31],2],[[2,2],2],[[2,27],2],[[2,28],2],[[2,31],2],[[2,13],2],[[2,8],2],[[2,12],2],[[2,32],2],[[2,32],2],[[2,14],2],[[2,34],2],[[2,33],2],[[2,14],2],[[2,33],2],[[2,12],2],[[2,27],2],[[2,12],2],[[2,28],2],[[2,2],2],[[2,12],2],[[2,8],2],[[2,34],2],[[2,34],2],[[2,31],2],[[2,28],2],[[2,33],2],[[2,8],2],[[2,14],2],[[2,32],2],[[2,32],2],[[2,13],2],[[2,14],2],[[2,34],2],[[2,14]],[[2,32]],[[2,28]],[[2,13]],[[2,33]],[[2,12]],[[2,27]],[[2,8]],[[2,34]],[[2,31]],[[2,2]],[2,2],[[],2],[[2,2]],[[2,2]],[2],[[2,2]],[[2,2]],[[5,5],[[16,[17]]]],[[2,2],[[16,[17]]]],[[6,6],[[16,[17]]]],[[7,7],[[16,[17]]]],[[2,2],2],[[],48],[[],48],[[],48],[[],5],[[],6],[[],7],[[],5],[[],6],[[],7],[5],[6],[7],[5],[6],[7],0,[2,2],[2,2],[2],[8,5],[8,6],[8,7],[[5,49]],[[2,49]],[[6,49]],[[7,49]],[[2,2],2],[[2,2],2],[[2,2],2],[5,10],[2,10],[6,10],[7,10],[2,2],[2,2],[2],[2,2],[2,2],[2],[[2,50],14],[[6,50],14],[[7,50],14],[2,2],[2,2],[[2,2]],[2],[5],[6],[7],[[],[[51,[8,44]]]],[[],[[51,[8,44]]]],[[],[[51,[8,44]]]],[[],[[51,[8,44]]]],[2],[5,13],[6,13],[7,13],[5,13],[6,13],[7,13],[5,13],[6,13],[7,13],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[2,12],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],[[10,[4,52]]]],[[],10],[[],10],[43,[[10,[2,53]]]],[43,[[10,[2,53]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],54],[[],54],[[],54],[[],54],[[],54],[[],[[56,[55]]]],[[],[[56,[55]]]],[[],[[56,[55]]]],[[],[[56,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5],[2],[6],[7],[[]],[[]],[[]],[[]],[[]],[[],5],[[],2],[[],6],[[],7],0,0,0,0,0,0,0,0,[1],[[],3],[[],3],[[],3],[[],3],[[57,13],[[16,[58]]]],[[]],[[]],[[]],[[]],0,[[57,13,59],[[10,[2,29]]]],[57,57],[[]],0,[[],[[10,[57,18]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[14],[14],[14],[14],[14],[14],[57],[[58,58],15],[[57,57],15],[[],15],[[],15],[[58,21],24],[[57,21],24],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],0,[[],57],0,[[],57],[[],[[51,[8,44]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],54],[[],54],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[60,13],[[10,[61,29]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[62,62],[[]],[[]],0,[[],[[10,[60,18]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[[],60],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[60],[[60,60],15],[[62,62],15],[[],15],[[],15],[[60,21],24],[[62,21],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[61]]],60],[[63,13,13],51],[[64,7,5,13]],[[64,7,5,13],[[10,[62]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[[],15],[14,63],[[],64],0,[[],[[51,[8,44]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],54],[[],54],[[],54],[[],54],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,63],[14,64],0,0,0,[1],[1],[1],[59,16],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[59,[[16,[[10,[65,20]]]]]],[[]],[66,66],[59,59],[67,67],[[]],[[]],[[]],[59,7],[59,7],[[],[[10,[66,18]]]],[[],[[10,[59,18]]]],[[],[[10,[67,18]]]],[19,[[10,[67,20]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[[],66],[[],59],[[],67],[14],[14],[14],[14],[14],[14],[[],[[10,[59]]]],[[],[[10,[67]]]],0,[14],[14],[14],[67,[[51,[8]]]],[66],[59],[67],[[66,66],15],[[59,59],15],[[67,67],15],[[],15],0,[[66,21],24],[[59,21],24],[[67,21],24],[[]],[[]],[[]],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[59,15],0,[[],14],[[],14],[[],14],[[]],[[]],[[]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[47,[[47,[3]]]],[[],15],0,[59,[[16,[7]]]],[59,[[16,[5]]]],0,0,0,0,0,0,[59,10],[67,10],0,0,[[],[[51,[8,44]]]],[[],[[51,[8,44]]]],[[],[[51,[8,44]]]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],54],[[],54],[[],54],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[67,68]],[[]],[[]],[[]],0,[1],0,[[],3],[[],3],[[]],[[]],[[]],[69,69],[[]],0,[[],[[10,[69,18]]]],[19,[[10,[69,20]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[[],69],[14],[14],[14],[69],[[69,69],15],[[],15],[[69,21],24],[[]],[[]],[[]],[[],14],[[]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],[[],15],[[],[[51,[8,44]]]],[[]],0,[[],10],[[],10],[[],54],[[],56],[[]],[[]],[[]],0,[1],[[],3],[[],3],0,[[]],[[]],[65,65],[[]],[[65,69],15],0,[[],[[10,[65,18]]]],[19,[[10,[65,20]]]],[[],[[10,[18]]]],[12,[[10,[18]]]],[12,[[10,[18]]]],[[],65],[14],[14],[14],[65],[[65,65],15],[[65,21],24],[[]],[[]],[[]],[[],14],[[]],[[[45,[44]]],[[45,[3,44]]]],[46,[[46,[3]]]],[47,[[47,[3]]]],0,0,[[],[[51,[8,44]]]],[[]],[[],10],[[],10],[[],54],[[],56],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"U256"],[8,"Any"],[3,"BitSlice"],[3,"H64"],[3,"H160"],[3,"H256"],[15,"u8"],[4,"Error"],[4,"Result"],[15,"u128"],[15,"u32"],[15,"u64"],[15,"usize"],[15,"bool"],[4,"Option"],[4,"Ordering"],[3,"Error"],[3,"Rlp"],[4,"DecoderError"],[3,"Formatter"],[3,"Error"],[4,"DecodeError"],[6,"Result"],[4,"Error"],[3,"U128"],[15,"i32"],[15,"i16"],[15,"str"],[15,"i128"],[15,"i64"],[15,"i8"],[15,"u16"],[15,"isize"],[3,"Public"],[3,"Public"],[4,"FromDecStrErr"],[8,"FunctionContext"],[3,"String"],[4,"FromHexError"],[3,"FromStrRadixErr"],[3,"U64"],[3,"U512"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"PrettySlice"],[3,"RlpStream"],[3,"MallocSizeOfOps"],[3,"Vec"],[4,"BitSpanError"],[4,"Error"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[3,"DifficultyConfig"],[4,"BombDelay"],[3,"Header"],[3,"DoubleNodeWithMerkleProof"],[3,"H128"],[4,"Error"],[3,"EthashCache"],[3,"EthashProver"],[3,"Receipt"],[3,"HeaderId"],[3,"Bloom"],[8,"FnOnce"],[3,"Log"],[13,"InvalidRLP"],[13,"InvalidABI"]]},\
"snowbridge_runtime_primitives":{"doc":"","t":[6,6,6,6,6,6,6,6,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AccountId","AccountIndex","Address","Balance","Block","BlockId","BlockNumber","DigestItem","Hash","Header","Index","Signature","UncheckedExtrinsic","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","fmt","from","from","from_bytes","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","is_clear","serialize","size_of","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":["snowbridge_runtime_primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Some way of identifying an account on the chain. We …","The type for looking up accounts. We don’t expect more …","The address format for describing accounts.","Balance of an account.","Opaque block","Opaque block id","An index to a block.","Digest item type.","A hash of some data used by the chain.","Opaque header","Index of a transaction in the chain.","Alias to 512-bit hash when used in the context of a …","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[[]],[3,3],[[]],[[],[[5,[3,4]]]],[[],[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[[],3],[7],[7],[[],[[5,[3]]]],[7],[3,[[10,[8,9]]]],[3],[[3,3],11],[[],11],[[3,12],[[5,[13]]]],[[]],[14,3],[[],[[5,[3,4]]]],[[]],[[]],[[],7],[[]],[[[15,[9]]],[[15,[2,9]]]],[16,[[16,[2]]]],[17,[[17,[2]]]],[[],11],[3,5],[[3,18],7],[[],[[10,[8,9]]]],[[]],[[],5],[[],5],[[],19],[[],[[21,[20]]]],[[]],[[]],[3],[[]]],"p":[[3,"Private"],[8,"Any"],[3,"UncheckedExtrinsic"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[15,"u8"],[3,"Global"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"UncheckedExtrinsic"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"MallocSizeOfOps"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"]]},\
"snowbridge_testutils":{"doc":"","t":[12,3,3,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["0","BlockWithProofs","Hex","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","elements","from","from","from_file","header_rlp","into","into","merkle_proofs","merkle_root","proof_length","to_double_node_with_merkle_proof_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["snowbridge_testutils","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The structs defined below are used to load Ethash merkle …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[1,0,0,4,1,4,1,1,1,1,4,4,1,4,4,4,1,4,4,4,4,1,4,1,4,1,4,1,4,1],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[],[[2,[1]]]],0,[[]],[[]],[3,4],0,[[]],[[]],0,0,0,[4,5],[[]],[[],2],[[],2],[[],2],[[],2],[[],6],[[],6],[[]],[[]]],"p":[[3,"Hex"],[4,"Result"],[3,"Path"],[3,"BlockWithProofs"],[3,"Vec"],[3,"TypeId"]]},\
"snowbridge_xcm_support":{"doc":"XCMP Support","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["XcmAssetTransferer","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","reserve_transfer","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["snowbridge_xcm_support","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[4,[3]]],[[4,[1,3]]]],[5,[[5,[1]]]],[6,[[6,[1]]]],[[]],[[]],[[7,7,8],9],[[],10],[[],10],[[],11],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u128"],[3,"RemoteParachain"],[6,"DispatchResult"],[4,"Result"],[3,"TypeId"],[3,"XcmAssetTransferer"]]},\
"t0rn_collator":{"doc":"Substrate Parachain Node Template CLI","t":[0,0,0,5,0,0,6,6,3,17,17,17,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,5,5,11,5,11,11,11,11,11,11,11,5,5,12,12,5,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,13,13,13,13,13,13,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,14,5,5,4,3,13,6,6,13,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11],"n":["chain_spec","cli","command","main","rpc","service","AccountPublic","ChainSpec","Extensions","PARACHAIN_ID","REVERT_BYTECODE","SAFE_XCM_VERSION","__clone_box","as_any","as_any_mut","bad_blocks","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","development_config","drop","eq","equivalent","fetch_gtwy_init_data","fetch_xdns_record_from_rpc","fmt","from","from_mut","from_mut","from_ref","from_ref","from_subset","get","get_account_id_from_adrs","get_account_id_from_seed","get_any","get_any","get_any_mut","get_any_mut","get_aura_id_from_adrs","get_collator_keys_from_seed","get_public_from_adrs","get_public_from_seed","init","initial_gateways","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_in_subset","is_relaychain","local_testnet_config","para_id","relay_chain","rococo_config","seed_xdns_registry","serialize","session_keys","standard_side_effects","testnet_genesis","to_owned","to_subset","to_subset_unchecked","try_from","try_get","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Benchmark","BuildSpec","CheckBlock","Cli","ExportBlocks","ExportGenesisState","ExportGenesisWasm","ExportState","ImportBlocks","Key","PurgeChain","RelayChainCli","Revert","Subcommand","TryRuntime","announce_block","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","author","base","base_path","base_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","copyright_start_year","copyright_start_year","default_heap_pages","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","description","disable_grandpa","drop","drop","drop","fmt","fmt","fmt","force_authoring","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","has_subcommand","impl_name","impl_name","impl_version","impl_version","import_params","init","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_app","into_app_for_update","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","keystore_params","load_spec","load_spec","max_runtime_instances","native_runtime_version","native_runtime_version","network_params","new","no_hardware_benchmarks","node_name","p2p_listen_port","prometheus_config","prometheus_listen_port","relay_chain_args","role","rpc_cors","rpc_http","rpc_http_listen_port","rpc_ipc","rpc_methods","rpc_ws","rpc_ws_listen_port","rpc_ws_max_connections","run","shared_params","state_cache_child_ratio","subcommand","support_url","support_url","telemetry_endpoints","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transaction_pool","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","construct_async_run","load_spec","run","DenyUnsafe","FullDeps","No","RpcExtension","SubscriptionTaskExecutor","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","pool","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","TemplateRuntimeExecutor","as_any","as_any_mut","borrow","borrow_mut","build_relay_chain_interface","deref","deref_mut","dispatch","drop","from","from_mut","from_mut","from_ref","from_ref","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_in_subset","native_version","new_partial","parachain_build_import_queue","start_node_impl","start_parachain_node","to_subset","to_subset_unchecked","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["t0rn_collator","","","","","","t0rn_collator::chain_spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t0rn_collator::clit0rn_collator::cli::Subcommand","","","","","","","","","","","","t0rn_collator::command","","","t0rn_collator::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t0rn_collator::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","","t3rn-pallets chain spec config – END Specialized …","The extensions for the <code>ChainSpec</code>.","","","The default XCM version to set in genesis config.","","","","Known bad block hashes.","","","","","","","","","","","","Fetches gateway initialization data by chain id.","Helper function that fetches metadata from live networks …","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Helper function to derive an account ID from a SS58 …","Helper function to generate an account ID from seed.","","","","","Derive an Aura id from a SS58 address.","Generate collator keys from seed.","Helper function to derive a public key from a SS58 address.","Helper function to generate a crypto pair from seed.","","Lists initialization data for indicated gateways.","Calls <code>U::from(self)</code>.","","","","","","","","","The id of the Parachain.","The relay chain of the Parachain.","","Helper function to generate XdnsRecords from RPC.","","Generate the session keys from individual elements.","","","","","","","Try to get the extension from the given <code>ChainSpec</code>.","","","","","","Sub-commands concerned with benchmarking. The pallet …","Build a chain specification.","Validate blocks.","","Export blocks.","Export the genesis state of the parachain.","Export the genesis wasm of the parachain.","Export the state of a given block into a chain spec.","Import blocks.","Key management CLI utilities","Remove the whole chain.","","Revert the chain to a previous state.","Sub-commands supported by the collator.","Try some testing command against a specified runtime state.","","","","","","","","","","","","","","The actual relay chain cli object.","","The base path that should be used by the relay chain.","","","","","","","","Optional chain id that should be passed to the relay chain.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse the relay chain CLI parameters using the para chain …","Disable automatic hardware benchmarks.","","","","","Relay chain arguments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse command line arguments into service configuration.","Signifies whether a potentially unsafe RPC should be …","Full client dependencies","Allows calling every RPCs.","A type representing all RPC extensions.","Task executor that is being used by RPC subscriptions.","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","","","Native executor instance.","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","Starts a <code>ServiceBuilder</code> for a full service.","Build the import queue for the parachain runtime.","Start a node with the given parachain <code>Configuration</code> and …","Start a parachain node.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,0,0,4,4,4,4,4,4,4,4,0,0,4,4,4,4,0,0,0,0,4,0,4,4,4,4,4,4,4,0,0,4,4,0,0,4,0,0,0,4,4,4,4,4,4,4,4,4,4,37,37,37,0,37,37,37,37,37,37,37,0,37,0,37,31,37,38,31,37,38,31,38,38,37,37,38,31,31,31,31,37,38,31,37,38,31,31,31,38,31,31,37,38,31,37,38,31,38,31,31,37,38,31,37,38,31,31,37,38,31,37,38,37,38,37,37,38,38,31,31,37,37,38,38,31,31,37,38,31,37,38,31,38,31,31,37,38,31,31,37,38,31,37,38,31,37,38,31,37,38,31,38,38,37,38,31,37,38,31,37,38,31,31,38,31,31,38,31,31,31,38,31,31,31,31,38,31,31,31,31,31,31,31,31,31,38,31,31,38,38,31,31,37,38,31,37,38,31,31,37,38,31,37,38,31,37,38,31,37,38,31,37,38,31,37,38,37,38,37,38,31,80,81,82,83,84,85,86,87,88,89,90,91,0,0,0,0,0,55,0,0,55,55,55,57,55,57,55,57,55,57,55,57,55,55,0,57,55,57,55,57,55,57,55,55,57,55,55,57,57,55,55,57,57,55,57,55,57,55,57,55,57,55,57,55,57,55,57,55,57,55,57,57,55,55,57,55,57,55,57,55,57,55,57,55,57,55,57,55,57,0,77,77,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,77,77,77,77,77,77,77,77],"f":[0,0,0,[[],1],0,0,0,0,0,0,0,0,[2],[[],3],[[],3],0,[[]],[[]],[4,4],[[]],[5],[5],[[],[[6,[4]]]],[[],[[8,[7,4]]]],[5],[[4,4],9],[[],9],[10,[[6,[[12,[11]],13]]]],[[14,10],[[6,[[16,[15]],13]]]],[[4,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[4,19],[14,15],[14,15],[[4,20],3],[20,3],[20,3],[[4,20],3],[14,21],[14,21],[14],[14],[[],5],[[[22,[10]]],[[6,[[22,[[12,[11]]]],13]]]],[[]],[[[24,[23]]],[[24,[3,23]]]],[25,[[25,[3]]]],[26,[[26,[3]]]],[[]],[[]],[[],9],[10,9],[[],[[8,[7,4]]]],0,0,[[],[[8,[7,4]]]],[[],[[6,[[22,[[16,[15]]]],13]]]],[4,6],[21,27],[[],[[22,[28]]]],[[22,[22,[15]],29,15,[22,[[16,[15]]]],[22,[28]],[22,[[12,[11]]]]],7],[[]],[[],19],[[]],[[],6],[30,[[19,[4]]]],[[],6],[[],20],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,[[1,[9]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[32,32],[32,32],[32,32],[32,32],[[],33],[[],33],0,[31,[[1,[[19,[34]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[31,9],[[1,[33]]]],0,[[],35],[[],35],[31,[[1,[[19,[36]]]]]],[5],[5],[5],[5],[5],[5],[[],33],[[],33],[31,[[1,[9]]]],[5],[5],[5],[[37,17],18],[[38,17],18],[[31,17],18],[31,[[1,[9]]]],[[]],[[]],[[]],[39,[[6,[37,40]]]],[39,[[6,[38,40]]]],[39,[[6,[37,40]]]],[39,[[6,[38,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,9],[[],33],[[],33],[[],33],[[],33],[31,[[19,[41]]]],[[],5],[[],5],[[],5],[[31,33,33,42],1],[[]],[[]],[[]],[[[24,[23]]],[[24,[3,23]]]],[[[24,[23]]],[[24,[3,23]]]],[[[24,[23]]],[[24,[3,23]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[31,[[19,[43]]]],[[38,14],[[6,[[24,[30]],33]]]],[[31,14],[[6,[[24,[30]],33]]]],[31,[[1,[[19,[5]]]]]],[24,44],[24,44],[31,[[19,[45]]]],[[42,46],31],0,[31,[[1,[33]]]],[[],47],[[31,47,24],[[1,[[19,[48]]]]]],[[],47],0,[[31,9],[[1,[49]]]],[[31,9],[[1,[[19,[[22,[33]]]]]]]],[[31,47],[[1,[[19,[50]]]]]],[[],47],[31,[[1,[[19,[33]]]]]],[31,[[1,[51]]]],[[31,47],[[1,[[19,[50]]]]]],[[],47],[31,[[1,[[19,[5]]]]]],0,[31,52],[31,[[1,[[19,[5]]]]]],0,[[],33],[[],33],[[31,24],[[1,[[19,[53]]]]]],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[31,9],[[1,[54]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[37,39],[[6,[40]]]],[[38,39],[[6,[40]]]],[[37,39],[[6,[40]]]],[[38,39],[[6,[40]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[14,[[6,[[24,[30]],33]]]],[[],1],0,0,0,0,0,0,[2],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[55,[[6,[56]]]],0,[55,55],[[]],[57,[[6,[58,[24,[59]]]]]],0,[5],[5],[5],[5],[5],[5],[[55,17],[[6,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[[24,[23]]],[[24,[3,23]]]],[[[24,[23]]],[[24,[3,23]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],0,[[]],[[],19],[[],19],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[]],[[]],[[42,42,[19,[61]],62,63,[19,[64]]],65],[5],[5],[14,[[19,[[22,[66]]]]]],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[]],[[[24,[23]]],[[24,[3,23]]]],[25,[[25,[3]]]],[26,[[26,[3]]]],[[]],[[]],[[],9],[[],67],[42,[[6,[[74,[[70,[68,69]],[71,[68]],[72,[68,[70,[68,69]]]],[73,[68,[70,[68,69]]]]]],75]]]],[[[25,[[70,[68,76,[69,[77]]]]]],42,[19,[78]],62],[[6,[[72,[68,[70,[68,76,[69,[77]]]]]],75]]]],[[42,42,63,29,[19,[64]]],79],[[42,42,63,29,[19,[64]]],79],[[],19],[[]],[[],6],[[],6],[[],20],[[]],[[]],[[]]],"p":[[6,"Result"],[3,"Private"],[8,"Any"],[3,"Extensions"],[15,"usize"],[4,"Result"],[3,"GenesisConfig"],[3,"ChainSpec"],[15,"bool"],[6,"ChainId"],[6,"Header"],[3,"InitializationData"],[3,"Error"],[15,"str"],[6,"AccountId"],[3,"XdnsRecord"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"TypeId"],[6,"AuthorityId"],[3,"Vec"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"SessionKeys"],[3,"SideEffectInterface"],[3,"Id"],[8,"ChainSpec"],[3,"RelayChainCli"],[6,"Command"],[3,"String"],[4,"BasePath"],[15,"i32"],[15,"u64"],[4,"Subcommand"],[3,"Cli"],[3,"ArgMatches"],[3,"Error"],[3,"ImportParams"],[3,"Configuration"],[3,"KeystoreParams"],[3,"RuntimeVersion"],[3,"NetworkParams"],[8,"Iterator"],[15,"u16"],[3,"PrometheusConfig"],[4,"Role"],[4,"SocketAddr"],[4,"RpcMethods"],[3,"SharedParams"],[3,"TelemetryEndpoints"],[3,"Options"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[3,"FullDeps"],[3,"RpcModule"],[8,"Error"],[3,"Error"],[3,"TelemetryWorkerHandle"],[3,"TaskManager"],[3,"CollatorOptions"],[3,"HwBench"],[6,"RelayChainResult"],[15,"u8"],[3,"NativeVersion"],[6,"Block"],[3,"NativeElseWasmExecutor"],[6,"TFullClient"],[6,"TFullBackend"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[4,"Error"],[3,"RuntimeApi"],[3,"TemplateRuntimeExecutor"],[3,"TelemetryHandle"],[6,"Result"],[13,"BuildSpec"],[13,"CheckBlock"],[13,"ExportBlocks"],[13,"ExportState"],[13,"ImportBlocks"],[13,"Revert"],[13,"PurgeChain"],[13,"ExportGenesisState"],[13,"ExportGenesisWasm"],[13,"TryRuntime"],[13,"Key"],[13,"Benchmark"]]},\
"t3rn_collator":{"doc":"Substrate Parachain Node Template CLI","t":[0,0,0,5,0,0,6,6,3,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,5,5,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,13,13,13,13,13,13,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,14,5,5,4,3,13,6,6,13,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11],"n":["chain_spec","cli","command","main","rpc","service","AccountPublic","ChainSpec","Extensions","ExtensionsFork","PARACHAIN_ID","REVERT_BYTECODE","SAFE_XCM_VERSION","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","combine_with","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","get","get","get_account_id_from_adrs","get_account_id_from_seed","get_any","get_any","get_any","get_any","get_any_mut","get_any_mut","get_any_mut","get_any_mut","get_aura_id_from_adrs","get_collator_keys_from_seed","get_public_from_adrs","get_public_from_seed","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","local_testnet_config","para_id","para_id","polkadot_config","polkadot_genesis","relay_chain","relay_chain","serialize","serialize","session_keys","to_base","to_fork","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_get","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Benchmark","BuildSpec","CheckBlock","Cli","ExportBlocks","ExportGenesisState","ExportGenesisWasm","ExportState","ImportBlocks","Key","PurgeChain","RelayChainCli","Revert","Subcommand","TryRuntime","announce_block","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","author","base","base_path","base_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","copyright_start_year","copyright_start_year","default_heap_pages","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","description","disable_grandpa","drop","drop","drop","fmt","fmt","fmt","force_authoring","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","has_subcommand","impl_name","impl_name","impl_version","impl_version","import_params","init","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_app","into_app_for_update","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","keystore_params","load_spec","load_spec","max_runtime_instances","native_runtime_version","native_runtime_version","network_params","new","no_hardware_benchmarks","node_name","p2p_listen_port","prometheus_config","prometheus_listen_port","relay_chain_args","role","rpc_cors","rpc_http","rpc_http_listen_port","rpc_ipc","rpc_methods","rpc_ws","rpc_ws_listen_port","rpc_ws_max_connections","run","shared_params","state_cache_child_ratio","subcommand","support_url","support_url","telemetry_endpoints","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transaction_pool","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","construct_async_run","load_spec","run","DenyUnsafe","FullDeps","No","RpcExtension","SubscriptionTaskExecutor","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","pool","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","TemplateRuntimeExecutor","as_any","as_any_mut","borrow","borrow_mut","build_relay_chain_interface","deref","deref_mut","dispatch","drop","from","from_mut","from_mut","from_ref","from_ref","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_in_subset","native_version","new_partial","parachain_build_import_queue","start_node_impl","start_parachain_node","to_subset","to_subset_unchecked","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["t3rn_collator","","","","","","t3rn_collator::chain_spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_collator::clit3rn_collator::cli::Subcommand","","","","","","","","","","","","t3rn_collator::command","","","t3rn_collator::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_collator::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","","Specialized <code>ChainSpec</code> for the normal parachain runtime.","The extensions for the <code>ChainSpec</code>.","","","","The default XCM version to set in genesis config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Helper function to derive an account ID from a SS58 …","Helper function to generate an account ID from seed.","","","","","","","","","Derive an Aura id from a SS58 address.","Generate collator keys from seed.","Helper function to derive a public key from a SS58 address.","Helper function to generate a crypto pair from seed.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The id of the Parachain.","","","","The relay chain of the Parachain.","","","Generate the session keys from individual elements.","","","","","","","","","","","Try to get the extension from the given <code>ChainSpec</code>.","","","","","","","","","","","Sub-commands concerned with benchmarking. The pallet …","Build a chain specification.","Validate blocks.","","Export blocks.","Export the genesis state of the parachain.","Export the genesis wasm of the parachain.","Export the state of a given block into a chain spec.","Import blocks.","Key management CLI utilities","Remove the whole chain.","","Revert the chain to a previous state.","Sub-commands supported by the collator.","Try some testing command against a specified runtime state.","","","","","","","","","","","","","","The actual relay chain cli object.","","The base path that should be used by the relay chain.","","","","","","","","Optional chain id that should be passed to the relay chain.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse the relay chain CLI parameters using the para chain …","Disable automatic hardware benchmarks.","","","","","Relay chain arguments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse command line arguments into service configuration.","Signifies whether a potentially unsafe RPC should be …","Full client dependencies","Allows calling every RPCs.","A type representing all RPC extensions.","Task executor that is being used by RPC subscriptions.","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","","","Native executor instance.","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","Starts a <code>ServiceBuilder</code> for a full service.","Build the import queue for the parachain runtime.","Start a node with the given parachain <code>Configuration</code> and …","Start a parachain node.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,4,5,4,5,4,5,4,5,4,5,5,4,5,4,5,4,4,5,5,4,4,5,5,4,5,4,5,0,0,4,4,5,5,4,4,5,5,0,0,0,0,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,0,4,5,0,0,4,5,4,5,0,4,5,4,5,4,5,4,5,4,5,5,4,5,4,5,4,5,4,5,4,5,32,32,32,0,32,32,32,32,32,32,32,0,32,0,32,26,32,33,26,32,33,26,33,33,32,32,33,26,26,26,26,32,33,26,32,33,26,26,26,33,26,26,32,33,26,32,33,26,33,26,26,32,33,26,32,33,26,26,32,33,26,32,33,32,33,32,32,33,33,26,26,32,32,33,33,26,26,32,33,26,32,33,26,33,26,26,32,33,26,26,32,33,26,32,33,26,32,33,26,32,33,26,33,33,32,33,26,32,33,26,32,33,26,26,33,26,26,33,26,26,26,33,26,26,26,26,33,26,26,26,26,26,26,26,26,26,33,26,26,33,33,26,26,32,33,26,32,33,26,26,32,33,26,32,33,26,32,33,26,32,33,26,32,33,26,32,33,32,33,32,33,26,75,76,77,78,79,80,81,82,83,84,85,86,0,0,0,0,0,50,0,0,50,50,50,52,50,52,50,52,50,52,50,52,50,50,0,52,50,52,50,52,50,52,50,50,52,50,50,52,52,50,50,52,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,52,50,50,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,0,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,72,72,72,72,72,72,72,72],"f":[0,0,0,[[],1],0,0,0,0,0,0,0,0,0,[2],[2],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[4,4],[5,5],[[]],[[]],[[4,4]],[6],[6],[6],[6],[[],[[7,[4]]]],[[],[[7,[5]]]],[6],[6],[[4,4],8],[[5,5],8],[[],8],[[4,9],10],[[5,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,11],[5,11],[12,13],[12,13],[14,3],[[4,14],3],[[5,14],3],[14,3],[[4,14],3],[14,3],[14,3],[[5,14],3],[12,15],[12,15],[12],[12],[[],6],[[],6],[[]],[[]],[[[17,[16]]],[[17,[3,16]]]],[[[17,[16]]],[[17,[3,16]]]],[18,[[18,[3]]]],[18,[[18,[3]]]],[19,[[19,[3]]]],[19,[[19,[3]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],[[21,[20,5]]]],0,0,[[],[[21,[20,5]]]],[[22,[22,[13]],23,13],20],0,0,[4,7],[5,7],[15,24],[4,11],[5],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],7],[[],7],[25,[[11,[5]]]],[[],7],[[],7],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,[[1,[8]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[27,27],[27,27],[27,27],[27,27],[[],28],[[],28],0,[26,[[1,[[11,[29]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[26,8],[[1,[28]]]],0,[[],30],[[],30],[26,[[1,[[11,[31]]]]]],[6],[6],[6],[6],[6],[6],[[],28],[[],28],[26,[[1,[8]]]],[6],[6],[6],[[32,9],10],[[33,9],10],[[26,9],10],[26,[[1,[8]]]],[[]],[[]],[[]],[34,[[7,[32,35]]]],[34,[[7,[33,35]]]],[34,[[7,[32,35]]]],[34,[[7,[33,35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,8],[[],28],[[],28],[[],28],[[],28],[26,[[11,[36]]]],[[],6],[[],6],[[],6],[[26,28,28,37],1],[[]],[[]],[[]],[[[17,[16]]],[[17,[3,16]]]],[[[17,[16]]],[[17,[3,16]]]],[[[17,[16]]],[[17,[3,16]]]],[18,[[18,[3]]]],[18,[[18,[3]]]],[18,[[18,[3]]]],[19,[[19,[3]]]],[19,[[19,[3]]]],[19,[[19,[3]]]],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[26,[[11,[38]]]],[[33,12],[[7,[[17,[25]],28]]]],[[26,12],[[7,[[17,[25]],28]]]],[26,[[1,[[11,[6]]]]]],[17,39],[17,39],[26,[[11,[40]]]],[[37,41],26],0,[26,[[1,[28]]]],[[],42],[[26,42,17],[[1,[[11,[43]]]]]],[[],42],0,[[26,8],[[1,[44]]]],[[26,8],[[1,[[11,[[22,[28]]]]]]]],[[26,42],[[1,[[11,[45]]]]]],[[],42],[26,[[1,[[11,[28]]]]]],[26,[[1,[46]]]],[[26,42],[[1,[[11,[45]]]]]],[[],42],[26,[[1,[[11,[6]]]]]],0,[26,47],[26,[[1,[[11,[6]]]]]],0,[[],28],[[],28],[[26,17],[[1,[[11,[48]]]]]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[26,8],[[1,[49]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[32,34],[[7,[35]]]],[[33,34],[[7,[35]]]],[[32,34],[[7,[35]]]],[[33,34],[[7,[35]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[12,[[7,[[17,[25]],28]]]],[[],1],0,0,0,0,0,0,[2],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[50,[[7,[51]]]],0,[50,50],[[]],[52,[[7,[53,[17,[54]]]]]],0,[6],[6],[6],[6],[6],[6],[[50,9],[[7,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[]],[[]],[[[17,[16]]],[[17,[3,16]]]],[[[17,[16]]],[[17,[3,16]]]],[18,[[18,[3]]]],[18,[[18,[3]]]],[19,[[19,[3]]]],[19,[[19,[3]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],0,[[]],[[],11],[[],11],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[]],[[]],[[37,37,[11,[56]],57,58,[11,[59]]],60],[6],[6],[12,[[11,[[22,[61]]]]]],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[]],[[[17,[16]]],[[17,[3,16]]]],[18,[[18,[3]]]],[19,[[19,[3]]]],[[]],[[]],[[],8],[[],62],[37,[[7,[[69,[[65,[63,64]],[66,[63]],[67,[63,[65,[63,64]]]],[68,[63,[65,[63,64]]]]]],70]]]],[[[18,[[65,[63,71,[64,[72]]]]]],37,[11,[73]],57],[[7,[[67,[63,[65,[63,71,[64,[72]]]]]],70]]]],[[37,37,58,23,[11,[59]]],74],[[37,37,58,23,[11,[59]]],74],[[],11],[[]],[[],7],[[],7],[[],14],[[]],[[]],[[]]],"p":[[6,"Result"],[3,"Private"],[8,"Any"],[3,"ExtensionsFork"],[3,"Extensions"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"str"],[6,"AccountId"],[3,"TypeId"],[6,"AuthorityId"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"GenesisConfig"],[3,"ChainSpec"],[3,"Vec"],[3,"Id"],[3,"SessionKeys"],[8,"ChainSpec"],[3,"RelayChainCli"],[6,"Command"],[3,"String"],[4,"BasePath"],[15,"i32"],[15,"u64"],[4,"Subcommand"],[3,"Cli"],[3,"ArgMatches"],[3,"Error"],[3,"ImportParams"],[3,"Configuration"],[3,"KeystoreParams"],[3,"RuntimeVersion"],[3,"NetworkParams"],[8,"Iterator"],[15,"u16"],[3,"PrometheusConfig"],[4,"Role"],[4,"SocketAddr"],[4,"RpcMethods"],[3,"SharedParams"],[3,"TelemetryEndpoints"],[3,"Options"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[3,"FullDeps"],[3,"RpcModule"],[8,"Error"],[3,"Error"],[3,"TelemetryWorkerHandle"],[3,"TaskManager"],[3,"CollatorOptions"],[3,"HwBench"],[6,"RelayChainResult"],[15,"u8"],[3,"NativeVersion"],[6,"Block"],[3,"NativeElseWasmExecutor"],[6,"TFullClient"],[6,"TFullBackend"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[4,"Error"],[3,"RuntimeApi"],[3,"TemplateRuntimeExecutor"],[3,"TelemetryHandle"],[6,"Result"],[13,"BuildSpec"],[13,"CheckBlock"],[13,"ExportBlocks"],[13,"ExportState"],[13,"ImportBlocks"],[13,"Revert"],[13,"PurgeChain"],[13,"ExportGenesisState"],[13,"ExportGenesisWasm"],[13,"TryRuntime"],[13,"Key"],[13,"Benchmark"]]},\
"t3rn_primitives":{"doc":"A crate that hosts a common definitions that are relevant …","tn":["AccountId","AccountPublic","Balance","Block","BlockNumber","Bytes","ChainId","CircuitInboundResult","CircuitOutboundMessage","Compose","ContractAccessError","Currency","DoesntExist","Error","EscrowTrait","Ethereum","Events","ExtraMessagePayload","Extrinsic","FetchContractsResult","GatewayExpectedOutput","GatewayGenesisConfig","GatewayInboundProtocol","GatewayPointer","GatewaySysProps","GatewayType","GatewayVendor","GenericAddress","GenericPrimitivesHeader","Hash","Header","IsTombstone","Kusama","Nonce","OnCircuit","Output","Polkadot","ProgrammableExternal","ProgrammableInternal","ProofTriePointer","ReadLatestGatewayHeight","Receipts","Rococo","RpcPayloadSigned","RpcPayloadUnsigned","State","Storage","Success","Time","Transaction","TxOnly","UncheckedExtrinsic","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abi","account_manager","arguments","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridges","bytes","call_bytes","circuit","circuit_portal","claimable","clear","clear","clear","clear","clear","clear","clock","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_txt","common","contract_metadata","contracts_registry","custom_payload","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dest","digest","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exec_type","executors","expected_output","extra","extra_payload","extrinsics_root","extrinsics_version","fetch_nonce","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_inbound_protocol","gateway_type","gateway_vendor","genesis_hash","id","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_data","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","match_format","method_name","method_name","method_name","method_name","module_name","module_name","modules_encoded","monetary","name","name","number","params","parent_hash","partial_cmp","portal","proof_type","protocol","result_format","retrieve_gateway_pointers","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","side_effect","signature","signature_caster","signed_extrinsic","signer","size_of","ss58_format","state_root","storage","target","threevm","to_jsonrpc_signed","to_jsonrpc_unsigned","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_decimals","token_symbol","transfers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_signed","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","value","vendor","volatile","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","xdns","xtx","block_height","key","output","signatures","value","0","0","0","0","encoded_height","Address","Blake2","Bool","Bytes","Contract","ContractActionDesc","Crypto","CryptoAlgo","DynamicAddress","DynamicBytes","Ecdsa","Ed25519","Enum","GatewayABIConfig","Hasher","HasherAlgo","Int","Keccak256","Mapping","Option","OptionalInsurance","OptionalReward","Parameter","Ref","Slice","Sr25519","StorageRef","String","Struct","StructDecl","Type","Uint","Value","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action_id","address_length","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_length","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_signature","crypto","decimals","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_buf2val","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval_abi","eval_to_encoded","eval_trait_dynamically","extract_property_names_from_signature_as_bytes","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_string","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signature_to_abi","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash_size","hasher","identity","identity","identity","identity","identity","identity","identity","indexed","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","name","name","no","offsets","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_of","structs","target_id","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_type_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","1","1","AccountManager","Commit","ExecutionId","Outcome","RequestCharge","Revert","Settlement","UnexpectedFailure","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump_contracts_registry_nonce","can_withdraw","charge_fee","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deposit","deposit_immediately","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","finalize","finalize_infallible","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_charge_or_fail","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","maybe_asset_id","no_charge_or_fail","offered_reward","on_collect_claimable","outcome","payee","recipient","recipient","requester","role","role","settlement_amount","source","source","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","withdraw_immediately","chain_circuit","header_chain","messages","polkadot_core","runtime","test_utils","ADDITIONAL_MESSAGE_BYTE_DELIVERY_WEIGHT","AVERAGE_ON_INITIALIZE_RATIO","AccountId","AccountIdConverter","AccountSigner","BEST_FINALIZED_CIRCUIT_HEADER_METHOD","Balance","BlockLength","BlockNumber","BlockWeights","Circuit","CircuitFinalityApi","DEFAULT_MESSAGE_DELIVERY_TX_WEIGHT","EXTRA_STORAGE_PROOF_SIZE","FROM_CIRCUIT_LATEST_CONFIRMED_NONCE_METHOD","FROM_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","FROM_CIRCUIT_UNREWARDED_RELAYERS_STATE","FromCircuitInboundLaneApi","Hash","Hasher","Header","Index","MAXIMAL_ENCODED_ACCOUNT_ID_SIZE","MAXIMUM_BLOCK_WEIGHT","MAX_SINGLE_MESSAGE_DELIVERY_CONFIRMATION_TX_WEIGHT","MAX_UNCONFIRMED_MESSAGES_AT_INBOUND_LANE","MAX_UNREWARDED_RELAYER_ENTRIES_AT_INBOUND_LANE","NORMAL_DISPATCH_RATIO","SESSION_LENGTH","Signature","TO_CIRCUIT_ESTIMATE_MESSAGE_FEE_METHOD","TO_CIRCUIT_LATEST_GENERATED_NONCE_METHOD","TO_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","TO_CIRCUIT_MESSAGES_DISPATCH_WEIGHT_METHOD","TX_EXTRA_BYTES","ToCircuitOutboundLaneApi","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_finalized","best_finalized_with_context","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_account_from_gateway_id","drop","drop","drop","drop","estimate_message_delivery_and_dispatch_fee","estimate_message_delivery_and_dispatch_fee_with_context","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_known_header","is_known_header_with_context","latest_confirmed_nonce","latest_confirmed_nonce_with_context","latest_generated_nonce","latest_generated_nonce_with_context","latest_received_nonce","latest_received_nonce","latest_received_nonce_with_context","latest_received_nonce_with_context","max_extrinsic_size","max_extrinsic_weight","messages_dispatch_weight","messages_dispatch_weight_with_context","time_units","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unrewarded_relayers_state","unrewarded_relayers_state_with_context","vzip","vzip","vzip","vzip","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","AuthoritySet","FinalityProof","HeaderChain","InclusionProofVerifier","InitializationData","Parameter","Transaction","TransactionInclusionProof","__clone_box","__clone_box","append_header","as_any","as_any","as_any_mut","as_any_mut","authorities","authority_list","authority_set","best_finalized","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","find_grandpa_authorities_scheduled_change","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gateway_id","header","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","is_halted","justification","max_encoded_len","new","serialize","serialize","set_id","set_id","target_header_number","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_transaction_inclusion_proof","vzip","vzip","AncestryChain","Error","ExtraHeadersInVotesAncestries","GrandpaJustification","InvalidAuthoritySignature","InvalidJustificationTarget","JustificationDecode","PrecommitIsNotCommitDescendant","TooLowCumulativeWeight","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_justification_target","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","ensure_descendant","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","parents","round","target_header_number","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unvisited","verify_justification","votes_ancestries","vzip","vzip","vzip","Halted","InboundLaneData","LaneId","Message","MessageData","MessageId","MessageKey","MessageNonce","MessagePayload","Normal","OperatingMode","OutboundLaneData","Parameter","RejectingOutboundMessages","UnrewardedRelayersState","Weight","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_size_hint","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","key","lane_id","last_confirmed_nonce","last_delivered_nonce","latest_generated_nonce","latest_received_nonce","messages_in_oldest_entry","nonce","oldest_unpruned_nonce","payload","relayers","save","serialize","source_chain","target_chain","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_messages","total_unrewarded_messages","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unrewarded_relayer_entries","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Error","Error","ForbidOutboundMessages","LaneMessageVerifier","MessageDeliveryAndDispatchPayment","MessagesDeliveryProof","RelayerRewards","RelayersRewards","Sender","TargetHeaderChain","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","messages","pay_delivery_and_dispatch_fee","pay_delivery_and_dispatch_fee","pay_relayers_rewards","pay_relayers_rewards","reward","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_message","verify_message","verify_message","verify_message","verify_messages_delivery_proof","verify_messages_delivery_proof","vzip","vzip","DispatchMessage","DispatchMessageData","DispatchPayload","Error","ForbidInboundMessages","MessageDispatch","MessagesProof","ProvedLaneMessages","ProvedMessages","SourceHeaderChain","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch","dispatch","dispatch_weight","dispatch_weight","drop","drop","drop","drop","encode_to","eq","equivalent","fee","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_clear","key","lane_state","messages","payload","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_messages_proof","verify_messages_proof","vzip","vzip","vzip","vzip","AVERAGE_ON_INITIALIZE_RATIO","AccountId","AccountIdConverter","AccountPublic","AdditionalSigned","Balance","Block","BlockLength","BlockNumber","BlockWeights","Convert","EXTRA_STORAGE_PROOF_SIZE","Hash","Hasher","Hashing","Header","Index","MAXIMAL_ENCODED_ACCOUNT_ID_SIZE","MAXIMUM_BLOCK_WEIGHT","MAX_MESSAGES_IN_DELIVERY_TRANSACTION","MAX_UNCONFIRMED_MESSAGES_AT_INBOUND_LANE","MAX_UNREWARDED_RELAYER_ENTRIES_AT_INBOUND_LANE","Nonce","Parameter","Rococo","Signature","SignedBlock","SignedExtensions","SignedExtra","__clone_box","account_info_storage_key","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert","convert","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","max_extrinsic_size","max_extrinsic_weight","new","time_units","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","DAYS","HOURS","MILLISECS_PER_BLOCK","MINUTES","SLOT_DURATION","0","ACCOUNT_DERIVATION_PREFIX","Account","BASILISK_CHAIN_ID","BlockNumber","BlockNumberOf","CALL_DISPATCH_MODULE_PREFIX","CATALYST_CHAIN_ID","CIRCUIT_BRIDGE_INSTANCE","CIRCUIT_CHAIN_ID","Chain","ChainId","DALI_CHAIN_ID","DOLPHIN_CHAIN_ID","GATEWAY_BRIDGE_INSTANCE","GATEWAY_CHAIN_ID","GENSHIRO_CHAIN_ID","Hash","HashOf","Hasher","HasherOf","Header","HeaderOf","KUSAMA_CHAIN_ID","MILLAU_CHAIN_ID","NO_INSTANCE_ID","PANGOLIN_CHAIN_ID","POLKADOT_CHAIN_ID","PreComputedSize","RIALTO_CHAIN_ID","ROCFINITY_CHAIN_ID","ROCOCO_CHAIN_ID","ROCOCO_ENCOINTER_CHAIN_ID","ROOT_ACCOUNT_DERIVATION_PREFIX","Root","SNOWBLINK_CHAIN_ID","SOONSOCIAL_CHAIN_ID","Size","SourceAccount","StorageProofChecker","StorageProofError","StorageRootMismatch","StorageValueUnavailable","WOCOCO_CHAIN_ID","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","craft_valid_storage_proof","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_account_id","derive_relayer_fund_account_id","drop","drop","drop","drop","eq","equivalent","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","new","read_value","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","0","0","ALICE","Account","BOB","CHARLIE","DAVE","EVE","FERDIE","JustificationGeneratorParams","TEST_GRANDPA_ROUND","TEST_GRANDPA_SET_ID","__clone_box","__clone_box","accounts","as_any","as_any","as_any_mut","as_any_mut","authorities","authorities","authority_list","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","forks","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","header","header_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","make_default_justification","make_justification_for_header","pair","public","round","secret","set_id","sign","signed_precommit","test_header","test_header_with_correct_parent","test_keyring","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","voter_set","votes","vzip","vzip","LocalStateExecutionView","LocalTrigger","OnLocalTrigger","XExecSignalId","XExecStepSideEffectId","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contract","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hardened_side_effects","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","load_local_state","local_state","maybe_xtx_id","new","new","on_local_trigger","on_signal","steps_cnt","submitted_side_effects","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","xtx_id","CircuitPortal","EthVerifier","confirm_event_inclusion","read_cmp_latest_target_height","Ambassador","Attester","BenefitSource","BootstrapPool","CircuitRole","ClaimableArtifacts","Collator","ContractAuthor","Executor","Inflation","Local","Relayer","Requester","Staker","TrafficFees","TrafficRewards","Unsettled","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","beneficiary","benefit_source","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","partial_cmp","role","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","total_round_claim","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","Clock","ClockMock","as_any","as_any_mut","borrow","borrow_mut","current_round","current_round","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","0","BLOCKS_PER_DAY","BLOCKS_PER_HOUR","BLOCKS_PER_YEAR","DEFAULT_ROUND_TERM","OrderedSet","Range","RoundIndex","RoundInfo","SECONDS_PER_BLOCK","SECONDS_PER_HOUR","SECONDS_PER_YEAR","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contains","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sorted_set","head","ideal","identity","identity","identity","index","init","init","init","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_valid","max","max_encoded_len","max_encoded_len","min","new","new","partial_cmp","remove","serialize","serialize","should_update","term","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","using_encoded","vzip","vzip","vzip","AssemblyScript","Compiler","ContractMetadata","ContractType","Ink","Language","RustC","Solang","Solidity","Source","SourceCompiler","SourceLanguage","System","VanillaEvm","VanillaWasm","VolatileEvm","VolatileWasm","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_generate_side_effects","can_instantiate","can_remunerate","clear","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_contract_type","has_storage","identity","identity","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","new","new","new","new","serialize","serialize","serialize","system_contract","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_type","AuthorInfo","ContractsRegistry","Error","KindValidator","RegistryContract","RegistryContractId","__clone_box","__clone_box","abi","account","action_descriptions","as_any","as_any","as_any_mut","as_any_mut","author","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","bytes","can_generate_side_effects","can_instantiate","can_remunerate","clear","clear","clone","clone","clone_into","clone_into","code_txt","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fees_per_single_use","fetch_contract_by_id","fetch_contracts","fmt","fmt","from","from","from_compose","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","generate_id","has_storage","identity","identity","info","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","meta","new","new","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Active","Active","Bond","CancelledScheduledStakingRequest","CandidateBondLessRequest","CapacityStatus","Decrease","Decrease","EXECUTOR_LOCK_ID","Empty","ExecutorInfo","ExecutorSnapshot","ExecutorStatus","Executors","ExecutorsMock","Fixtures","Full","Idle","Increase","Leaving","NominatedStake","Partial","Revoke","STAKER_LOCK_ID","ScheduledConfigurationRequest","ScheduledStakingRequest","StakeAdjust","StakerAdded","StakerStatus","StakingAction","ToBottom","ToTop","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action","action","active_set","active_set","active_set_size","amount","amount","amount","are_valid","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","bond","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_bond_less_delay","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","collateral_bond","collateral_bond","commission","commission","configure_executor_delay","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_owner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","increase_bond","increase_bond","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","leave_candidates_delay","leave_stakers_delay","max_bottom_stakes_per_candidate","max_commission","max_risk","max_stakes_per_staker","max_top_stakes_per_candidate","min_atomic_stake","min_candidate_bond","min_executor_bond","min_total_stake","nominated_stake","owner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","recalculate_executors_stakes","recalculate_executors_stakes","reserve_bond","reserve_bond","revoke_stake_delay","risk","risk","serialize","slash_bond","slash_bond","staker","staker","stakes","stakes","stakes","stakes_per_executor","stakes_per_executor","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","total_nominated_stake","total_nominated_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unreserve_bond","unreserve_bond","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when_executable","when_executable","when_executable","when_executable","0","0","new_total","0","0","GatewayInboundProtocol","call","call_escrow","call_static","custom_call_dirty","custom_call_escrow","custom_call_static","get_storage","set_storage","swap_dirty","swap_escrow","transfer","transfer_escrow","StrLike","ensure_str_err","match_dfd","match_signature","trim_whitespace","BeneficiaryRole","DECIMALS","Developer","Executor","InflationAllocation","MILLIT3RN","TRN","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","developer","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","executor","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","is_valid","max_encoded_len","max_encoded_len","serialize","serialize","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ErrorMsg","Portal","RegistrationData","RococoBridge","__clone_box","allowed_side_effects","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","confirm_and_decode_payload_params","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encoded_registration_data","eq","equivalent","extrinsic","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gateway_abi","gateway_genesis","gateway_id","gateway_id","gateway_sys_props","gateway_type","gateway_vendor","get_latest_finalized_header","get_latest_finalized_height","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","msg","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","url","vzip","vzip","SideEffectProtocol","get_arguments_2_state_mapper","get_arguments_abi","get_confirming_events","get_escrowed_events","get_id","get_name","get_reversible_commit","get_reversible_revert","populate_state","validate_args","ADD_LIQUIDITY_SIDE_EFFECT_ID","ASSETS_TRANSFER_SIDE_EFFECT_ID","CALL_SIDE_EFFECT_ID","COMPOSABLE_CALL_SIDE_EFFECT_ID","ConfirmationOutcome","ConfirmedSideEffect","DATA_SIDE_EFFECT_ID","EVM_CALL_SIDE_EFFECT_ID","Error","Escrow","EventSignature","FullSideEffect","HardenedSideEffect","HardeningMissingConfirmationError","MisbehaviourMalformedValues","ORML_TRANSFER_SIDE_EFFECT_ID","Optimistic","SFXBid","SWAP_SIDE_EFFECT_ID","SecurityLvl","SideEffect","SideEffectId","SideEffectName","Success","TRANSFER_SIDE_EFFECT_ID","TargetId","TimedOut","WASM_CALL_SIDE_EFFECT_ID","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_bid","bid","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","confirmation_outcome","confirmed","confirmed_cost","confirmed_executioner","confirmed_received_at","cost","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_action","encoded_action","encoded_args","encoded_args","encoded_args_abi","enforce_executor","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","executioner","executor","expect_reserved_bond","expect_sfx_bid","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_id","generate_id","get_bond_value","get_insurance","get_reserved_bond","id_as_bytes","identity","identity","identity","identity","identity","identity","identity","inclusion_data","index","index","init","init","init","init","init","init","init","init","input","insurance","insurance","interface","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_bid_resolved","is_clear","is_clear","is_clear","is_clear","is_successfully_confirmed","max_reward","new_none_optimistic","output","parser","partial_cmp","prize","received_at","requester","reserved_bond","reward_asset_id","reward_asset_id","security_lvl","security_lvl","signature","submission_target_height","target","target","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","key","received","SideEffectInterface","__clone_box","argument_abi","argument_to_state_mapper","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","commit_events","confirm_events","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","escrowed_events","fmt","from","from_mut","from_mut","from_ref","from_ref","generate_id","get_arguments_2_state_mapper","get_arguments_abi","get_confirming_events","get_escrowed_events","get_id","get_name","get_reversible_commit","get_reversible_revert","id","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","name","revert_events","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Arguments","Source","VendorSideEffectsParser","parse_event","HasXDNSAccess","Local","RawSideEffectHeader","Remote","SIDE_EFFECT_HEADER_SIZE","SIDE_EFFECT_NAME_SIZE","SIDE_EFFECT_TYPE_SIZE","Signature","Surrounding","TARGET_ID_SIZE","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_abi","get_my_target_id","get_surrounding","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","read_raw_side_effect_header","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_next_arg","validate_next_args","vzip","vzip","AliveContractInfo","CodeHash","RawAliveContractInfo","TrieId","__clone_box","_reserved","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","child_trie_info","clear","clone","clone_into","code_hash","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deduct_block","default","deref","deref_mut","drop","encode_to","eq","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","last_write","pair_count","rent_allowance","rent_paid","storage_size","to_keyed_vec","to_owned","trie_id","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Bounced","Characteristic","CharacteristicValidator","GetState","GetState","GetState","Initiated","Instantiate","LocalStateAccess","ModuleOperations","Precompile","PrecompileArgs","PrecompileInvocation","Remunerated","Remuneration","Remuneration","Signal","Signal","SignalOpcode","Storage","Submit","SubmitSideEffects","ThreeVm","Volatile","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","equivalent","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_registry","get_author","get_bytecode","get_state","get_type","identity","identity","identity","init","init","init","init","init","init","instantiate_check","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invoke","invoke_raw","load_local_state","lookup","new","peek_registry","remunerable_check","remuneration_id","set_author","set_type","storage_check","to_keyed_vec","to_keyed_vec","to_keyed_vec","try_finalize","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_persist_author","try_remove_author","try_remunerate","try_remunerate_exact","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validate","volatile_check","vzip","vzip","vzip","vzip","vzip","vzip","xtx_id","0","0","0","1","1","1","0","BalanceOf","EscrowedBalanceOf","EscrowedCurrencyOf","TransferEntry","__clone_box","account_encode_to_h256","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","commit_deferred_transfers","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","equivalent","escrow_transfer","fmt","from","from_mut","from_mut","from_ref","from_ref","h256_to_account","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","just_transfer","to","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","unchecked_into","unique_saturated_into","value","vzip","FROM_2XX_32B_HASH","LocalState","State","TO_2XX_32B_HASH","VALUE_2XX_32B_HASH","Volatile","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode","encode_to","eq","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","get","get_state","get_state","get_state_mut","get_state_mut","hash","identity","init","insert","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","key_2_state_key","new","state","stick_key_with_prefix","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","value_2_state_value","vzip","AllowedSideEffect","FetchXdnsRecordsResponse","Parachain","Xdns","XdnsGatewayId","XdnsRecord","XdnsRecordId","__clone_box","__clone_box","__clone_box","add_new_xdns_record","allowed_side_effects","allowed_side_effects","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assign_registrant","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fetch_records","fetch_side_effect_interface","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_abi","gateway_genesis","gateway_id","gateway_sys_props","gateway_type","gateway_vendor","generate_id","get_abi","get_gateway_para_id","get_gateway_security_coordinates","get_gateway_type_unsafe","get_gateway_value_unsigned_type_unsafe","get_gateway_vendor","id","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","last_finalized","new","new_from_primitives","parachain","registrant","relay_chain_id","security_coordinates","serialize","serialize","serialize","set_last_finalized","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_gateway_ttl","url","using_encoded","vzip","vzip","vzip","xdns_records","LocalState","Volatile","Xtx","XtxId","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","complete_side_effect","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","delay_steps_at","deref","deref_mut","drop","encode_to","eq","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","full_side_effects","generate_xtx_id","identity","init","initial_input","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","is_completed","local_state","new","requester","result_status","timeouts_at","to_keyed_vec","to_owned","total_reward","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip"],"q":["t3rn_primitivest3rn_primitives::GatewayExpectedOutput","","","","","t3rn_primitives::GatewayType","","","","t3rn_primitives::ReadLatestGatewayHeight","t3rn_primitives::abit3rn_primitives::abi::Type","","","","","","","","","","","","","","t3rn_primitives::account_managert3rn_primitives::bridges","","","","","","t3rn_primitives::bridges::chain_circuit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::chain_circuit::time_units","","","","","t3rn_primitives::bridges::header_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::header_chain::justification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::messagest3rn_primitives::bridges::messages::source_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::messages::target_chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::polkadot_coret3rn_primitives::bridges::polkadot_core::time_units","","","","","t3rn_primitives::bridges::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::bridges::runtime::SourceAccount","t3rn_primitives::bridges::test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::circuit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::circuit_portal","","","","t3rn_primitives::claimable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::clock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::commont3rn_primitives::contract_metadatat3rn_primitives::contracts_registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::executorst3rn_primitives::executors::ExecutorStatus","t3rn_primitives::executors::StakeAdjust","t3rn_primitives::executors::StakerAdded","t3rn_primitives::executors::StakingAction","","t3rn_primitives::gateway_inbound_protocol","","","","","","","","","","","","","t3rn_primitives::match_format","","","","","t3rn_primitives::monetary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::portal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::protocol","","","","","","","","","","","t3rn_primitives::side_effectt3rn_primitives::side_effect::ConfirmationOutcome","","","t3rn_primitives::side_effect::interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::side_effect::parser","","","","t3rn_primitives::signature_caster","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::threevmt3rn_primitives::threevm::PrecompileArgs","","","","","","t3rn_primitives::threevm::PrecompileInvocation","t3rn_primitives::transfers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::volatile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","t3rn_primitives::xdnst3rn_primitives::xtx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Alias to the public key used for this chain, actually a …","Balance of an account.","","Common types across all runtimes","","","Inbound Steps that specifie expected data deposited by …","Outbound Step that specifies expected transmission medium …","A struct that encodes RPC parameters required for a call …","The possible errors that can happen querying the storage …","","The given address doesn’t point to a contract.","","","","Expect events as a result of that call - will be described …","Outbound Step that specifies expected transmission medium …","Yet another event or Storage output","A result type of a get storage call.","Inbound Steps that specifie expected data deposited by …","","","","Represents assorted gateway system properties.","","","","Structure used at gateway registration as a starting point …","A hash of some data used by the chain.","","The specified contract is a tombstone and thus cannot have …","","Index of a transaction in the chain. 32-bit should be …","","Yet another event or Storage output. If expecting output u …","","","","Inclusion proofs of different tries","Read latest height of gateway known to a light client","Proof is a merkle path in the receipts trie (in Substrate …","","","","Proof is a merkle path in the state trie","Effect would be the modified storage key","","","Proof is a merkle path in the transaction trie (extrisics …","","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","","","Array of next arguments: encoded bytes of arguments that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded call bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom message bytes, that would have to be decoded by the …xpected results","Encoded extras to that transctions, like versions and gas …","Extra payload in case the message is signed or uses custom …","","Extrinsics version","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","type of gateway chain this message is intended for","Genesis hash - block id of the genesis block use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method name","","","Encoded utf-8 string of method name that implements …","Module/pallet name","Encoded utf-8 string of module name that implements …","SCALE-encoded modules following the format of selected …","","","Message name/identifier","","","","","","","","","Retrieves all available gateways for a given ChainId. …","Encoded sender’s public key","","","","","","","","","","","","","","","","","","","Encoded tx signature","","","","","","","","Encoded target’s public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a chain id to its system properties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded and signed transaction ready to send","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally expect dispatch of extrinsic only at the …","","","","","","","","","","","","","where u8 is bytes length","","","","","","","","","","Describe ABI configuration for a gateway so that it’s …","","","","","","","","","","","DynamicBytes and String are lowered to a vector.","","","","","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","There is no way to declare value in Solidity (should there …","","","","","","","","","address length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","","","","","Checks that the encoded argument has the same length as …","","","","","","","","","","","","","","","","","cryptography algorithm","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval assumes encoded_val is bytes Vector encoded with SCALE","eval assumes encoded_val is bytes Vector encoded with SCALE","","","","list of fields, each of them will have corresponding no.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","hash size in bytes","hashing algorithm","","","","","","","","is indexed - follows the ethereum logs pattern where …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name can empty (e.g. in an event field or unnamed …","encoded name of the struct","number in order","List of offsets of the fields, last entry is the offset …","","","","","","","","Calculate how much memory we expect this type to use when …","value length in bytes. ToDo: move as part of metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ABI type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","General round information consisting ofindex (one-based), …","","","","","","","","","","","","","","","","","","","","","","","","","","Bump contracts registry nonce in Account Manager nonce …","","","","","","","","","","","","","","","","","","","","","Send funds to a recipient via the escrow","","","","","","","","","","","","","","","","","","","","Finalize a transaction, with an optional reason for …","Assert infallible finalize of a transaction if exists","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Lookup charge by Id and fail if not found","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Lookup charge by Id and fail if not found","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines traits which represent a common interface for …","Primitives of messages module.","","Primitives that may be used at (bridges) runtime level.","Utilities for testing runtime code.","Increase of delivery transaction weight on Circuit chain …","Represents the average portion of a block’s weight that …","Some way of identifying an account on the chain. We …","Convert a 256-bit hash into an AccountId.","Public key of the chain account that may be used to verify …","Name of the <code>CircuitFinalityApi::best_finalized</code> runtime …","Balance of an account.","","Block number type used in Circuit.","We allow for 2 seconds of compute with a 6 second average …","Circuit chain.","API for querying information about the finalized Circuit …","Weight of single regular message delivery transaction on …","Number of extra bytes (excluding size of storage value …","Name of the …","Name of the …","Name of the …","Inbound message lane API for messages sent by Circuit …","Hash type used in Circuit.","The type of an object that can produce hashes on Circuit.","The header type used by Circuit.","Index of a transaction in the chain.","Maximal size (in bytes) of encoded (using <code>Encode::encode()</code>…","Maximum weight of single Circuit block.","Maximal weight of single message delivery confirmation …","Maximal number of unconfirmed messages at inbound lane.","Maximal number of unrewarded relayer entries at inbound …","Represents the portion of a block that will be used by …","The target length of a session (how often authorities …","Alias to 512-bit hash when used in the context of a …","Name of the …","Name of the …","Name of the <code>ToCircuitOutboundLaneApi::latest_received_nonce</code>…","Name of the …","Number of bytes, included in the signed Circuit …","Outbound message lane API for messages that are sent to …","","","","","","","","","Returns number and hash of the best finalized header known …","Returns number and hash of the best finalized header known …","","","","","","","","","","","","","","","","","","We use this to get the account on Circuit (target) which …","","","","","Estimate message delivery and dispatch fee that needs to …","Estimate message delivery and dispatch fee that needs to …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns true if the header is known to the runtime.","Returns true if the header is known to the runtime.","Nonce of latest message that has been confirmed to the …","Nonce of latest message that has been confirmed to the …","Returns nonce of the latest message, generated by given …","Returns nonce of the latest message, generated by given …","Returns nonce of the latest message, received by bridged …","Returns nonce of the latest message, received by given …","Returns nonce of the latest message, received by bridged …","Returns nonce of the latest message, received by given …","Get the maximum length in bytes that a Normal extrinsic on …","Get the maximum weight (compute time) that a Normal …","Returns total dispatch weight and encoded payload size of …","Returns total dispatch weight and encoded payload size of …","Human readable time units defined in terms of number of …","","","","","","","","","","","","","","","","","","","","","State of the unrewarded relayers set at given lane.","State of the unrewarded relayers set at given lane.","","","","","","","","","","A GRANDPA Authority List and ID.","Abstract finality proof that is justifying block finality.","A trait for pallets which want to keep track of finalized …","base trait for verifying transaction inclusion proofs.","Data required for initializing the bridge pallet.","A type that can be used as a parameter in a dispatchable …","Transaction type.","Transaction inclusion proof type.","","","Write a header finalized by GRANDPA to the underlying …","","","","","List of GRANDPA authorities for the current round.","The initial authorities of the pallet.","Get the best authority set known to the header chain.","Get the best finalized header known to the header chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find header digest that schedules next GRANDPA authorities …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","4-byte gateway identifier.","The header from which we should start syncing.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Should the pallet block transaction immediately after …","Pallet for checking GRANDPA Finality Proofs.","","Create a new GRANDPA Authority Set.","","","Monotonic identifier of the current GRANDPA authority set.","The ID of the initial authority set.","Return number of header that this proof is generated for.","","","","","","","","","","","","","","","","","","","","","","","Verify that transaction is a part of given block.","","","Votes ancestries with useful methods.","Justification verification error.","The justification contains extra (unused) headers in its …","A GRANDPA Justification is a proof that a given header was …","The authority has provided an invalid signature.","Justification is finalizing unexpected header.","Failed to decode justification.","The justification contains precommit for header that is …","The cumulative weight of all votes in the justification is …","","","","","","","","","","","","","","","","","","","The set of votes for the chain which is to be finalized.","","","","Decode justification target.","","","","","","","","","","","","Returns <code>Err(_)</code> if <code>precommit_target</code> is a descendant of the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Create new ancestry chain.","Header hash =&gt; parent header hash mapping.","The round (voting period) this justification is valid for.","","","","","","","","","","","","","","","","","","","","","","","Hashes of headers that weren’t visited by <code>is_ancestor</code> …","Verify that justification, that is generated by given …","A proof that the chain of blocks in the commit are related …","","","","The pallet is halted. All operations (except operating …","Inbound lane data.","Lane identifier.","Message as it is stored in the storage.","Message data as it is stored in the storage.","Message id as a tuple.","Message key (unique message identifier) as it is stored in …","Message nonce. Valid messages will never have 0 nonce.","Opaque message payload. We only decode this payload when …","Normal mode, when all operations are allowed.","Messages pallet operating mode.","Outbound lane data.","Messages pallet parameter.","The pallet is not accepting outbound messages. Inbound …","Gist of <code>InboundLaneData::relayers</code> field used by runtime …","Numeric range of a transaction weight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns approximate size of the struct, given number of …","","","","","","","","","","","","","","","Message delivery and dispatch fee, paid by the submitter.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message key.","ID of the message lane.","Nonce of the last message that a) has been delivered to …","Nonce of the last message that has been delivered to this …","Nonce of latest message, generated by us.","Nonce of latest message, received by bridged chain.","Number of messages in the oldest entry of …","Message nonce.","Nonce of oldest message that we haven’t yet pruned. May …","Message payload.","Identifiers of relayers and messages that they have …","Save parameter value in the runtime storage.","","Primitives of messages module, that are used on the source …","Primitives of messages module, that are used on the target …","","","","","","","","","","","","","","","Total number of messages in the relayers vector.","Returns total number of messages in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of entries in the <code>InboundLaneData::relayers</code> set.","","","","","","","","Error type.","Error type.","Error type.","Structure that may be used in place of <code>TargetHeaderChain</code>, …","Lane message verifier.","Message delivery payment. It is called as a part of …","Proof that messages have been received by target chain.","Single relayer rewards.","Relayers rewards, grouped by relayer account id.","The sender of the message on the source chain.","Target chain API. Used by source chain to verify target …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Perform some initialization in externalities-provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Total number of messages relayed by this relayer.","Withhold/write-off delivery_and_dispatch_fee from …","","Pay rewards for delivering messages to the given relayers.","","Total rewards that are to be paid to the relayer.","","","","","","","","","","","Verify message payload before we accept it.","Verify message payload and return Ok(()) if message is …","","","Verify messages delivery proof and return lane &amp;&amp; nonce of …","","","","Message with decoded dispatch payload.","Message data with decoded dispatch payload.","Decoded message payload type. Valid message may contain …","Error type.","Structure that may be used in place of <code>SourceHeaderChain</code> …","Called when inbound message is received.","Proof that messages are sent from source chain. This may …","Proved messages from single lane of the source chain.","Proved messages from the source chain.","Source chain API. Used by target chain, to verify source …","","","","","","","","","","","","","","","","","","","","","","","","Message data with decoded dispatch payload.","","","","","","","","","","","","","","Called when inbound message is received.","","Estimate dispatch weight.","","","","","","","","","Message delivery and dispatch fee, paid by the submitter.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Message key.","Optional outbound lane state.","Messages sent through this lane.","Result of dispatch payload decoding.","","","","","","","","","","","","","","","","","","","","","","","","","","Verify messages proof and return proved messages.","","","","","","All Polkadot-like chains assume that an on-initialize …","Id of account on Polkadot-like chains.","Convert a 256-bit hash into an AccountId.","Public key of account on Polkadot-like chains.","Parameters which are part of the payload used to produce …","The balance of an account on Polkadot-like chain.","Block type of Polkadot-like chains.","All Polkadot-like chains have maximal block size set to …","Block number type used in Polkadot-like chains.","All Polkadot-like chains have the same block weights.","Extensible conversion trait. Generic over both source and …","Number of extra bytes (excluding size of storage value …","Hash type used in Polkadot-like chains.","The type of an object that can produce hashes on …","Hashing type.","The header type used by Polkadot-like chains.","Account Index (a.k.a. nonce).","Maximal size (in bytes) of encoded (using <code>Encode::encode()</code>…","All Polkadot-like chains allow 2 seconds of compute with a …","Maximal number of messages in single delivery transaction.","Maximal number of unconfirmed messages at inbound lane.","Maximal number of unrewarded relayer entries at inbound …","Index of a transaction on the Polkadot-like chains.","A type that can be used as a parameter in a dispatchable …","Polkadot-like chain.","Signature type used by Polkadot-like chains.","Polkadot-like block signed with a Justification.","A simplified version of signed extensions meant for …","A type of the data encoded as part of the transaction.","","Return a storage key for account data.","","","","","","","","","","","","","","","","","","","","","","","","","","Make conversion.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Get the maximum length in bytes that a Normal extrinsic on …","Get the maximum weight (compute time) that a Normal …","","Human readable time units defined in terms of number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A unique prefix for entropy when generating cross-chain …","A non-priviledged account.","Basilisk","A type that fulfills the abstract idea of what a Substrate …","Block number used by the chain.","Call-dispatch module prefix.","Catalyst","Bridge-with-Millau instance id.","Bridge-with-Wococo instance id.","Minimal Substrate-based chain representation that may be …","Unique identifier of the chain.","Dali","Dolphin","Bridge-with-Rialto instance id.","Bridge-with-Rococo instance id.","Genshiro","A type that fulfills the abstract idea of what a Substrate …","Hash type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Hasher type used by the chain.","A type that fulfills the abstract idea of what a Substrate …","Header type used by the chain.","Bridge-with-Kusama instance id.","Bridge-with-Millau instance id.","Use this when something must be shared among all instances.","Pangolin","Bridge-with-Polkadot instance id.","Pre-computed size.","Bridge-with-Rialto instance id.","Rocfinity","Bridge-with-Rococo instance id.","Encointer","A unique prefix for entropy when generating a cross-chain …","An account that belongs to Root (priviledged origin).","Snowbridge","SoonSocial","Anything that has size.","Type of accounts on the source chain.","This struct is used to read storage values from a subset …","","","","Bridge-with-Wococo instance id.","","","","","","","","","","","","","","","","","Return valid storage proof and state root.","","","","","","","","","Derive an account ID from a foreign account ID.","Derive the account ID of the shared relayer fund account.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Constructs a new storage proof checker.","Reads a value from the available subset of storage. If the …","Return approximate size of this object (in bytes).","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of test accounts with friendly names.","A test account which can be used to sign messages.","","","","","","Configuration parameters when generating test GRANDPA …","","","","","Get a list of “unique” accounts.","","","","","Convenience function to get a list of Grandpa authority …","The current GRANDPA authority set.","Convenience function to get a list of Grandpa authorities.","","","","","","","","","","","","","","","","","The number of forks.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","The header which we want to finalize.","Convenience function for generating a Header ID at a given …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Make a valid GRANDPA justification with sensible defaults","Generate justifications in a way where we are able to tune …","","","The GRANDPA round number for the current authority set.","","The current authority set ID.","","Create signed precommit with given target.","Get a header for testing.","Get a header for testing, with correct parent_hash","Get the corresponding identities from the keyring for the …","","","","","","","","","","","","","Get a valid set of voters for a Grandpa round.","The total number of vote ancestries in our justification.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of the contract which generated the side effects","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Side effects generated from the contract call","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An ordered set backed by <code>Vec</code>.","A range consisting of min, ideal, and max.","Round identifier (one-based).","General round information consisting ofindex (one-based), …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the set","","","","","","","","","Return if the set contains <code>value</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a set from a <code>Vec</code>. <code>v</code> will be sorted and dedup first.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Create a set from a <code>Vec</code>. Assume <code>v</code> is sorted and contain …","The first block of the current round.","","","","","Current round index.","","","","Insert an element. Return true if insertion happened.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Create a new empty set","","Remove an element. Return true if removal happened.","","","Check if the round should be updated","The length of the current round in number of blocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","New round","","","","","","Compilers used to compile a smart contract.","Metadata about a smart contract.","Type of the contract.","","The language in which the smart contract is written.","","","","","A compiler used to compile a smart contract.","The language and version in which a smart contract is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new InkProjectSource.","Constructs a new SourceLanguage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A preliminary representation of a contract in the onchain …","","","","Optional ABI","Original code author","Action descriptions (calls for now)","","","","","Optional information for an author","","","","","","","","","","","Bytecode","","","","","","","","","","Original code text","","","","","","","","","","","","","","","","","","","","","","","Optional remuneration fee for the author","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Contracts Info after Contracts Pallet","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contract metadata to be used in queries","","","","","","","","","","","","","","","","","","","","","","","","","","","Active with no scheduled exit","Committed to be online and producing valid blocks (not …","Generic type describing either an executor’s self-bond …","Represents a cancelled scheduled request for emitting an …","Request scheduled to change the executor candidate’s …","Capacity status for top or bottom stakes.","","","","Empty aka contains no stakes","Executor configuration information.","Snapshot of collator state at the start of the round for …","The activity status of the executor","","","Protocol enforced thresholds and delays for staking.","Reached capacity","Temporarily inactive and excused for inactivity","","Bonded until the inner round","","Partially full (nonempty and not full)","","","Represents a scheduled request for an executor …","Represents a scheduled request that define a StakingAction…","Staker’s bond adjustment - used with locks.","Convey relevant information describing if a delegator was …","The activity status of the staker.","An action that can be performed upon a stake","","","","","","","","","","","","","","","","","","","","","Returns the wrapped amount value.","","","Asserts that all included fixtures are greater than zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total value locked by the collatoreturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The rewardable stakes. This list is a subset of total …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total counted value locked for the collator, including …all smart contract behind that gateway in a dirty way - …","Call smart contract behind that gateway in a reversible …","Call smart contract behind that gateway in a static way - …","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Call custom dispatchable call behind that gateway in a …","Get storage on foreign chain under given key. Returns …","Set storage on foreign chain of given key pointing to new …","Swap X tokens to Y different tokens on a chain behind that …","Swap X tokens to Y different tokens on a chain behind that …","Transfer balance on a chain behind that gateway in a …","Transfer balance on a chain behind that gateway in a dirty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expected confirmation to FSX wasn’t there while …","","","","All Executors from the active set can bid for SFX …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bid amount - always below SFX::max_fee requested by a user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bidding Executor belonging to the active set","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Insurance in case of optimistic FSX","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executor - subject of SFX","Optional reserved bond in case of optimistic FSX","","Optional reserved asset id in case execution on foreign …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","ToDo: Protocol::Reversible x-t3rn#69 - !Inspect if from is …","","","This event must be emitted by Escrow Contracts","","","","ToDo: Protocol::Reversible x-t3rn#69 - If executors wants …","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information for managing an account and its sub trie …","","","This field is reserved for future evolution of format.","","","","","","","","Associated child trie unique id is built from the hash …","","","","The code associated with a given account.","","","","","Last block rent has been paid.","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","Last block child storage has been written.","The total number of key-value pairs in storage of this …","Pay rent at most up to this value.","The amount of rent that was paid by the contract over its …","The total number of bytes used by this contract.","","","Unique ID for the subtree encoded as a bytes vector.","","","","","","","","","","","","","Passthrough to validator","","","","","","","","","","The happy return type of an invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Allows creating a <code>Module</code> from a binary blob from the …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoke a precompile","Invoke a precompile, providing raw bytes and a pointer","","Looks up a precompile function pointer","","","","","","","","","","","Try to finalize a ledger item with an reason","","","","","","","","","","","","","","","Try to remunerate the fees from the given module","Try to remunerate the fees from the given module with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The object with XdnsRecords as returned by the RPC endpoint","","","A hash based on encoding the Gateway ID","A preliminary representation of a xdns_record in the …","A hash based on encoding the complete XdnsRecord","","","","","","Methods enabled to be called on the remote target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches all known XDNS records","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Gateway Id","Gateway System Properties","Gateway Type","Gateway Vendor","Function that generates an XdnsRecordId hash based on the …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Leave empty if there’s no escrow capabilities on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SCALE-encoded url string on where given Consensus System …","","","","","","","","A composable cross-chain (X) transaction that has already …","","","","","","","","","","","","","","","","","","","Schedule execution of steps in the future intervals","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Vector of Steps that each can consist out of at least one …","","","","Encoded content of composable tx","Calls <code>U::from(self)</code>.","","","","","","","","Local Xtx State","","The owner of the bid","Has returned status already and what","Expiry timeout","","","Total reward","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,205,15,14,0,7,22,0,22,0,0,0,0,0,0,0,0,0,0,0,0,15,7,0,6,22,7,6,6,0,0,19,7,0,0,19,22,14,205,19,6,0,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,0,0,16,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,0,13,23,0,0,0,6,7,10,11,13,21,0,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,13,0,0,0,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,10,11,13,21,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,13,8,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,21,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,13,0,16,23,16,8,10,6,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,21,22,23,21,6,6,7,7,8,8,9,9,10,10,11,11,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,6,6,7,7,8,8,9,9,10,10,11,11,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,0,9,16,10,9,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,13,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,10,11,13,21,0,16,17,18,23,16,23,10,0,13,16,8,17,8,6,0,20,0,20,0,16,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,0,23,0,18,23,21,11,8,0,16,0,16,16,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,11,11,0,6,7,8,9,10,11,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,9,10,11,13,16,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,21,13,9,0,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,0,0,216,217,218,219,217,220,221,222,223,224,47,49,47,47,47,0,47,0,47,47,50,50,47,0,47,0,47,49,47,47,47,47,0,47,47,50,47,47,47,0,0,47,47,47,49,50,48,51,52,53,51,48,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,48,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,48,47,49,50,48,51,52,53,47,49,50,48,51,52,53,0,48,48,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,0,47,49,50,48,51,52,53,48,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,47,0,0,0,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,0,47,47,49,49,50,50,48,48,51,51,52,52,53,53,47,47,49,49,50,50,48,48,51,51,52,52,53,53,0,47,49,50,48,51,52,53,47,49,50,48,51,52,53,48,48,47,49,50,48,51,52,53,52,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,48,52,53,52,53,47,49,50,48,51,52,53,47,48,51,51,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,47,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,52,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,47,49,50,48,51,52,53,48,47,49,50,48,51,52,53,225,226,227,228,229,230,231,232,233,234,235,236,231,235,0,59,0,0,0,59,0,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,237,237,58,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,237,237,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,237,237,57,58,59,57,58,59,57,57,58,58,59,59,57,57,58,58,59,59,237,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,58,237,58,237,57,58,57,58,57,57,58,57,57,58,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,237,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,238,72,239,240,238,72,239,240,241,241,238,72,239,240,238,72,239,240,238,238,72,239,240,238,72,239,240,0,238,72,239,240,242,242,72,238,72,239,240,238,238,72,72,239,239,240,240,238,238,72,72,239,239,240,240,239,239,239,240,240,240,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,241,241,243,243,242,242,242,243,242,243,0,0,242,242,0,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,238,72,239,240,243,243,238,72,239,240,0,0,0,0,0,0,0,0,0,0,0,244,244,80,82,245,80,82,80,82,80,82,245,245,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,0,80,82,80,82,80,80,82,82,80,80,82,82,82,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,82,0,80,80,80,82,80,82,246,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,80,82,244,80,82,0,0,87,0,87,87,87,87,87,86,86,87,88,86,87,88,86,86,86,86,87,88,86,87,88,86,86,86,86,86,86,0,86,86,87,88,86,87,88,86,87,88,86,88,86,87,86,87,86,87,88,86,87,88,86,86,87,87,88,88,86,86,87,87,88,88,86,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,88,88,86,86,86,86,86,87,88,86,87,88,86,86,86,86,87,88,86,86,87,88,86,87,88,88,0,86,86,87,88,90,0,0,0,0,0,0,0,0,90,0,0,0,90,0,0,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,93,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,90,91,92,93,94,79,95,90,91,92,93,94,79,95,94,90,91,92,93,94,79,95,90,91,92,93,94,79,95,92,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,90,91,91,92,92,93,93,94,94,79,79,95,95,90,90,91,91,92,92,93,93,94,94,79,79,95,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,94,79,95,93,91,94,94,95,95,79,91,95,92,94,247,90,0,0,90,91,92,93,94,79,95,90,91,92,93,94,79,95,79,0,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,90,91,92,93,94,79,95,79,90,91,92,93,94,79,95,248,249,250,0,0,0,248,0,0,0,0,251,97,251,97,251,97,251,97,97,251,97,251,97,251,97,97,251,97,251,251,97,97,251,251,97,97,251,97,250,251,97,251,97,251,97,251,97,251,97,251,97,97,250,251,250,251,97,251,97,251,97,251,97,251,97,251,97,248,249,251,251,248,251,251,97,0,0,252,253,0,0,253,0,0,0,100,254,100,102,101,254,100,102,101,100,100,100,254,100,102,101,254,100,102,101,100,100,100,101,100,100,100,100,100,254,100,102,101,254,100,102,101,252,254,252,254,254,100,102,101,100,100,100,102,100,102,101,254,100,102,102,101,101,254,254,100,100,102,102,101,101,254,254,100,100,102,102,101,101,100,254,100,102,101,254,100,102,101,254,100,102,101,254,100,102,101,254,100,102,101,254,100,102,101,254,100,102,101,100,101,100,100,102,100,100,254,100,102,101,254,100,102,101,100,100,100,254,100,102,101,254,100,102,101,254,100,102,101,253,254,254,100,102,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,0,255,256,257,106,107,255,256,257,106,107,106,106,106,255,256,257,106,107,255,256,257,106,107,106,106,258,255,106,106,106,106,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,106,106,106,107,255,256,257,106,107,255,255,256,256,257,257,106,106,107,107,255,255,256,256,257,257,106,106,107,107,256,256,256,257,257,257,106,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,255,256,257,106,107,0,0,106,0,106,106,255,256,257,106,107,255,256,257,106,107,106,106,106,255,256,257,106,107,106,255,256,257,106,107,255,256,257,106,107,106,255,256,257,106,107,0,0,0,0,0,118,0,70,0,259,0,0,0,0,0,0,0,0,0,0,0,0,259,0,259,0,259,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,115,115,0,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,0,117,70,118,115,117,70,118,115,0,0,117,70,118,115,115,115,115,117,70,118,115,117,117,70,70,118,118,115,115,117,117,70,70,118,118,115,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,117,260,118,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,117,70,118,115,261,120,0,0,0,0,0,0,0,0,0,0,120,122,0,120,122,120,122,0,122,0,120,122,120,122,120,122,120,122,122,120,122,120,122,120,122,120,122,120,122,120,120,122,122,120,120,122,122,122,0,120,122,120,122,120,122,120,122,120,122,120,122,120,122,0,0,120,120,122,120,122,120,0,0,0,0,120,122,120,122,120,122,120,122,120,122,120,122,0,122,120,122,0,0,0,0,0,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,130,131,131,130,130,131,131,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,262,131,130,130,131,262,262,131,130,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,131,0,263,263,263,61,61,0,60,0,0,61,61,61,60,61,61,61,61,60,60,60,61,60,64,61,60,64,61,60,64,64,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,61,60,60,64,64,61,61,60,60,64,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,64,61,60,64,61,60,64,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,61,60,64,0,0,264,264,264,264,265,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,137,0,0,0,0,0,0,0,0,0,0,0,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,137,138,63,137,138,63,137,138,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,137,138,63,137,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,137,137,138,138,63,63,137,137,138,138,63,63,137,137,137,63,138,138,63,137,63,138,63,137,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,138,138,63,138,63,137,138,137,138,137,63,63,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,138,63,137,63,137,138,63,137,149,0,0,0,149,0,146,146,149,0,0,0,144,144,144,144,144,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,144,145,144,145,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,144,144,144,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,146,147,148,149,150,146,144,145,144,145,144,145,144,145,147,148,148,149,149,150,150,146,146,144,145,147,148,149,150,146,144,145,147,147,148,148,149,149,150,150,146,146,144,144,145,145,147,147,148,148,149,149,150,150,146,146,144,144,145,145,145,144,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,144,145,147,148,150,145,148,150,146,145,144,145,144,145,148,149,150,146,147,148,149,150,146,144,145,147,148,149,150,146,144,145,144,145,144,145,144,145,147,148,149,150,146,144,145,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,147,148,149,150,146,144,145,145,0,0,266,0,0,0,152,153,153,152,153,152,153,152,153,153,152,153,152,153,152,153,152,153,152,153,153,267,267,267,152,153,152,153,152,153,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,266,266,152,153,152,153,153,152,152,153,153,152,152,153,153,153,267,152,153,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,164,165,0,0,0,0,161,158,0,166,0,0,0,0,0,0,166,165,161,165,0,166,158,0,0,0,0,0,0,0,162,162,161,162,163,164,165,166,167,158,168,169,170,171,160,168,169,268,269,160,158,163,167,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,173,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,160,163,165,160,161,162,163,164,165,166,167,158,168,169,170,171,160,161,162,163,164,165,166,167,158,168,169,170,171,160,163,158,168,171,160,268,269,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,173,163,165,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,161,162,173,163,164,165,166,167,158,168,169,170,171,160,163,164,165,158,168,169,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,169,170,171,160,269,269,172,172,161,161,162,162,173,173,163,163,164,164,165,165,166,166,167,167,158,158,168,168,169,169,170,170,171,171,160,160,163,269,269,172,172,161,161,162,162,173,173,163,163,164,164,165,165,166,166,167,167,158,158,168,168,169,169,170,170,171,171,160,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,268,269,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,163,165,160,160,160,160,160,160,160,160,160,160,160,160,172,163,163,158,168,171,160,268,269,268,269,160,170,171,160,268,269,172,168,268,269,173,268,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,161,162,163,164,165,166,167,158,168,169,170,171,160,173,268,269,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,268,269,269,172,161,162,173,163,164,165,166,167,158,168,169,170,171,160,167,168,169,171,270,271,272,273,274,0,275,275,275,275,275,275,275,275,275,275,275,275,0,0,0,0,0,0,0,178,178,0,0,0,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,179,178,179,178,179,178,179,178,179,178,179,178,179,179,178,179,178,179,178,179,179,178,179,178,179,178,179,178,179,179,178,179,178,179,178,178,179,179,178,178,179,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,179,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,0,0,0,0,180,180,276,180,276,180,180,180,180,276,180,276,180,180,180,277,180,180,180,180,276,180,276,180,276,180,180,180,180,180,276,180,276,180,276,276,180,180,276,276,180,180,180,180,276,180,180,180,180,277,277,180,276,180,276,180,276,180,276,180,276,180,276,180,276,180,276,180,180,276,180,276,180,180,180,180,276,180,180,276,180,276,180,180,276,180,0,209,209,209,209,209,209,209,209,209,209,0,0,0,0,0,0,0,0,0,187,0,0,0,190,185,0,187,0,0,0,0,0,0,185,0,0,185,0,184,134,185,186,187,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,134,185,187,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,187,134,188,134,134,134,186,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,134,185,187,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,188,189,184,134,184,134,134,184,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,186,186,189,189,188,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,184,134,134,185,185,186,186,187,187,190,190,188,188,189,189,184,184,134,134,185,185,186,186,187,187,190,190,188,188,189,189,184,188,188,189,189,184,184,134,185,186,187,188,189,186,134,188,184,134,185,186,187,190,188,189,188,184,189,0,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,188,134,185,187,189,188,184,189,186,0,187,134,186,189,189,184,189,134,188,184,188,184,134,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,184,134,185,186,187,190,188,189,278,278,278,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,0,0,279,0,194,0,194,0,0,0,0,0,0,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,193,194,194,193,193,194,194,280,280,280,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,0,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,0,0,193,194,0,0,0,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,199,0,0,0,201,198,199,203,0,0,0,0,0,0,0,203,201,198,0,203,201,198,0,203,201,200,203,197,198,199,201,200,203,197,198,199,197,198,199,197,198,199,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,200,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,197,197,198,199,199,199,199,201,200,203,197,198,199,201,201,200,200,203,203,197,197,198,198,199,199,201,201,200,200,203,203,197,197,198,198,199,199,281,282,282,201,282,197,198,199,201,200,203,197,198,199,281,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,283,283,284,283,200,281,281,200,282,282,281,197,198,199,285,201,200,203,197,198,199,201,200,203,197,198,199,281,281,285,285,197,198,199,197,198,199,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,201,200,203,197,198,199,197,286,281,201,200,203,197,198,199,197,287,288,289,287,288,289,290,0,0,0,0,204,0,204,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,204,204,204,204,0,0,0,0,0,0,133,133,133,133,133,133,133,133,133,133,133,291,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,291,291,133,291,133,291,133,133,291,133,133,133,133,133,133,133,291,133,133,291,133,133,133,133,133,133,133,133,133,133,133,133,291,133,0,0,0,0,0,0,0,207,212,211,292,292,211,207,212,211,207,212,211,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,212,207,212,211,207,212,211,207,212,211,292,292,207,212,211,207,212,211,207,207,212,212,211,211,207,207,212,212,211,211,211,211,211,211,211,211,211,292,292,292,292,292,292,207,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,211,211,211,211,211,207,211,207,212,211,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,207,212,211,292,211,212,207,212,211,212,0,0,0,0,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[[13,[12,12]]],[[13,[12,12]]]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],24],0,0,0,0,0,[[],[[26,[6,25]]]],[[],[[26,[7,25]]]],[[],[[26,[8,25]]]],[[],[[26,[9,25]]]],[[],[[26,[10,25]]]],[[],[[26,[11,25]]]],[[],[[26,[13,25]]]],[[],[[26,[14,25]]]],[[],[[26,[15,25]]]],[[],[[26,[16,25]]]],[[],[[26,[19,25]]]],[[],[[26,[20,25]]]],[[],[[26,[21,25]]]],[[],[[26,[22,25]]]],[[],[[26,[23,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],6],[[],7],[[],10],[[],11],[[],[[13,[28,28]]]],[[],21],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[],[[26,[6]]]],[[],[[26,[7]]]],[[],[[26,[8]]]],[[],[[26,[9]]]],[[],[[26,[10]]]],[[],[[26,[11]]]],[[],[[26,[13]]]],[[],[[26,[14]]]],[[],[[26,[15]]]],[[],[[26,[16]]]],[[],[[26,[17]]]],[[],[[26,[18]]]],[[],[[26,[19]]]],[[],[[26,[20]]]],[[],[[26,[21]]]],[[],[[26,[22]]]],[[],[[26,[23]]]],0,0,[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[21,[[5,[3,4]]]],[6],[7],[8],[9],[10],[11],[13],[14],[15],[16],[19],[20],[21],[22],[23],[[6,6],30],[[7,7],30],[[8,8],30],[[9,9],30],[[10,10],30],[[11,11],30],[[[13,[31,31]],13],30],[[14,14],30],[[15,15],30],[[16,16],30],[[17,17],30],[[18,18],30],[[19,19],30],[[20,20],30],[[21,21],30],[[22,22],30],[[23,23],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,[6,27],[[6,32],33],[[7,32],33],[[8,32],33],[[9,32],33],[[10,32],33],[[11,32],33],[[[13,[34,34]],32],33],[[14,32],33],[[15,32],33],[[16,32],33],[[17,32],33],[[18,32],33],[[19,32],33],[[20,32],33],[[21,32],[[26,[35]]]],[[22,32],33],[[23,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,21],[[]],[[]],[[]],[[],[[26,[21,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,6],[[40,[24]]]],0,0,0,0,[41,[[26,[[5,[9]],42]]]],0,[6,26],[7,26],[8,26],[9,26],[10,26],[11,26],[13,26],[14,26],[15,26],[16,26],[17,26],[18,26],[19,26],[20,26],[21,26],[22,26],[23,26],0,0,0,0,0,[[21,43],29],0,0,0,0,0,[16,[[26,[18,42]]]],[16,[[26,[17,42]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[41,[[26,[11]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],[[45,[46]]]],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,29,48],[[26,[42]]]],[[]],[47,47],[49,49],[50,50],[48,48],[51,51],[52,52],[53,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[3,4]],[5,[47,4]]],[[26,[[5,[3,4]],42]]]],0,0,[[],[[26,[47,25]]]],[[],[[26,[49,25]]]],[[],[[26,[50,25]]]],[[],[[26,[48,25]]]],[[],[[26,[51,25]]]],[[],[[26,[52,25]]]],[[],[[26,[53,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[[5,[3,4]]],[[26,[42]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],48],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[],[[26,[47]]]],[[],[[26,[49]]]],[[],[[26,[50]]]],[[],[[26,[48]]]],[[],[[26,[51]]]],[[],[[26,[52]]]],[[],[[26,[53]]]],[29],[29],[29],[29],[29],[29],[29],[47],[49],[50],[48],[51],[52],[53],[[47,47],30],[[49,49],30],[[50,50],30],[[48,48],30],[[51,51],30],[[52,52],30],[[53,53],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[47,[5,[3,4]]],[[26,[[37,[2,4]],42]]]],[[47,[5,[3,4]],48],[[26,[[5,[3,4]],42]]]],[[47,[5,[3,4]]],[[26,[[5,[3,4]],42]]]],[47,[[26,[[37,[2,4]],42]]]],[[[5,[3,4]]],[[26,[42]]]],0,[[47,32],[[26,[35]]]],[[49,32],[[26,[35]]]],[[50,32],[[26,[35]]]],[[48,32],[[26,[35]]]],[[51,32],[[26,[35]]]],[[52,32],[[26,[35]]]],[[53,32],[[26,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[3,4]]],[[26,[42]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[47],[49],[50],[48],[51],[52],[53],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],0,0,0,0,[47,26],[49,26],[50,26],[48,26],[51,26],[52,26],[53,26],[[47,48],[[26,[29,42]]]],0,0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,55],[47],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[56]]]],[40,30],0,[[[57,[12,12]]],[[57,[12,12]]]],[[[58,[12,12,12]]],[[58,[12,12,12]]]],[59,59],[[]],[[]],[[]],[[],[[26,[57,25]]]],[[],[[26,[58,25]]]],[[],[[26,[59,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[60,61,40,40],62],[40],[29],[29],[29],[29],[29],[29],[29],[29],[29],[57],[58],[59],[[[57,[31,31]],57],30],[[[58,[31,31,31]],58],30],[[59,59],30],[[],30],[[],30],[[],30],[[59,40,40],62],[[59,40,40]],[[[57,[34,34]],32],33],[[[58,[34,34,34]],32],33],[[59,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[58,56]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[26,[56]]]],0,[63,[[26,[[5,[64]],56]]]],0,0,0,0,0,0,0,0,0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[65,[[26,[66]]]],[[65,67],[[26,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,69],[29],[29],[29],[29],[29],[29],[29],[29],[[[70,[69]]],69],[29],[29],[29],[29],[[65,71],[[26,[40,66]]]],[[65,67,71],[[26,[40,66]]]],[[72,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[],[[74,[73]]]],[[],73],[[],75],[[],[[74,[75]]]],[[],75],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,76],[[26,[30,66]]]],[[65,67,76],[[26,[30,66]]]],[[65,71],[[26,[77,66]]]],[[65,67,71],[[26,[77,66]]]],[[65,71],[[26,[77,66]]]],[[65,67,71],[[26,[77,66]]]],[[65,71],[[26,[77,66]]]],[[65,71],[[26,[77,66]]]],[[65,67,71],[[26,[77,66]]]],[[65,67,71],[[26,[77,66]]]],[[],27],[[],78],[[65,71,77,77],[[26,[5,66]]]],[[65,67,71,77,77],[[26,[5,66]]]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,71],[[26,[79,66]]]],[[65,67,71],[[26,[79,66]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],26],[[],2],[[],2],[[],2],[[],2],0,0,[[],80],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,80],[[[82,[[0,[12,81]]]]],[[82,[[0,[12,81]]]]]],[[]],[[]],[[],[[26,[80,25]]]],[[],[[26,[[82,[81]],25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],80],[[],[[82,[[0,[28,81]]]]]],[29],[29],[29],[29],[[],[[26,[80]]]],[[],[[26,[[82,[81]]]]]],[29],[29],[80],[[[82,[81]]]],[[80,80],30],[[[82,[[0,[31,81]]]],82],30],[[],30],[[],30],[[],[[40,[83]]]],[[80,32],33],[[[82,[81]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],0,0,[[],29],[[84,85],80],[80,26],[[[82,[81]]],26],0,0,[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],45],[[],45],[[]],[[]],[[]],[[]],[[],40],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[86,[[0,[12,81]]]]],[[86,[[0,[12,81]]]]]],[[]],0,[[],[[26,[[86,[81]],25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[[],[[26,[87]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[[86,[81]]]],[[[88,[81]]],[[26,[[88,[81]],87]]]],[[[86,[[0,[31,81]]]],86],30],[[87,87],30],[[],30],[[],30],[[[86,[81]],32],33],[[87,32],33],[[[88,[81]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[88,[81]]]],0,0,[[[86,[81]]]],[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],0,[[85,89,86],[[26,[87]]]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[91,91],[[[92,[12]]],[[92,[12]]]],[[[93,[12]]],[[93,[12]]]],[[[94,[12]]],[[94,[12]]]],[79,79],[95,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[26,[90,25]]]],[[],[[26,[91,25]]]],[[],[[26,[92,25]]]],[[],[[26,[93,25]]]],[[],[[26,[94,25]]]],[[],[[26,[79,25]]]],[[],[[26,[95,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],90],[[],94],[[],79],[[],95],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[],[[26,[90]]]],[29],[29],[29],[29],[29],[29],[29],[90],[91],[92],[93],[94],[79],[95],[[27,27],[[40,[27]]]],[[90,90],30],[[91,91],30],[[[92,[31]],92],30],[[[93,[31]],93],30],[[[94,[31]],94],30],[[79,79],30],[[95,95],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[90,32],33],[[91,32],33],[[92,32],33],[[93,32],33],[[94,32],33],[[79,32],33],[[95,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],0,0,0,[94,77],0,0,0,0,0,0,0,[[]],[90,26],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[96,[[40,[77]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],[[97,[28]]]],[29],[29],[29],[29],[29],[29],[[97,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],0,[98,26],[98,26],[99],[99],0,[[],26],[[],26],[[],26],[[],26],[[],44],[[],44],[[]],[[]],[[]],[[]],[[],26],[[98,71,95],26],[[98,71,95],26],[[],26],[[],26],[[],26],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[100,[12]]],[[100,[12]]]],[[]],0,[[],[[26,[100,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],100],[29],[29],[29],[29],[29],[29],[29],[29],[101],[101],[101,78],[101,78],[29],[29],[29],[29],[100],[[[100,[31]],100],30],[[],30],0,[[100,32],33],[[102,32],33],[[101,32],33],[[]],[[]],[92,[[102,[103]]]],[[]],[[]],[93,[[101,[103]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],0,0,0,0,[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[26,[[104,[93]]]]]],[27,[[26,[[104,[93]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[105,[[5,[3]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[106,[12]]],[[106,[12]]]],[[]],[[]],[68,105],[[],[[26,[106,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[[106,[31]],106],30],[[],30],[[106,32],33],[[107,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],75],[[],75],[[],[[74,[75]]]],[[],73],[[],73],[[],[[74,[73]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],78],[[108,109,110,111,112],106],0,[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[106,113]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29],[29],[29],[29],[29],[29],[29],[29],[[114,70],68],[114,68],[29],[29],[29],[29],[[115,115],30],[[],30],[[115,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,[[26,[117,115]]]],[117,[[26,[[40,[[5,[3]]]],115]]]],[[],27],[118,27],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[119,[[5,[120]]]],[[],2],[[],2],[[],2],[[],2],[[],[[5,[121]]]],0,[[],84],[[]],[[]],[[]],[[]],[120,120],[[[122,[12]]],[[122,[12]]]],[[]],[[]],[[],[[122,[81]]]],[29],[29],[29],[29],[29],[29],[[120,32],33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[],[[86,[81]]]],[[[122,[81]]],[[86,[81]]]],[120,123],[120,124],0,[120,125],0,[120,126],[[120,54,85],[[128,[127,121]]]],[[],81],[40,81],[[],5],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],44],[[],44],[[]],[[]],[[]],[[]],[[],[[89,[121]]]],0,[[]],[[]],0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[130,[[0,[12,129]]]]],[[130,[[0,[12,129]]]]]],[[[131,[[0,[12,129]],12]]],[[131,[[0,[12,129]],12]]]],[[]],[[]],0,[[],[[26,[[130,[129]],25]]]],[[],[[26,[[131,[129]],25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[[[130,[129]]]],[[[131,[129]]]],[[[130,[[0,[31,129]]]],130],30],[[[131,[[0,[31,129]],31]],131],30],[[],30],[[],30],[[[130,[[0,[34,129]]]],32],33],[[[131,[[0,[34,129]],34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[132,40],[[26,[131,56]]]],0,0,[[[5,[[5,[3]]]],40],[[130,[129]]]],[[133,[5,[[5,[134]]]]],[[131,[129]]]],[[132,130],62],[[132,135],62],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[5,[3]],[5,[3]],[40,[[5,[[5,[3]]]]]],[40,[[5,[3]]]]],[[26,[42]]]],[[[40,[[5,[3]]]],[40,[[5,[3]]]]],[[26,[[5,[3]],42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[60,60],[[[64,[12,12]]],[[64,[12,12]]]],[[]],[[]],[[]],[[],[[26,[61,25]]]],[[],[[26,[60,25]]]],[[],[[26,[64,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[61],[60],[64],[[61,61],30],[[60,60],30],[[[64,[31,31]],64],30],[[],30],[[],30],[[],30],[[61,32],33],[[60,32],33],[[[64,[34,34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[61,61],[[40,[24]]]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[]],[[]],[[],63],[[],63],[29],[29],[29],[[]],[[]],[[]],[[]],[[]],[[],29],[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],26],[[],26],[[],44],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[137,[136]]]],[[]],[[[138,[12]]],[[138,[12]]]],[[[63,[12]]],[[63,[12]]]],[[[137,[12]]],[[137,[12]]]],[[]],[[]],[[]],[[[138,[136]],138],24],[[[137,[136]]],30],[[],[[26,[138,25]]]],[[],[[26,[63,25]]]],[[],[[26,[137,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],[[138,[28]]]],[[],[[63,[[0,[139,140,141,[74,[27]],142]]]]]],[[],[[137,[28]]]],[29],[29],[29],[29],[29],[29],[[],[[26,[138]]]],[[],[[26,[137]]]],[29],[29],[29],[137,[[5,[3]]]],[138],[63],[137],[[[138,[31]],138],30],[[[63,[31]],63],30],[[[137,[31]],137],30],[[],30],[[],30],[[],30],[[138,32],33],[[63,32],33],[[137,32],33],[[]],[[]],[[]],[[[5,[136]]],[[137,[136]]]],[[[5,[136]]],[[137,[136]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[136]]],[[137,[136]]]],0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],29],[[],29],[[],29],[[[137,[136]],136],30],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[[138,[136]]],30],0,[[],29],[[],29],0,[[143,[0,[139,140,141,[74,[27]],142]],[0,[139,140,141,[74,[27]],142]]],[[63,[[0,[139,140,141,[74,[27]],142]]]]]],[[],[[137,[136]]]],[[[138,[142]],138],[[40,[24]]]],[[[137,[136]]],30],[138,26],[137,26],[[[63,[[0,[139,140,141,[74,[27]],142]]]],[0,[139,140,141,[74,[27]],142]]],30],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[[0,[139,140,141,[74,[27]],142]]]],[0,[139,140,141,[74,[27]],142]]]],[[137,113]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,30],[144,30],[144,30],[[]],[[]],[144,144],[145,145],[[]],[[]],[[],[[26,[144,25]]]],[[],[[26,[145,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],144],[[],145],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[],[[26,[146]]]],[29],[29],[29],[29],[29],[29],[29],[144],[145],[[144,144],30],[[145,145],30],[[],30],[[],30],[[147,32],33],[[148,32],33],[[148,32],33],[[149,32],33],[[149,32],33],[[150,32],33],[[150,32],33],[[146,32],33],[[146,32],33],[[144,32],33],[[145,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,144],[144,30],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[148,150],147],[[149,[5,[3]]],148],[[146,[5,[3]]],150],[[[5,[3]],[5,[3]],144,[5,[3]],[5,[[5,[3]]]],[40,[[5,[3]]]],[40,[[5,[3]]]],[40,[[5,[3]]]],[40,[[5,[3]]]],[40,[[5,[3]]]]],145],[148,26],[150,26],[146,26],[[],145],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],151],[[],151],[[],151],[[],151],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[145,144],145],0,0,0,0,0,0,[1],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],30],[[],30],[[],30],[[]],[[]],[[[152,[12,12]]],[[152,[12,12]]]],[[[153,[12,12,12,12]]],[[153,[12,12,12,12]]]],[[]],[[]],0,[[],[[26,[152,25]]]],[[],[[26,[153,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],[[152,[28,28]]]],[[],[[153,[28,28,28,28]]]],[29],[29],[29],[29],[29],[29],[152],[153],[[[152,[31,31]],152],30],[[[153,[31,31,31,31]],153],30],[[],30],[[],30],0,[[],[[26,[[153,[154]]]]]],[[40,[40,[[5,[3]]]]],[[26,[[5,[[153,[154]]]]]]]],[[152,32],33],[[153,32],33],[[]],[[]],[[[13,[155,155]],[5,[[51,[155,41,155]]]],[152,[155,155]],[40,[[5,[3]]]],[40,[[156,[155,155,155]]]],145],[[153,[155,155,155,155]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[153,[155,155,155,155]]],[[157,[129]]]],[[],30],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],0,[40,152],[[[5,[3]],[5,[3]],[152,[155,155]],[40,[[5,[3]]]],[5,[[51,[155,41,155]]]],[40,[[156,[155,155,155]]]],145],[[153,[155,155,155,155]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],5],[[],5],0,[[[158,[139]]],139],0,0,[[[160,[[0,[31,159,142]]]]],30],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[161,[12]]],[[161,[12]]]],[[[162,[12]]],[[162,[12]]]],[[[163,[12,12]]],[[163,[12,12]]]],[164,164],[165,165],[166,166],[[[167,[12]]],[[167,[12]]]],[[[158,[12]]],[[158,[12]]]],[[[168,[12,12]]],[[168,[12,12]]]],[[[169,[12]]],[[169,[12]]]],[170,170],[171,171],[[[160,[12]]],[[160,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[163,[136,31]],[163,[136,31]]],24],[[[158,[136]],158],24],[[[168,[136,136]],168],24],[[171,171],24],[[[160,[136]],160],24],[[]],[[],159],0,0,0,[[],[[26,[172,25]]]],[[],[[26,[161,25]]]],[[],[[26,[162,25]]]],[[],[[26,[173,25]]]],[[],[[26,[163,25]]]],[[],[[26,[164,25]]]],[[],[[26,[165,25]]]],[[],[[26,[166,25]]]],[[],[[26,[167,25]]]],[[],[[26,[158,25]]]],[[],[[26,[168,25]]]],[[],[[26,[169,25]]]],[[],[[26,[170,25]]]],[[],[[26,[171,25]]]],[[],[[26,[160,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],[[173,[28]]]],[[],[[163,[103,28]]]],[[],165],[[],[[160,[28]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[],[[26,[160]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[172],[161],[162],[173],[163],[164],[165],[166],[167],[158],[168],[169],[170],[171],[160],[[[161,[31]],161],30],[[[162,[31]],162],30],[[[173,[31,31]],[173,[31,31]]],30],[[[163,[31,31]],163],30],[[164,164],30],[[165,165],30],[[166,166],30],[[[167,[31]],167],30],[[[158,[31]],158],30],[[[168,[31,31]],168],30],[[[169,[31]],169],30],[[170,170],30],[[171,171],30],[[[160,[31]],160],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[172,32],33],[[161,32],33],[[162,32],33],[[173,32],33],[[163,32],33],[[164,32],33],[[165,32],33],[[166,32],33],[[167,32],33],[[158,32],33],[[168,32],33],[[169,32],33],[[170,32],33],[[171,32],33],[[160,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[168,169],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[163,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[159,159],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[163,[136,31]],[163,[136,31]]],[[40,[24]]]],[[[158,[142]],158],[[40,[24]]]],[[[168,[142,142]],168],[[40,[24]]]],[[171,171],[[40,[24]]]],[[[160,[142]],160],[[40,[24]]]],[[]],[[]],[[],[[26,[56]]]],[159,[[26,[159,56]]]],0,0,0,[160,26],[[]],[159,159],0,0,[[],[[5,[172]]]],[[],[[5,[[172,[159]]]]]],0,[[],[[5,[172]]]],[[],[[5,[[172,[159]]]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[],159],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],6,[40,[[5,[3]]]]],[[26,[16,42]]]],[[42,42,[5,[3]],[5,[3]],[5,[3]],[5,[3]],6],[[26,[16,42]]]],[[42,42,[5,[3]],[5,[3]],[5,[3]],[5,[3]],6,[40,[[5,[3]]]]],[[26,[16,42]]]],[[42,42,[5,[3]],[5,[3]],[5,[3]],[5,[3]],6,[40,[[5,[3]]]]],[[26,[16,42]]]],[[42,42,[5,[3]],[5,[3]],[5,[3]],[5,[3]],6,[40,[[5,[3]]]]],[[26,[16,42]]]],[[42,42,[5,[3]],[5,[3]],[5,[3]],[5,[3]],6,[40,[[5,[3]]]]],[[26,[16,42]]]],[[[5,[3]],6],[[26,[16,42]]]],[[[5,[3]],[40,[[5,[3]]]],6],[[26,[16,42]]]],[[[5,[3]],[5,[3]],[5,[3]],6],[[26,[16,42]]]],[[[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],[5,[3]],6],[[26,[16,42]]]],[[174,[176,[175]],6],[[26,[16,42]]]],[[[5,[3]],[5,[3]],[5,[3]],[5,[3]],5,6],[[26,[16,42]]]],0,[[30,42],[[26,[42]]]],[177,[[26,[[5,[[5,[177]]]],42]]]],[177,[[26,[42]]]],[177,177],0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,178],[179,179],[[]],[[]],[[],[[26,[178,25]]]],[[],[[26,[179,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],179],[29],[29],[29],[29],[[],[[26,[178]]]],[[],[[26,[179]]]],0,[29],[29],[178],[179],[[178,178],30],[[179,179],30],[[],30],[[],30],0,[[178,32],33],[[179,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[],30],[179,30],[[],29],[[],29],[178,26],[179,26],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],0,[[],2],[[],2],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[180,180],[[]],[[[5,[3]],[5,[3]]],[[26,[56]]]],[[],[[26,[180,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[180],0,[[180,180],30],[[],30],0,[[180,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[41,[[26,[[40,[[5,[3]]]],56]]]],[41,[[26,[[40,[[5,[3]]]],56]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],0,[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],45],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],[[5,[181]]]],[[],[[5,[47]]]],[[],[[5,[181]]]],[[],[[5,[181]]]],[[]],[[],182],[[],[[5,[181]]]],[[],[[5,[181]]]],[[[5,[183]],133,[40,[183]]],[[26,[42]]]],[[[5,[183]],48,133,[40,[183]]],[[26,[42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[184,184],[134,134],[185,185],[186,186],[187,187],[[[188,[12,12,12]]],[[188,[12,12,12]]]],[[[189,[12,12,12]]],[[189,[12,12,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[187,187],24],0,0,0,0,0,0,[[],[[26,[184,25]]]],[[],[[26,[134,25]]]],[[],[[26,[185,25]]]],[[],[[26,[186,25]]]],[[],[[26,[187,25]]]],[[],[[26,[188,25]]]],[[],[[26,[189,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],134],[[],185],[[],187],[[],[[189,[28,28,28]]]],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[184],[134],[185],[186],[187],[188],[189],0,0,0,0,0,0,[[184,184],30],[[134,134],30],[[185,185],30],[[186,186],30],[[187,187],30],[[190,190],30],[[[188,[31,31,31]],188],30],[[[189,[31,31,31]],189],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,[189],[188,189],[[184,32],[[26,[35]]]],[[134,32],[[26,[35]]]],[[185,32],[[26,[35]]]],[[186,32],[[26,[35]]]],[[187,32],[[26,[35]]]],[[190,32],[[26,[35]]]],[[188,32],33],[[189,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[184,27]],[[188,[191,[129]]]],[188],[189],[189,40],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[188,30],[[],30],[[],30],[[],30],[[],30],[188,30],0,[40,189],0,0,[[187,187],[[40,[24]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[3,4]]],[[26,[184]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[188,[[26,[134]]]],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],[[45,[46]]]],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[192,192],[[]],0,0,[[],[[26,[192,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],192],[29],[29],[[],[[26,[192]]]],[29],[192],[[192,192],30],[[],30],0,[[192,32],33],[[]],[[]],[[]],[[]],[[]],[192],[192,[[5,[181]]]],[192,[[5,[47]]]],[192,[[5,[181]]]],[192,[[5,[181]]]],[192],[192,182],[192,[[5,[181]]]],[192,[[5,[181]]]],0,[[],[[5,[3,4]]]],[[],29],[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],30],0,0,[192,26],[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],45],[[]],[[]],[[]],0,0,0,[[[5,[3]],181,47],[[26,[42]]]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[193,193],[194,194],[[]],[[]],[[],[[26,[193,25]]]],[[],[[26,[194,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[193],[194],[[193,193],30],[[194,194],30],[[],30],[[],30],[[193,32],33],[[194,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[48,42]]]],[[]],[[],194],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[[5,[3]]],[[26,[195,42]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[]],[[]],[[]],[[]],[[47,29,29],[[26,[[5,[3]],42]]]],[5,[[26,[[5,[[5,[3]]]],42]]]],[[]],[[]],0,0,0,0,[1],0,[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[156,196],[[]],[[[156,[12,12,12]]],[[156,[12,12,12]]]],[[]],0,[[],[[26,[156,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],0,[[],[[156,[28,28,28]]]],[29],[29],[29],[156],[[[156,[31,31,31]],156],30],[[],30],[[156,32],33],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],29],[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],30],0,0,0,0,0,[[],[[5,[3,4]]]],[[]],0,[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],45],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[[197,[129]],25]]]],[[],[[26,[198,25]]]],[[],[[26,[199,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],200],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[[197,[129]]],[[5,[3]]]],[[[197,[129]]]],[198],[199],[[199,199],30],[[],30],[[199,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[56]]]],[[],[[40,[152]]]],[[],5],[[[201,[129]]],[[40,[131]]]],[[],144],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[144,[[26,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,[[26,[201,56]]]],[[3,5]],[40,[[26,[131,56]]]],[[],[[40,[3]]]],[40,200],[[],[[26,[153,56]]]],[144,[[26,[56]]]],0,[152],[144],[144,[[26,[56]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[59,202],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[40,[152]]],[[26,[56]]]],[[],[[26,[56]]]],[[],[[26,[200,56]]]],[[],[[26,[200,56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[197,[129]],113]],[203,26],[144,[[26,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],68],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[204,204],[[]],[[],62],0,[[],[[26,[204,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],204],[29],[29],[29],[204],[[204,204],30],[[],30],[[[154,[129,[205,[129]]]],5],[[26,[56]]]],[[204,32],33],[[]],[[]],[[]],[[]],[[]],[68,[[0,[103,155]]]],[[],[[5,[3,4]]]],[[],29],[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],30],[[[154,[129,[205,[129]]]]],62],0,[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[]],[[]],0,[[]],0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[133,133],[[]],[[155,[5,[3]]],30],[[],[[26,[133,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],133],[29],[29],[29],[133,[[5,[3]]]],[133],[[133,133],30],[[],30],[[133,32],33],[[]],[[]],[[]],[[]],[[]],[155,[[40,[5]]]],[[],206],[133,206],[[],206],[133,206],[[]],[[],[[5,[3,4]]]],[[],29],[[155,[5,[3]]],[[26,[42]]]],[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],30],[155],[[],133],0,[[183,183],183],[[],[[5,[3,4]]]],[[]],[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],45],[[]],[[]],[[133,113]],[[[5,[3]]],[[26,[[5,[3]],42]]]],[[]],0,0,0,0,0,0,0,[1],[1],[1],[[132,[5,[3]],41,[40,[207]],48,7,6,10,11,[5,[3]],[5,[208]]],62],[41,[[210,[[37,[209]]]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[211,[155]],155]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[207,207],[[[212,[12]]],[[212,[12]]]],[[[211,[12]]],[[211,[12]]]],[[]],[[]],[[]],[[],[[26,[207,25]]]],[[],[[26,[212,25]]]],[[],[[26,[211,25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[29],[29],[29],[29],[29],[29],[[],[[26,[207]]]],[[],[[26,[212]]]],[[],[[26,[211]]]],[29],[29],[29],[212,[[5,[3]]]],[207],[212],[211],[[207,207],30],[[[212,[31]],212],30],[[[211,[31]],211],30],[[],30],[[],30],[[],30],[[],[[5,[211]]]],[[],[[26,[[37,[209]],56]]]],[[207,32],33],[[[212,[34]],32],33],[[[211,[34]],32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[[211,[155]]],213],[41,[[26,[48,56]]]],[41,[[26,[27,56]]]],[41,[[26,[[5,[3]],56]]]],[41,6],[41,47],[41,[[26,[7,56]]]],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[5,[3]],41,[40,[207]],48,7,6,10,11,[5,[3]],[5,[208]]],[[211,[155]]]],[[[5,[3]],48,[40,[[5,[3]]]],3,[5,[3]],41,[40,[207]],7,6,11,[40,[155]],[5,[3]],[40,[54]],[5,[208]]],[[211,[155]]]],0,0,0,0,[207,26],[212,26],[211,26],[[[211,[155]],54]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[41,54],214],0,[[212,113]],[[]],[[]],[[]],0,0,0,0,0,[1],[[],2],[[],2],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[[215,[12,12,12]]],[[215,[12,12,12]]]],[[]],[[[215,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]],[186,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]],[184,[[0,[155,12,34]],[0,[139,159,155,103,12,34]]]],27],[[26,[30,42]]]],[[],[[26,[215,25]]]],[[],[[26,[25]]]],[27,[[26,[25]]]],[27,[[26,[25]]]],[[],[[215,[28,28,28]]]],0,[29],[29],[29],[215],[[[215,[31,31,31]],215],30],[[],30],[[215,32],33],[[]],[[]],[[]],[[]],[[]],0,[[[215,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]],27]],[[],[[5,[3,4]]]],[[],29],0,[[]],[[[37,[4]]],[[37,[2,4]]]],[38,[[38,[2]]]],[39,[[39,[2]]]],[[]],[[]],[[],30],[[[215,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]]],30],0,[[[0,[155,12,34]],[5,[3]],[40,[[0,[136,139,159,155,12,34]]]],[40,[[5,[[0,[136,139,159,155,12,34]]]]]],[40,[[0,[139,159,155,103,12,34]]]],133,[5,[[5,[[188,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]]]]]]],[[215,[[0,[155,12,34]],[0,[136,139,159,155,12,34]],[0,[139,159,155,103,12,34]]]]]],0,0,0,[[],[[5,[3,4]]]],[[]],0,[[],26],[[],26],[[]],[[]],[[],[[5,[3,4]]]],[[],44],[[],45],[[]],[[]],[[]]],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"GatewayType"],[4,"GatewayVendor"],[3,"GenericPrimitivesHeader"],[3,"GatewayPointer"],[3,"GatewayGenesisConfig"],[3,"GatewaySysProps"],[8,"Clone"],[3,"Compose"],[4,"ReadLatestGatewayHeight"],[4,"ContractAccessError"],[3,"CircuitOutboundMessage"],[3,"RpcPayloadUnsigned"],[3,"RpcPayloadSigned"],[4,"ProofTriePointer"],[3,"CircuitInboundResult"],[3,"UncheckedExtrinsic"],[4,"GatewayExpectedOutput"],[3,"ExtraMessagePayload"],[4,"Ordering"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Default"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[3,"UncheckedExtrinsic"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Option"],[6,"ChainId"],[15,"str"],[3,"MallocSizeOfOps"],[3,"TypeId"],[3,"Type"],[4,"MetaForm"],[4,"Type"],[3,"GatewayABIConfig"],[4,"HasherAlgo"],[4,"CryptoAlgo"],[3,"ContractActionDesc"],[3,"Parameter"],[3,"StructDecl"],[15,"u64"],[4,"RuntimeString"],[4,"DispatchError"],[3,"Settlement"],[3,"RequestCharge"],[4,"Outcome"],[4,"BenefitSource"],[4,"CircuitRole"],[6,"DispatchResult"],[3,"RoundInfo"],[3,"ClaimableArtifacts"],[4,"BlockId"],[4,"ApiError"],[4,"ExecutionContext"],[3,"H256"],[6,"AccountId"],[4,"SourceAccount"],[6,"LaneId"],[3,"Circuit"],[3,"BlockWeights"],[8,"From"],[3,"BlockLength"],[6,"Hash"],[6,"MessageNonce"],[6,"Weight"],[3,"UnrewardedRelayersState"],[3,"AuthoritySet"],[8,"Header"],[3,"InitializationData"],[3,"ScheduledChange"],[6,"AuthorityList"],[6,"SetId"],[3,"GrandpaJustification"],[4,"Error"],[3,"AncestryChain"],[3,"VoterSet"],[4,"OperatingMode"],[3,"MessageKey"],[3,"MessageData"],[3,"Message"],[3,"InboundLaneData"],[3,"OutboundLaneData"],[3,"VecDeque"],[3,"RelayerRewards"],[6,"Sender"],[6,"RelayersRewards"],[3,"ProvedLaneMessages"],[3,"DispatchMessage"],[3,"DispatchMessageData"],[8,"Decode"],[6,"ProvedMessages"],[6,"AccountId"],[3,"SignedExtensions"],[3,"Rococo"],[3,"RuntimeVersion"],[4,"Era"],[6,"Hash"],[6,"Nonce"],[6,"Balance"],[8,"FnOnce"],[6,"ChainId"],[4,"StorageProofError"],[3,"StorageProof"],[3,"StorageProofChecker"],[3,"PreComputedSize"],[15,"u16"],[3,"Account"],[6,"AuthorityId"],[3,"JustificationGeneratorParams"],[3,"Keypair"],[3,"PublicKey"],[3,"SecretKey"],[3,"Signature"],[6,"AuthoritySignature"],[3,"SignedPrecommit"],[8,"Config"],[3,"LocalTrigger"],[3,"LocalStateExecutionView"],[6,"OriginFor"],[3,"LocalState"],[3,"HardenedSideEffect"],[3,"ExecutionSignal"],[8,"Ord"],[3,"OrderedSet"],[3,"Range"],[8,"Copy"],[8,"Add"],[8,"Sub"],[8,"PartialOrd"],[6,"RoundIndex"],[4,"ContractType"],[3,"ContractMetadata"],[4,"Compiler"],[3,"Source"],[3,"SourceLanguage"],[4,"Language"],[3,"SourceCompiler"],[3,"String"],[3,"AuthorInfo"],[3,"RegistryContract"],[6,"EscrowedBalanceOf"],[8,"Encode"],[3,"RawAliveContractInfo"],[6,"RegistryContractId"],[4,"StakingAction"],[8,"Zero"],[3,"Fixtures"],[4,"StakeAdjust"],[4,"StakerAdded"],[3,"Bond"],[4,"StakerStatus"],[4,"ExecutorStatus"],[4,"CapacityStatus"],[3,"CandidateBondLessRequest"],[3,"ScheduledStakingRequest"],[3,"CancelledScheduledStakingRequest"],[3,"ExecutorInfo"],[3,"ScheduledConfigurationRequest"],[3,"NominatedStake"],[3,"ExecutorSnapshot"],[6,"GenericAddress"],[15,"u128"],[3,"Compact"],[6,"StrLike"],[4,"BeneficiaryRole"],[3,"InflationAllocation"],[3,"RegistrationData"],[6,"EventSignature"],[6,"SideEffectName"],[6,"Bytes"],[3,"SideEffect"],[4,"ConfirmationOutcome"],[3,"ConfirmedSideEffect"],[4,"SecurityLvl"],[3,"FullSideEffect"],[3,"SFXBid"],[4,"Error"],[6,"XExecSignalId"],[3,"SideEffectInterface"],[3,"Signature"],[4,"Surrounding"],[6,"RawSideEffectHeader"],[4,"ChildInfo"],[3,"GetState"],[4,"PrecompileArgs"],[4,"SignalOpcode"],[3,"Remunerated"],[4,"PrecompileInvocation"],[6,"DispatchResult"],[4,"Characteristic"],[3,"TransferEntry"],[8,"EscrowTrait"],[6,"State"],[3,"Parachain"],[6,"AllowedSideEffect"],[8,"SideEffectProtocol"],[3,"BTreeMap"],[3,"XdnsRecord"],[3,"FetchXdnsRecordsResponse"],[6,"XdnsRecordId"],[6,"DispatchResultWithPostInfo"],[3,"Xtx"],[13,"Extrinsic"],[13,"Storage"],[13,"Output"],[13,"Events"],[13,"ProgrammableInternal"],[13,"ProgrammableExternal"],[13,"TxOnly"],[13,"OnCircuit"],[13,"Success"],[13,"Address"],[13,"Int"],[13,"Uint"],[13,"Bytes"],[13,"Enum"],[13,"Struct"],[13,"Mapping"],[13,"Ref"],[13,"Option"],[13,"StorageRef"],[13,"Hasher"],[13,"Crypto"],[8,"AccountManager"],[3,"AccountIdConverter"],[3,"BlockWeights"],[3,"BlockLength"],[8,"CircuitFinalityApi"],[8,"ToCircuitOutboundLaneApi"],[8,"FromCircuitInboundLaneApi"],[8,"InclusionProofVerifier"],[8,"HeaderChain"],[8,"FinalityProof"],[8,"Parameter"],[8,"TargetHeaderChain"],[8,"LaneMessageVerifier"],[8,"MessageDeliveryAndDispatchPayment"],[3,"ForbidOutboundMessages"],[8,"MessageDispatch"],[8,"SourceHeaderChain"],[3,"ForbidInboundMessages"],[3,"AccountIdConverter"],[3,"BlockLength"],[3,"BlockWeights"],[8,"Convert"],[8,"Chain"],[8,"Size"],[13,"Account"],[8,"OnLocalTrigger"],[8,"CircuitPortal"],[3,"ClockMock"],[8,"Clock"],[8,"ContractsRegistry"],[8,"KindValidator"],[8,"Executors"],[3,"ExecutorsMock"],[13,"Leaving"],[13,"Increase"],[13,"ToTop"],[13,"Revoke"],[13,"Decrease"],[8,"GatewayInboundProtocol"],[3,"ErrorMsg"],[8,"Portal"],[13,"MisbehaviourMalformedValues"],[8,"VendorSideEffectsParser"],[8,"HasXDNSAccess"],[8,"ThreeVm"],[8,"ModuleOperations"],[8,"Precompile"],[8,"LocalStateAccess"],[8,"Remuneration"],[8,"CharacteristicValidator"],[13,"GetState"],[13,"SubmitSideEffects"],[13,"Signal"],[13,"GetState"],[8,"Volatile"],[8,"Xdns"]]},\
"t3rn_types":{"doc":"","t":[6,0,0,13,13,13,13,13,3,13,4,13,13,13,13,13,3,13,4,13,13,13,13,13,13,3,13,13,13,13,13,13,3,4,13,13,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,4,3,17,17,4,13,6,3,13,3,17,13,17,13,17,4,3,6,13,17,6,13,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Bytes","abi","side_effect","Address","Blake2","Bool","Bytes","Contract","ContractActionDesc","Crypto","CryptoAlgo","DynamicAddress","DynamicBytes","Ecdsa","Ed25519","Enum","GatewayABIConfig","Hasher","HasherAlgo","Int","Keccak256","Mapping","Option","OptionalInsurance","OptionalReward","Parameter","Ref","Slice","Sr25519","StorageRef","String","Struct","StructDecl","Type","Uint","Value","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action_id","address_length","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_number_type_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_length","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_signature","crypto","decimals","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_buf2val","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval_abi","eval_to_encoded","eval_trait_dynamically","extract_property_names_from_signature_as_bytes","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_string","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signature_to_abi","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash_size","hasher","indexed","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_clear","name","name","no","offsets","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_of","structs","target_id","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_type_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","1","1","ADD_LIQUIDITY_SIDE_EFFECT_ID","ASSETS_TRANSFER_SIDE_EFFECT_ID","CALL_SIDE_EFFECT_ID","COMPOSABLE_CALL_SIDE_EFFECT_ID","ConfirmationOutcome","ConfirmedSideEffect","DATA_SIDE_EFFECT_ID","EVM_CALL_SIDE_EFFECT_ID","Error","Escrow","EventSignature","FullSideEffect","HardeningMissingConfirmationError","Insurance","MULTI_TRANSFER_SIDE_EFFECT_ID","MisbehaviourMalformedValues","ORML_TRANSFER_SIDE_EFFECT_ID","Optimistic","SWAP_SIDE_EFFECT_ID","SecurityLvl","SideEffect","SideEffectName","Success","TRANSFER_SIDE_EFFECT_ID","TargetId","TimedOut","WASM_CALL_SIDE_EFFECT_ID","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","confirmation_outcome","confirmed_cost","confirmed_executioner","confirmed_received_at","cost","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_action","encoded_action","encoded_args","encoded_args","encoded_args_abi","enforce_executor","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","executioner","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_id","id_as_bytes","inclusion_data","index","init","init","init","init","init","init","init","insurance","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_clear","is_clear","is_clear","max_encoded_len","max_reward","output","partial_cmp","prize","received_at","reward_asset_id","security_lvl","signature","target","target","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","key","received"],"q":["t3rn_types","","","t3rn_types::abit3rn_types::abi::Type","","","","","","","","","","","","","","t3rn_types::side_effectt3rn_types::side_effect::ConfirmationOutcome","",""],"d":["","","","","","","where u8 is bytes length","","","","","","","","","","Describe ABI configuration for a gateway so that it’s …","","","","","","","","","","","DynamicBytes and String are lowered to a vector.","","","","","","ToDo: Introduce Compact Encoding for u8 + u16 + u32","","There is no way to declare value in Solidity (should there …","","","","","","","","","address length in bytes","","","","","","","","","","","","","","","block number type in bytes","","","","","","","","","","","","","","","Checks that the encoded argument has the same length as …","","","","","","","","","","","","","","","","","cryptography algorithm","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval assumes encoded_val is bytes Vector encoded with SCALE","eval assumes encoded_val is bytes Vector encoded with SCALE","","","","list of fields, each of them will have corresponding no.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","hash size in bytes","hashing algorithm","is indexed - follows the ethereum logs pattern where …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The name can empty (e.g. in an event field or unnamed …","encoded name of the struct","number in order","List of offsets of the fields, last entry is the offset …","","","","","","","","Calculate how much memory we expect this type to use when …","value length in bytes. ToDo: move as part of metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ABI type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value length in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expected confirmation to FSX wasn’t there while …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,8,3,3,3,0,3,0,3,3,9,9,3,0,3,0,3,8,3,3,3,3,0,3,3,9,3,3,3,0,0,3,3,3,8,9,5,11,12,13,11,5,3,8,9,5,11,12,13,3,8,9,5,11,12,13,5,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,5,3,8,9,5,11,12,13,3,8,9,5,11,12,13,0,5,5,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,0,3,8,9,5,11,12,13,5,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,3,0,0,0,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,0,3,8,9,5,11,12,13,3,8,9,5,11,12,13,0,3,8,9,5,11,12,13,3,8,9,5,11,12,13,5,5,12,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,5,12,13,12,13,3,8,9,5,11,12,13,3,5,11,11,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,3,3,8,9,5,11,12,13,3,8,9,5,11,12,13,12,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,3,8,9,5,11,12,13,5,3,8,9,5,11,12,13,42,43,44,45,46,47,48,49,50,51,52,53,48,52,0,0,0,0,0,0,0,0,0,38,0,0,40,0,0,36,0,38,0,0,0,0,36,0,0,36,0,33,34,35,36,37,38,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,34,36,38,33,34,35,36,37,38,33,34,35,36,37,38,38,34,34,34,34,37,33,34,35,36,37,38,33,34,35,36,37,38,33,34,35,36,37,38,33,34,35,36,37,38,34,36,38,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,33,34,33,34,34,33,33,34,35,36,37,38,40,33,34,35,36,37,38,40,37,37,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,33,37,34,33,34,35,36,37,38,40,33,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,34,36,38,35,33,37,38,34,37,33,34,33,33,34,33,34,35,36,37,38,33,34,35,36,37,38,33,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,36,37,38,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,54,54,54],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4,5],[[7,[6]]]],[[]],[3,3],[8,8],[9,9],[5,5],[[[11,[10,10,10]]],[[11,[10,10,10]]]],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]],[15,[3]]],[[7,[[15,[14]],6]]]],0,0,[[],[[7,[3,16]]]],[[],[[7,[8,16]]]],[[],[[7,[9,16]]]],[[],[[7,[5,16]]]],[[],[[7,[11,16]]]],[[],[[7,[12,16]]]],[[],[[7,[13,16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[[[15,[14]]],[[7,[18,6]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[[],5],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[7,[3]]]],[[],[[7,[8]]]],[[],[[7,[9]]]],[[],[[7,[5]]]],[[],[[7,[11]]]],[[],[[7,[12]]]],[[],[[7,[13]]]],[4],[4],[4],[4],[4],[4],[4],[3],[8],[9],[5],[11],[12],[13],[[3,3],19],[[8,8],19],[[9,9],19],[[5,5],19],[[[11,[20,20,20]],11],19],[[12,12],19],[[13,13],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[3,[15,[14]]],[[7,[[21,[2]],6]]]],[[3,[15,[14]],5],[[7,[[15,[14]],6]]]],[[3,[15,[14]]],[[7,[[15,[14]],6]]]],[3,[[7,[[21,[2]],6]]]],[[[15,[14]]],[[7,[6]]]],0,[[3,22],23],[[8,22],23],[[9,22],23],[[5,22],23],[[[11,[24,24,24]],22],23],[[12,22],23],[[13,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]]],[[7,[6]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[3],[8],[9],[5],[[[11,[26,26,26]]]],[12],[13],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[[],19],0,0,0,0,[3,7],[8,7],[9,7],[5,7],[11,7],[12,7],[13,7],[[3,5],[[7,[4,6]]]],0,0,0,[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,30],[3],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[10,10]]],[[33,[10,10]]]],[[[34,[10,10,10]]],[[34,[10,10,10]]]],[[[35,[10]]],[[35,[10]]]],[36,36],[[[37,[10,10,10]]],[[37,[10,10,10]]]],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[38,38],39],0,0,0,0,0,[[],[[7,[33,16]]]],[[],[[7,[34,16]]]],[[],[[7,[35,16]]]],[[],[[7,[36,16]]]],[[],[[7,[37,16]]]],[[],[[7,[38,16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[[],[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[17,[[7,[16]]]],[[],34],[[],36],[[],38],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[33],[34],[35],[36],[37],[38],0,0,0,0,0,0,[[[33,[20,20]],33],19],[[[34,[20,20,20]],34],19],[[[35,[20]],35],19],[[36,36],19],[[[37,[20,20,20]],37],19],[[38,38],19],[[40,40],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[[33,[24,24]],22],23],[[[34,[24,24,24]],22],23],[[[35,[24]],22],23],[[36,22],23],[[[37,[24,24,24]],22],23],[[38,22],23],[[40,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,17]],[[],[[15,[14]]]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[[[21,[27]]],[[21,[2,27]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[28,[[28,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[29,[[29,[2]]]],[[],19],[[],19],[[],19],[[],4],0,0,[[38,38],[[41,[39]]]],0,0,0,0,0,0,0,[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[],[[15,[14,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[[15,[14]]],[[7,[33]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0],"p":[[3,"Private"],[8,"Any"],[4,"Type"],[15,"usize"],[3,"GatewayABIConfig"],[15,"str"],[4,"Result"],[4,"HasherAlgo"],[4,"CryptoAlgo"],[8,"Clone"],[3,"ContractActionDesc"],[3,"Parameter"],[3,"StructDecl"],[15,"u8"],[3,"Vec"],[3,"Error"],[15,"u32"],[8,"Decode"],[15,"bool"],[8,"PartialEq"],[3,"Box"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"u64"],[8,"Hash"],[3,"Global"],[3,"Arc"],[3,"Rc"],[4,"RuntimeString"],[3,"TypeId"],[3,"Type"],[3,"SideEffect"],[3,"FullSideEffect"],[3,"Insurance"],[4,"ConfirmationOutcome"],[3,"ConfirmedSideEffect"],[4,"SecurityLvl"],[4,"Ordering"],[4,"Error"],[4,"Option"],[13,"Address"],[13,"Int"],[13,"Uint"],[13,"Bytes"],[13,"Enum"],[13,"Struct"],[13,"Mapping"],[13,"Ref"],[13,"Option"],[13,"StorageRef"],[13,"Hasher"],[13,"Crypto"],[13,"MisbehaviourMalformedValues"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
