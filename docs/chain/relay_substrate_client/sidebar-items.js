window.SIDEBAR_ITEMS = {"enum":[["Error","Errors that can occur only when interacting with a Substrate node through RPC."]],"mod":[["finality_source","Default generic implementation of finality source for basic Substrate client."],["guard","Pallet provides a set of guard functions that are running in background threads and are aborting process if some condition fails."],["headers_source","Default generic implementation of headers source for basic Substrate client."],["metrics","Contains several Substrate-specific metrics that may be exposed by relay."],["rpc","The most generic Substrate node RPC interface."]],"struct":[["Client","Substrate client type."],["ConnectionParams","Substrate-over-websocket connection params."],["SyncHeader","Generic wrapper for `sp_runtime::traits::Header` based headers, that implements `headers_relay::sync_types::SourceHeader` and may be used in headers sync directly."]],"trait":[["BlockWithJustification","Block with justification."],["Chain","Substrate-based chain from minimal relay-client point of view."],["ChainBase","Minimal Substrate-based chain representation that may be used from no_std environment."],["ChainWithBalances","Substrate-based chain with `frame_system::Config::AccountData` set to the `pallet_balances::AccountData<NativeBalance>`."],["TransactionSignScheme","Substrate-based chain transactions signing scheme."]],"type":[["BlockNumberOf","Block number used by the chain."],["HashOf","Hash type used by the chain."],["HeaderIdOf","Header id used by the chain."],["HeaderOf","Header type used by the chain."],["JustificationsSubscription","Opaque justifications subscription type."],["OpaqueGrandpaAuthoritiesSet","Opaque GRANDPA authorities set."],["Result","Result type used by Substrate client."]]};