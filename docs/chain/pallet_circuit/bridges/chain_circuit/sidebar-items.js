window.SIDEBAR_ITEMS = {"constant":[["ADDITIONAL_MESSAGE_BYTE_DELIVERY_WEIGHT","Increase of delivery transaction weight on Circuit chain with every additional message byte."],["AVERAGE_ON_INITIALIZE_RATIO","Represents the average portion of a blockâ€™s weight that will be used by an `on_initialize()` runtime call."],["BEST_FINALIZED_CIRCUIT_HEADER_METHOD","Name of the `CircuitFinalityApi::best_finalized` runtime method."],["DAYS",""],["DEFAULT_MESSAGE_DELIVERY_TX_WEIGHT","Weight of single regular message delivery transaction on Circuit chain."],["EXTRA_STORAGE_PROOF_SIZE","Number of extra bytes (excluding size of storage value itself) of storage proof, built at Circuit chain. This mostly depends on number of entries (and their density) in the storage trie. Some reserve is reserved to account future chain growth."],["FROM_CIRCUIT_LATEST_CONFIRMED_NONCE_METHOD","Name of the `FromCircuitInboundLaneApi::latest_onfirmed_nonce` runtime method."],["FROM_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","Name of the `FromCircuitInboundLaneApi::latest_received_nonce` runtime method."],["FROM_CIRCUIT_UNREWARDED_RELAYERS_STATE","Name of the `FromCircuitInboundLaneApi::unrewarded_relayers_state` runtime method."],["HOURS",""],["MAXIMAL_ENCODED_ACCOUNT_ID_SIZE","Maximal size (in bytes) of encoded (using `Encode::encode()`) account id."],["MAXIMUM_BLOCK_WEIGHT","Maximum weight of single Circuit block."],["MAX_SINGLE_MESSAGE_DELIVERY_CONFIRMATION_TX_WEIGHT","Maximal weight of single message delivery confirmation transaction on Circuit chain."],["MAX_UNCONFIRMED_MESSAGES_AT_INBOUND_LANE","Maximal number of unconfirmed messages at inbound lane."],["MAX_UNREWARDED_RELAYER_ENTRIES_AT_INBOUND_LANE","Maximal number of unrewarded relayer entries at inbound lane."],["MILLISECS_PER_BLOCK",""],["MINUTES",""],["NORMAL_DISPATCH_RATIO","Represents the portion of a block that will be used by Normal extrinsics."],["SESSION_LENGTH","The target length of a session (how often authorities change) on Circuit measured in of number of blocks."],["SLOT_DURATION",""],["TO_CIRCUIT_ESTIMATE_MESSAGE_FEE_METHOD","Name of the `ToCircuitOutboundLaneApi::estimate_message_delivery_and_dispatch_fee` runtime method."],["TO_CIRCUIT_LATEST_GENERATED_NONCE_METHOD","Name of the `ToCircuitOutboundLaneApi::latest_generated_nonce` runtime method."],["TO_CIRCUIT_LATEST_RECEIVED_NONCE_METHOD","Name of the `ToCircuitOutboundLaneApi::latest_received_nonce` runtime method."],["TO_CIRCUIT_MESSAGES_DISPATCH_WEIGHT_METHOD","Name of the `ToCircuitOutboundLaneApi::messages_dispatch_weight` runtime method."],["TX_EXTRA_BYTES","Number of bytes, included in the signed Circuit transaction apart from the encoded call itself."]],"fn":[["derive_account_from_gateway_id","We use this to get the account on Circuit (target) which is derived from Gateway (source) account. We do this so we can fund the derived account on Circuit at Genesis to it can pay transaction fees."],["max_extrinsic_size","Get the maximum length in bytes that a Normal extrinsic on the Circuit chain requires."],["max_extrinsic_weight","Get the maximum weight (compute time) that a Normal extrinsic on the Circuit chain can use."]],"mod":[["time_units","Human readable time units defined in terms of number of blocks."]],"struct":[["AccountIdConverter","Convert a 256-bit hash into an AccountId."],["BlockLength",""],["BlockWeights","We allow for 2 seconds of compute with a 6 second average block time."],["Circuit","Circuit chain."]],"trait":[["CircuitFinalityApi","API for querying information about the finalized Circuit headers."],["FromCircuitInboundLaneApi","Inbound message lane API for messages sent by Circuit chain."],["ToCircuitOutboundLaneApi","Outbound message lane API for messages that are sent to Circuit chain."]],"type":[["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["AccountSigner","Public key of the chain account that may be used to verify signatures."],["Balance","Balance of an account."],["BlockNumber","Block number type used in Circuit."],["Hash","Hash type used in Circuit."],["Hasher","The type of an object that can produce hashes on Circuit."],["Header","The header type used by Circuit."],["Index","Index of a transaction in the chain."],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."]]};